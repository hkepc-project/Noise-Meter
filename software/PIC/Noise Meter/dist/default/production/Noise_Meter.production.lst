

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 27 03:24:51 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F19156
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text29,local,class=CODE,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text42,local,class=CODE,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,merge=1,delta=2
    72                           	psect	text47,local,class=CODE,merge=1,delta=2
    73                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text51,local,class=CODE,merge=1,delta=2
    77                           	psect	text52,local,class=CODE,merge=1,delta=2
    78                           	psect	text53,local,class=CODE,merge=1,delta=2
    79                           	dabs	1,0xCA0,32
    80                           	dabs	1,0xC20,80
    81                           	dabs	1,0xBA0,80
    82                           	dabs	1,0xB20,80
    83                           	dabs	1,0xAA0,80
    84                           	dabs	1,0xA20,80
    85                           	dabs	1,0x9A8,72
    86                           	dabs	1,0x25F8,0,_buffer
    87                           	dabs	1,0x7E,2
    88  0000                     
    89                           ; Version 1.45
    90                           ; Generated 16/11/2017 GMT
    91                           ; 
    92                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC16F19156 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  0010                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001F                     	;# 
   146  008C                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  008E                     	;# 
   151  008F                     	;# 
   152  0090                     	;# 
   153  0090                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0094                     	;# 
   160  0095                     	;# 
   161  0096                     	;# 
   162  0096                     	;# 
   163  0097                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009B                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  010F                     	;# 
   180  0110                     	;# 
   181  0111                     	;# 
   182  0112                     	;# 
   183  0113                     	;# 
   184  0114                     	;# 
   185  0115                     	;# 
   186  0116                     	;# 
   187  0117                     	;# 
   188  0118                     	;# 
   189  0119                     	;# 
   190  0119                     	;# 
   191  0119                     	;# 
   192  011A                     	;# 
   193  011A                     	;# 
   194  011A                     	;# 
   195  011B                     	;# 
   196  011B                     	;# 
   197  011B                     	;# 
   198  011B                     	;# 
   199  011B                     	;# 
   200  011C                     	;# 
   201  011C                     	;# 
   202  011C                     	;# 
   203  011D                     	;# 
   204  011D                     	;# 
   205  011D                     	;# 
   206  011E                     	;# 
   207  011E                     	;# 
   208  011E                     	;# 
   209  011F                     	;# 
   210  011F                     	;# 
   211  011F                     	;# 
   212  011F                     	;# 
   213  011F                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  018E                     	;# 
   217  018F                     	;# 
   218  0190                     	;# 
   219  0191                     	;# 
   220  0192                     	;# 
   221  020C                     	;# 
   222  020C                     	;# 
   223  020D                     	;# 
   224  020E                     	;# 
   225  020F                     	;# 
   226  020F                     	;# 
   227  0210                     	;# 
   228  0210                     	;# 
   229  0211                     	;# 
   230  0211                     	;# 
   231  021E                     	;# 
   232  028C                     	;# 
   233  028C                     	;# 
   234  028D                     	;# 
   235  028D                     	;# 
   236  028E                     	;# 
   237  028F                     	;# 
   238  0290                     	;# 
   239  0290                     	;# 
   240  0291                     	;# 
   241  0292                     	;# 
   242  0292                     	;# 
   243  0293                     	;# 
   244  0293                     	;# 
   245  0294                     	;# 
   246  0295                     	;# 
   247  0296                     	;# 
   248  0296                     	;# 
   249  0297                     	;# 
   250  030C                     	;# 
   251  030C                     	;# 
   252  030D                     	;# 
   253  030E                     	;# 
   254  030F                     	;# 
   255  0310                     	;# 
   256  0310                     	;# 
   257  0311                     	;# 
   258  0312                     	;# 
   259  0313                     	;# 
   260  0314                     	;# 
   261  0314                     	;# 
   262  0315                     	;# 
   263  0316                     	;# 
   264  0318                     	;# 
   265  0318                     	;# 
   266  0319                     	;# 
   267  031A                     	;# 
   268  040D                     	;# 
   269  048C                     	;# 
   270  048C                     	;# 
   271  048D                     	;# 
   272  048E                     	;# 
   273  048F                     	;# 
   274  048F                     	;# 
   275  0490                     	;# 
   276  0491                     	;# 
   277  0492                     	;# 
   278  0492                     	;# 
   279  0493                     	;# 
   280  0494                     	;# 
   281  0495                     	;# 
   282  0495                     	;# 
   283  0496                     	;# 
   284  0497                     	;# 
   285  0498                     	;# 
   286  0499                     	;# 
   287  049A                     	;# 
   288  049B                     	;# 
   289  049C                     	;# 
   290  049D                     	;# 
   291  059C                     	;# 
   292  059C                     	;# 
   293  059D                     	;# 
   294  059D                     	;# 
   295  059E                     	;# 
   296  059F                     	;# 
   297  060C                     	;# 
   298  060D                     	;# 
   299  060E                     	;# 
   300  060F                     	;# 
   301  0610                     	;# 
   302  0611                     	;# 
   303  0612                     	;# 
   304  0613                     	;# 
   305  0614                     	;# 
   306  070C                     	;# 
   307  070D                     	;# 
   308  070E                     	;# 
   309  070F                     	;# 
   310  0710                     	;# 
   311  0711                     	;# 
   312  0712                     	;# 
   313  0713                     	;# 
   314  0714                     	;# 
   315  0716                     	;# 
   316  0717                     	;# 
   317  0718                     	;# 
   318  0719                     	;# 
   319  071A                     	;# 
   320  071B                     	;# 
   321  071C                     	;# 
   322  071D                     	;# 
   323  071E                     	;# 
   324  0796                     	;# 
   325  0797                     	;# 
   326  0798                     	;# 
   327  0799                     	;# 
   328  079A                     	;# 
   329  079B                     	;# 
   330  080C                     	;# 
   331  080D                     	;# 
   332  080E                     	;# 
   333  080F                     	;# 
   334  0810                     	;# 
   335  0811                     	;# 
   336  0812                     	;# 
   337  0813                     	;# 
   338  0814                     	;# 
   339  081A                     	;# 
   340  081B                     	;# 
   341  081C                     	;# 
   342  081D                     	;# 
   343  081E                     	;# 
   344  081F                     	;# 
   345  088C                     	;# 
   346  088D                     	;# 
   347  088E                     	;# 
   348  088F                     	;# 
   349  0890                     	;# 
   350  0891                     	;# 
   351  0892                     	;# 
   352  0893                     	;# 
   353  0894                     	;# 
   354  090C                     	;# 
   355  090E                     	;# 
   356  090F                     	;# 
   357  091F                     	;# 
   358  098F                     	;# 
   359  098F                     	;# 
   360  0990                     	;# 
   361  0991                     	;# 
   362  0992                     	;# 
   363  0993                     	;# 
   364  0994                     	;# 
   365  0995                     	;# 
   366  0996                     	;# 
   367  0997                     	;# 
   368  0A19                     	;# 
   369  0A19                     	;# 
   370  0A1A                     	;# 
   371  0A1A                     	;# 
   372  0A1B                     	;# 
   373  0A1B                     	;# 
   374  0A1B                     	;# 
   375  0A1C                     	;# 
   376  0A1C                     	;# 
   377  0A1D                     	;# 
   378  0A1D                     	;# 
   379  0A1E                     	;# 
   380  0A1E                     	;# 
   381  0A1F                     	;# 
   382  0A1F                     	;# 
   383  0A1F                     	;# 
   384  0C0C                     	;# 
   385  0C0D                     	;# 
   386  0C0E                     	;# 
   387  0C0F                     	;# 
   388  0C10                     	;# 
   389  0C11                     	;# 
   390  0C12                     	;# 
   391  0C13                     	;# 
   392  0C14                     	;# 
   393  0C15                     	;# 
   394  0C16                     	;# 
   395  0C17                     	;# 
   396  0C18                     	;# 
   397  0C19                     	;# 
   398  0C1A                     	;# 
   399  0C1B                     	;# 
   400  0C1C                     	;# 
   401  0E8C                     	;# 
   402  0E8D                     	;# 
   403  0E8E                     	;# 
   404  0E8F                     	;# 
   405  1D0C                     	;# 
   406  1D0D                     	;# 
   407  1D0E                     	;# 
   408  1D0F                     	;# 
   409  1D10                     	;# 
   410  1D11                     	;# 
   411  1D12                     	;# 
   412  1D13                     	;# 
   413  1D14                     	;# 
   414  1D15                     	;# 
   415  1D16                     	;# 
   416  1D17                     	;# 
   417  1D18                     	;# 
   418  1D19                     	;# 
   419  1D1A                     	;# 
   420  1D1E                     	;# 
   421  1D1F                     	;# 
   422  1D20                     	;# 
   423  1D24                     	;# 
   424  1D25                     	;# 
   425  1D26                     	;# 
   426  1D2A                     	;# 
   427  1D2B                     	;# 
   428  1D2C                     	;# 
   429  1D30                     	;# 
   430  1D31                     	;# 
   431  1D32                     	;# 
   432  1D36                     	;# 
   433  1D37                     	;# 
   434  1D38                     	;# 
   435  1D3C                     	;# 
   436  1D3D                     	;# 
   437  1D3E                     	;# 
   438  1D42                     	;# 
   439  1D43                     	;# 
   440  1D44                     	;# 
   441  1E0F                     	;# 
   442  1E10                     	;# 
   443  1E11                     	;# 
   444  1E12                     	;# 
   445  1E13                     	;# 
   446  1E14                     	;# 
   447  1E15                     	;# 
   448  1E16                     	;# 
   449  1E17                     	;# 
   450  1E18                     	;# 
   451  1E19                     	;# 
   452  1E1A                     	;# 
   453  1E1B                     	;# 
   454  1E1C                     	;# 
   455  1E1D                     	;# 
   456  1E1E                     	;# 
   457  1E1F                     	;# 
   458  1E20                     	;# 
   459  1E21                     	;# 
   460  1E22                     	;# 
   461  1E23                     	;# 
   462  1E24                     	;# 
   463  1E25                     	;# 
   464  1E26                     	;# 
   465  1E27                     	;# 
   466  1E28                     	;# 
   467  1E29                     	;# 
   468  1E2A                     	;# 
   469  1E2B                     	;# 
   470  1E2C                     	;# 
   471  1E2D                     	;# 
   472  1E2E                     	;# 
   473  1E2F                     	;# 
   474  1E30                     	;# 
   475  1E31                     	;# 
   476  1E32                     	;# 
   477  1E33                     	;# 
   478  1E34                     	;# 
   479  1E35                     	;# 
   480  1E36                     	;# 
   481  1E37                     	;# 
   482  1E8F                     	;# 
   483  1E90                     	;# 
   484  1E91                     	;# 
   485  1E92                     	;# 
   486  1E93                     	;# 
   487  1E9C                     	;# 
   488  1E9D                     	;# 
   489  1EA1                     	;# 
   490  1EA2                     	;# 
   491  1EA9                     	;# 
   492  1EAA                     	;# 
   493  1EB1                     	;# 
   494  1EBB                     	;# 
   495  1EBC                     	;# 
   496  1EBD                     	;# 
   497  1EBE                     	;# 
   498  1EC3                     	;# 
   499  1EC5                     	;# 
   500  1EC6                     	;# 
   501  1EC7                     	;# 
   502  1ECB                     	;# 
   503  1ECC                     	;# 
   504  1ECD                     	;# 
   505  1ECE                     	;# 
   506  1F10                     	;# 
   507  1F11                     	;# 
   508  1F12                     	;# 
   509  1F13                     	;# 
   510  1F14                     	;# 
   511  1F15                     	;# 
   512  1F16                     	;# 
   513  1F17                     	;# 
   514  1F18                     	;# 
   515  1F19                     	;# 
   516  1F1A                     	;# 
   517  1F1B                     	;# 
   518  1F1C                     	;# 
   519  1F1D                     	;# 
   520  1F1E                     	;# 
   521  1F1F                     	;# 
   522  1F20                     	;# 
   523  1F21                     	;# 
   524  1F22                     	;# 
   525  1F23                     	;# 
   526  1F24                     	;# 
   527  1F26                     	;# 
   528  1F27                     	;# 
   529  1F38                     	;# 
   530  1F39                     	;# 
   531  1F3A                     	;# 
   532  1F3B                     	;# 
   533  1F3C                     	;# 
   534  1F3D                     	;# 
   535  1F3E                     	;# 
   536  1F3F                     	;# 
   537  1F43                     	;# 
   538  1F44                     	;# 
   539  1F45                     	;# 
   540  1F46                     	;# 
   541  1F47                     	;# 
   542  1F48                     	;# 
   543  1F49                     	;# 
   544  1F4A                     	;# 
   545  1F4E                     	;# 
   546  1F4F                     	;# 
   547  1F50                     	;# 
   548  1F51                     	;# 
   549  1F52                     	;# 
   550  1F53                     	;# 
   551  1F54                     	;# 
   552  1F55                     	;# 
   553  1F65                     	;# 
   554  1F68                     	;# 
   555  1F69                     	;# 
   556  1F6A                     	;# 
   557  1F6B                     	;# 
   558  1FE4                     	;# 
   559  1FE5                     	;# 
   560  1FE6                     	;# 
   561  1FE7                     	;# 
   562  1FE8                     	;# 
   563  1FE9                     	;# 
   564  1FEA                     	;# 
   565  1FEB                     	;# 
   566  1FED                     	;# 
   567  1FEE                     	;# 
   568  1FEF                     	;# 
   569  0000                     	;# 
   570  0001                     	;# 
   571  0002                     	;# 
   572  0003                     	;# 
   573  0004                     	;# 
   574  0005                     	;# 
   575  0006                     	;# 
   576  0007                     	;# 
   577  0008                     	;# 
   578  0009                     	;# 
   579  000A                     	;# 
   580  000B                     	;# 
   581  000C                     	;# 
   582  000D                     	;# 
   583  000E                     	;# 
   584  0010                     	;# 
   585  0012                     	;# 
   586  0013                     	;# 
   587  0014                     	;# 
   588  0018                     	;# 
   589  0019                     	;# 
   590  001A                     	;# 
   591  001F                     	;# 
   592  008C                     	;# 
   593  008C                     	;# 
   594  008D                     	;# 
   595  008E                     	;# 
   596  008E                     	;# 
   597  008F                     	;# 
   598  0090                     	;# 
   599  0090                     	;# 
   600  0091                     	;# 
   601  0092                     	;# 
   602  0092                     	;# 
   603  0093                     	;# 
   604  0094                     	;# 
   605  0094                     	;# 
   606  0095                     	;# 
   607  0096                     	;# 
   608  0096                     	;# 
   609  0097                     	;# 
   610  0098                     	;# 
   611  0099                     	;# 
   612  009A                     	;# 
   613  009B                     	;# 
   614  009B                     	;# 
   615  009C                     	;# 
   616  009D                     	;# 
   617  009D                     	;# 
   618  009E                     	;# 
   619  009F                     	;# 
   620  010C                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010F                     	;# 
   625  010F                     	;# 
   626  0110                     	;# 
   627  0111                     	;# 
   628  0112                     	;# 
   629  0113                     	;# 
   630  0114                     	;# 
   631  0115                     	;# 
   632  0116                     	;# 
   633  0117                     	;# 
   634  0118                     	;# 
   635  0119                     	;# 
   636  0119                     	;# 
   637  0119                     	;# 
   638  011A                     	;# 
   639  011A                     	;# 
   640  011A                     	;# 
   641  011B                     	;# 
   642  011B                     	;# 
   643  011B                     	;# 
   644  011B                     	;# 
   645  011B                     	;# 
   646  011C                     	;# 
   647  011C                     	;# 
   648  011C                     	;# 
   649  011D                     	;# 
   650  011D                     	;# 
   651  011D                     	;# 
   652  011E                     	;# 
   653  011E                     	;# 
   654  011E                     	;# 
   655  011F                     	;# 
   656  011F                     	;# 
   657  011F                     	;# 
   658  011F                     	;# 
   659  011F                     	;# 
   660  018C                     	;# 
   661  018D                     	;# 
   662  018E                     	;# 
   663  018F                     	;# 
   664  0190                     	;# 
   665  0191                     	;# 
   666  0192                     	;# 
   667  020C                     	;# 
   668  020C                     	;# 
   669  020D                     	;# 
   670  020E                     	;# 
   671  020F                     	;# 
   672  020F                     	;# 
   673  0210                     	;# 
   674  0210                     	;# 
   675  0211                     	;# 
   676  0211                     	;# 
   677  021E                     	;# 
   678  028C                     	;# 
   679  028C                     	;# 
   680  028D                     	;# 
   681  028D                     	;# 
   682  028E                     	;# 
   683  028F                     	;# 
   684  0290                     	;# 
   685  0290                     	;# 
   686  0291                     	;# 
   687  0292                     	;# 
   688  0292                     	;# 
   689  0293                     	;# 
   690  0293                     	;# 
   691  0294                     	;# 
   692  0295                     	;# 
   693  0296                     	;# 
   694  0296                     	;# 
   695  0297                     	;# 
   696  030C                     	;# 
   697  030C                     	;# 
   698  030D                     	;# 
   699  030E                     	;# 
   700  030F                     	;# 
   701  0310                     	;# 
   702  0310                     	;# 
   703  0311                     	;# 
   704  0312                     	;# 
   705  0313                     	;# 
   706  0314                     	;# 
   707  0314                     	;# 
   708  0315                     	;# 
   709  0316                     	;# 
   710  0318                     	;# 
   711  0318                     	;# 
   712  0319                     	;# 
   713  031A                     	;# 
   714  040D                     	;# 
   715  048C                     	;# 
   716  048C                     	;# 
   717  048D                     	;# 
   718  048E                     	;# 
   719  048F                     	;# 
   720  048F                     	;# 
   721  0490                     	;# 
   722  0491                     	;# 
   723  0492                     	;# 
   724  0492                     	;# 
   725  0493                     	;# 
   726  0494                     	;# 
   727  0495                     	;# 
   728  0495                     	;# 
   729  0496                     	;# 
   730  0497                     	;# 
   731  0498                     	;# 
   732  0499                     	;# 
   733  049A                     	;# 
   734  049B                     	;# 
   735  049C                     	;# 
   736  049D                     	;# 
   737  059C                     	;# 
   738  059C                     	;# 
   739  059D                     	;# 
   740  059D                     	;# 
   741  059E                     	;# 
   742  059F                     	;# 
   743  060C                     	;# 
   744  060D                     	;# 
   745  060E                     	;# 
   746  060F                     	;# 
   747  0610                     	;# 
   748  0611                     	;# 
   749  0612                     	;# 
   750  0613                     	;# 
   751  0614                     	;# 
   752  070C                     	;# 
   753  070D                     	;# 
   754  070E                     	;# 
   755  070F                     	;# 
   756  0710                     	;# 
   757  0711                     	;# 
   758  0712                     	;# 
   759  0713                     	;# 
   760  0714                     	;# 
   761  0716                     	;# 
   762  0717                     	;# 
   763  0718                     	;# 
   764  0719                     	;# 
   765  071A                     	;# 
   766  071B                     	;# 
   767  071C                     	;# 
   768  071D                     	;# 
   769  071E                     	;# 
   770  0796                     	;# 
   771  0797                     	;# 
   772  0798                     	;# 
   773  0799                     	;# 
   774  079A                     	;# 
   775  079B                     	;# 
   776  080C                     	;# 
   777  080D                     	;# 
   778  080E                     	;# 
   779  080F                     	;# 
   780  0810                     	;# 
   781  0811                     	;# 
   782  0812                     	;# 
   783  0813                     	;# 
   784  0814                     	;# 
   785  081A                     	;# 
   786  081B                     	;# 
   787  081C                     	;# 
   788  081D                     	;# 
   789  081E                     	;# 
   790  081F                     	;# 
   791  088C                     	;# 
   792  088D                     	;# 
   793  088E                     	;# 
   794  088F                     	;# 
   795  0890                     	;# 
   796  0891                     	;# 
   797  0892                     	;# 
   798  0893                     	;# 
   799  0894                     	;# 
   800  090C                     	;# 
   801  090E                     	;# 
   802  090F                     	;# 
   803  091F                     	;# 
   804  098F                     	;# 
   805  098F                     	;# 
   806  0990                     	;# 
   807  0991                     	;# 
   808  0992                     	;# 
   809  0993                     	;# 
   810  0994                     	;# 
   811  0995                     	;# 
   812  0996                     	;# 
   813  0997                     	;# 
   814  0A19                     	;# 
   815  0A19                     	;# 
   816  0A1A                     	;# 
   817  0A1A                     	;# 
   818  0A1B                     	;# 
   819  0A1B                     	;# 
   820  0A1B                     	;# 
   821  0A1C                     	;# 
   822  0A1C                     	;# 
   823  0A1D                     	;# 
   824  0A1D                     	;# 
   825  0A1E                     	;# 
   826  0A1E                     	;# 
   827  0A1F                     	;# 
   828  0A1F                     	;# 
   829  0A1F                     	;# 
   830  0C0C                     	;# 
   831  0C0D                     	;# 
   832  0C0E                     	;# 
   833  0C0F                     	;# 
   834  0C10                     	;# 
   835  0C11                     	;# 
   836  0C12                     	;# 
   837  0C13                     	;# 
   838  0C14                     	;# 
   839  0C15                     	;# 
   840  0C16                     	;# 
   841  0C17                     	;# 
   842  0C18                     	;# 
   843  0C19                     	;# 
   844  0C1A                     	;# 
   845  0C1B                     	;# 
   846  0C1C                     	;# 
   847  0E8C                     	;# 
   848  0E8D                     	;# 
   849  0E8E                     	;# 
   850  0E8F                     	;# 
   851  1D0C                     	;# 
   852  1D0D                     	;# 
   853  1D0E                     	;# 
   854  1D0F                     	;# 
   855  1D10                     	;# 
   856  1D11                     	;# 
   857  1D12                     	;# 
   858  1D13                     	;# 
   859  1D14                     	;# 
   860  1D15                     	;# 
   861  1D16                     	;# 
   862  1D17                     	;# 
   863  1D18                     	;# 
   864  1D19                     	;# 
   865  1D1A                     	;# 
   866  1D1E                     	;# 
   867  1D1F                     	;# 
   868  1D20                     	;# 
   869  1D24                     	;# 
   870  1D25                     	;# 
   871  1D26                     	;# 
   872  1D2A                     	;# 
   873  1D2B                     	;# 
   874  1D2C                     	;# 
   875  1D30                     	;# 
   876  1D31                     	;# 
   877  1D32                     	;# 
   878  1D36                     	;# 
   879  1D37                     	;# 
   880  1D38                     	;# 
   881  1D3C                     	;# 
   882  1D3D                     	;# 
   883  1D3E                     	;# 
   884  1D42                     	;# 
   885  1D43                     	;# 
   886  1D44                     	;# 
   887  1E0F                     	;# 
   888  1E10                     	;# 
   889  1E11                     	;# 
   890  1E12                     	;# 
   891  1E13                     	;# 
   892  1E14                     	;# 
   893  1E15                     	;# 
   894  1E16                     	;# 
   895  1E17                     	;# 
   896  1E18                     	;# 
   897  1E19                     	;# 
   898  1E1A                     	;# 
   899  1E1B                     	;# 
   900  1E1C                     	;# 
   901  1E1D                     	;# 
   902  1E1E                     	;# 
   903  1E1F                     	;# 
   904  1E20                     	;# 
   905  1E21                     	;# 
   906  1E22                     	;# 
   907  1E23                     	;# 
   908  1E24                     	;# 
   909  1E25                     	;# 
   910  1E26                     	;# 
   911  1E27                     	;# 
   912  1E28                     	;# 
   913  1E29                     	;# 
   914  1E2A                     	;# 
   915  1E2B                     	;# 
   916  1E2C                     	;# 
   917  1E2D                     	;# 
   918  1E2E                     	;# 
   919  1E2F                     	;# 
   920  1E30                     	;# 
   921  1E31                     	;# 
   922  1E32                     	;# 
   923  1E33                     	;# 
   924  1E34                     	;# 
   925  1E35                     	;# 
   926  1E36                     	;# 
   927  1E37                     	;# 
   928  1E8F                     	;# 
   929  1E90                     	;# 
   930  1E91                     	;# 
   931  1E92                     	;# 
   932  1E93                     	;# 
   933  1E9C                     	;# 
   934  1E9D                     	;# 
   935  1EA1                     	;# 
   936  1EA2                     	;# 
   937  1EA9                     	;# 
   938  1EAA                     	;# 
   939  1EB1                     	;# 
   940  1EBB                     	;# 
   941  1EBC                     	;# 
   942  1EBD                     	;# 
   943  1EBE                     	;# 
   944  1EC3                     	;# 
   945  1EC5                     	;# 
   946  1EC6                     	;# 
   947  1EC7                     	;# 
   948  1ECB                     	;# 
   949  1ECC                     	;# 
   950  1ECD                     	;# 
   951  1ECE                     	;# 
   952  1F10                     	;# 
   953  1F11                     	;# 
   954  1F12                     	;# 
   955  1F13                     	;# 
   956  1F14                     	;# 
   957  1F15                     	;# 
   958  1F16                     	;# 
   959  1F17                     	;# 
   960  1F18                     	;# 
   961  1F19                     	;# 
   962  1F1A                     	;# 
   963  1F1B                     	;# 
   964  1F1C                     	;# 
   965  1F1D                     	;# 
   966  1F1E                     	;# 
   967  1F1F                     	;# 
   968  1F20                     	;# 
   969  1F21                     	;# 
   970  1F22                     	;# 
   971  1F23                     	;# 
   972  1F24                     	;# 
   973  1F26                     	;# 
   974  1F27                     	;# 
   975  1F38                     	;# 
   976  1F39                     	;# 
   977  1F3A                     	;# 
   978  1F3B                     	;# 
   979  1F3C                     	;# 
   980  1F3D                     	;# 
   981  1F3E                     	;# 
   982  1F3F                     	;# 
   983  1F43                     	;# 
   984  1F44                     	;# 
   985  1F45                     	;# 
   986  1F46                     	;# 
   987  1F47                     	;# 
   988  1F48                     	;# 
   989  1F49                     	;# 
   990  1F4A                     	;# 
   991  1F4E                     	;# 
   992  1F4F                     	;# 
   993  1F50                     	;# 
   994  1F51                     	;# 
   995  1F52                     	;# 
   996  1F53                     	;# 
   997  1F54                     	;# 
   998  1F55                     	;# 
   999  1F65                     	;# 
  1000  1F68                     	;# 
  1001  1F69                     	;# 
  1002  1F6A                     	;# 
  1003  1F6B                     	;# 
  1004  1FE4                     	;# 
  1005  1FE5                     	;# 
  1006  1FE6                     	;# 
  1007  1FE7                     	;# 
  1008  1FE8                     	;# 
  1009  1FE9                     	;# 
  1010  1FEA                     	;# 
  1011  1FEB                     	;# 
  1012  1FED                     	;# 
  1013  1FEE                     	;# 
  1014  1FEF                     	;# 
  1015  0000                     	;# 
  1016  0001                     	;# 
  1017  0002                     	;# 
  1018  0003                     	;# 
  1019  0004                     	;# 
  1020  0005                     	;# 
  1021  0006                     	;# 
  1022  0007                     	;# 
  1023  0008                     	;# 
  1024  0009                     	;# 
  1025  000A                     	;# 
  1026  000B                     	;# 
  1027  000C                     	;# 
  1028  000D                     	;# 
  1029  000E                     	;# 
  1030  0010                     	;# 
  1031  0012                     	;# 
  1032  0013                     	;# 
  1033  0014                     	;# 
  1034  0018                     	;# 
  1035  0019                     	;# 
  1036  001A                     	;# 
  1037  001F                     	;# 
  1038  008C                     	;# 
  1039  008C                     	;# 
  1040  008D                     	;# 
  1041  008E                     	;# 
  1042  008E                     	;# 
  1043  008F                     	;# 
  1044  0090                     	;# 
  1045  0090                     	;# 
  1046  0091                     	;# 
  1047  0092                     	;# 
  1048  0092                     	;# 
  1049  0093                     	;# 
  1050  0094                     	;# 
  1051  0094                     	;# 
  1052  0095                     	;# 
  1053  0096                     	;# 
  1054  0096                     	;# 
  1055  0097                     	;# 
  1056  0098                     	;# 
  1057  0099                     	;# 
  1058  009A                     	;# 
  1059  009B                     	;# 
  1060  009B                     	;# 
  1061  009C                     	;# 
  1062  009D                     	;# 
  1063  009D                     	;# 
  1064  009E                     	;# 
  1065  009F                     	;# 
  1066  010C                     	;# 
  1067  010C                     	;# 
  1068  010D                     	;# 
  1069  010E                     	;# 
  1070  010F                     	;# 
  1071  010F                     	;# 
  1072  0110                     	;# 
  1073  0111                     	;# 
  1074  0112                     	;# 
  1075  0113                     	;# 
  1076  0114                     	;# 
  1077  0115                     	;# 
  1078  0116                     	;# 
  1079  0117                     	;# 
  1080  0118                     	;# 
  1081  0119                     	;# 
  1082  0119                     	;# 
  1083  0119                     	;# 
  1084  011A                     	;# 
  1085  011A                     	;# 
  1086  011A                     	;# 
  1087  011B                     	;# 
  1088  011B                     	;# 
  1089  011B                     	;# 
  1090  011B                     	;# 
  1091  011B                     	;# 
  1092  011C                     	;# 
  1093  011C                     	;# 
  1094  011C                     	;# 
  1095  011D                     	;# 
  1096  011D                     	;# 
  1097  011D                     	;# 
  1098  011E                     	;# 
  1099  011E                     	;# 
  1100  011E                     	;# 
  1101  011F                     	;# 
  1102  011F                     	;# 
  1103  011F                     	;# 
  1104  011F                     	;# 
  1105  011F                     	;# 
  1106  018C                     	;# 
  1107  018D                     	;# 
  1108  018E                     	;# 
  1109  018F                     	;# 
  1110  0190                     	;# 
  1111  0191                     	;# 
  1112  0192                     	;# 
  1113  020C                     	;# 
  1114  020C                     	;# 
  1115  020D                     	;# 
  1116  020E                     	;# 
  1117  020F                     	;# 
  1118  020F                     	;# 
  1119  0210                     	;# 
  1120  0210                     	;# 
  1121  0211                     	;# 
  1122  0211                     	;# 
  1123  021E                     	;# 
  1124  028C                     	;# 
  1125  028C                     	;# 
  1126  028D                     	;# 
  1127  028D                     	;# 
  1128  028E                     	;# 
  1129  028F                     	;# 
  1130  0290                     	;# 
  1131  0290                     	;# 
  1132  0291                     	;# 
  1133  0292                     	;# 
  1134  0292                     	;# 
  1135  0293                     	;# 
  1136  0293                     	;# 
  1137  0294                     	;# 
  1138  0295                     	;# 
  1139  0296                     	;# 
  1140  0296                     	;# 
  1141  0297                     	;# 
  1142  030C                     	;# 
  1143  030C                     	;# 
  1144  030D                     	;# 
  1145  030E                     	;# 
  1146  030F                     	;# 
  1147  0310                     	;# 
  1148  0310                     	;# 
  1149  0311                     	;# 
  1150  0312                     	;# 
  1151  0313                     	;# 
  1152  0314                     	;# 
  1153  0314                     	;# 
  1154  0315                     	;# 
  1155  0316                     	;# 
  1156  0318                     	;# 
  1157  0318                     	;# 
  1158  0319                     	;# 
  1159  031A                     	;# 
  1160  040D                     	;# 
  1161  048C                     	;# 
  1162  048C                     	;# 
  1163  048D                     	;# 
  1164  048E                     	;# 
  1165  048F                     	;# 
  1166  048F                     	;# 
  1167  0490                     	;# 
  1168  0491                     	;# 
  1169  0492                     	;# 
  1170  0492                     	;# 
  1171  0493                     	;# 
  1172  0494                     	;# 
  1173  0495                     	;# 
  1174  0495                     	;# 
  1175  0496                     	;# 
  1176  0497                     	;# 
  1177  0498                     	;# 
  1178  0499                     	;# 
  1179  049A                     	;# 
  1180  049B                     	;# 
  1181  049C                     	;# 
  1182  049D                     	;# 
  1183  059C                     	;# 
  1184  059C                     	;# 
  1185  059D                     	;# 
  1186  059D                     	;# 
  1187  059E                     	;# 
  1188  059F                     	;# 
  1189  060C                     	;# 
  1190  060D                     	;# 
  1191  060E                     	;# 
  1192  060F                     	;# 
  1193  0610                     	;# 
  1194  0611                     	;# 
  1195  0612                     	;# 
  1196  0613                     	;# 
  1197  0614                     	;# 
  1198  070C                     	;# 
  1199  070D                     	;# 
  1200  070E                     	;# 
  1201  070F                     	;# 
  1202  0710                     	;# 
  1203  0711                     	;# 
  1204  0712                     	;# 
  1205  0713                     	;# 
  1206  0714                     	;# 
  1207  0716                     	;# 
  1208  0717                     	;# 
  1209  0718                     	;# 
  1210  0719                     	;# 
  1211  071A                     	;# 
  1212  071B                     	;# 
  1213  071C                     	;# 
  1214  071D                     	;# 
  1215  071E                     	;# 
  1216  0796                     	;# 
  1217  0797                     	;# 
  1218  0798                     	;# 
  1219  0799                     	;# 
  1220  079A                     	;# 
  1221  079B                     	;# 
  1222  080C                     	;# 
  1223  080D                     	;# 
  1224  080E                     	;# 
  1225  080F                     	;# 
  1226  0810                     	;# 
  1227  0811                     	;# 
  1228  0812                     	;# 
  1229  0813                     	;# 
  1230  0814                     	;# 
  1231  081A                     	;# 
  1232  081B                     	;# 
  1233  081C                     	;# 
  1234  081D                     	;# 
  1235  081E                     	;# 
  1236  081F                     	;# 
  1237  088C                     	;# 
  1238  088D                     	;# 
  1239  088E                     	;# 
  1240  088F                     	;# 
  1241  0890                     	;# 
  1242  0891                     	;# 
  1243  0892                     	;# 
  1244  0893                     	;# 
  1245  0894                     	;# 
  1246  090C                     	;# 
  1247  090E                     	;# 
  1248  090F                     	;# 
  1249  091F                     	;# 
  1250  098F                     	;# 
  1251  098F                     	;# 
  1252  0990                     	;# 
  1253  0991                     	;# 
  1254  0992                     	;# 
  1255  0993                     	;# 
  1256  0994                     	;# 
  1257  0995                     	;# 
  1258  0996                     	;# 
  1259  0997                     	;# 
  1260  0A19                     	;# 
  1261  0A19                     	;# 
  1262  0A1A                     	;# 
  1263  0A1A                     	;# 
  1264  0A1B                     	;# 
  1265  0A1B                     	;# 
  1266  0A1B                     	;# 
  1267  0A1C                     	;# 
  1268  0A1C                     	;# 
  1269  0A1D                     	;# 
  1270  0A1D                     	;# 
  1271  0A1E                     	;# 
  1272  0A1E                     	;# 
  1273  0A1F                     	;# 
  1274  0A1F                     	;# 
  1275  0A1F                     	;# 
  1276  0C0C                     	;# 
  1277  0C0D                     	;# 
  1278  0C0E                     	;# 
  1279  0C0F                     	;# 
  1280  0C10                     	;# 
  1281  0C11                     	;# 
  1282  0C12                     	;# 
  1283  0C13                     	;# 
  1284  0C14                     	;# 
  1285  0C15                     	;# 
  1286  0C16                     	;# 
  1287  0C17                     	;# 
  1288  0C18                     	;# 
  1289  0C19                     	;# 
  1290  0C1A                     	;# 
  1291  0C1B                     	;# 
  1292  0C1C                     	;# 
  1293  0E8C                     	;# 
  1294  0E8D                     	;# 
  1295  0E8E                     	;# 
  1296  0E8F                     	;# 
  1297  1D0C                     	;# 
  1298  1D0D                     	;# 
  1299  1D0E                     	;# 
  1300  1D0F                     	;# 
  1301  1D10                     	;# 
  1302  1D11                     	;# 
  1303  1D12                     	;# 
  1304  1D13                     	;# 
  1305  1D14                     	;# 
  1306  1D15                     	;# 
  1307  1D16                     	;# 
  1308  1D17                     	;# 
  1309  1D18                     	;# 
  1310  1D19                     	;# 
  1311  1D1A                     	;# 
  1312  1D1E                     	;# 
  1313  1D1F                     	;# 
  1314  1D20                     	;# 
  1315  1D24                     	;# 
  1316  1D25                     	;# 
  1317  1D26                     	;# 
  1318  1D2A                     	;# 
  1319  1D2B                     	;# 
  1320  1D2C                     	;# 
  1321  1D30                     	;# 
  1322  1D31                     	;# 
  1323  1D32                     	;# 
  1324  1D36                     	;# 
  1325  1D37                     	;# 
  1326  1D38                     	;# 
  1327  1D3C                     	;# 
  1328  1D3D                     	;# 
  1329  1D3E                     	;# 
  1330  1D42                     	;# 
  1331  1D43                     	;# 
  1332  1D44                     	;# 
  1333  1E0F                     	;# 
  1334  1E10                     	;# 
  1335  1E11                     	;# 
  1336  1E12                     	;# 
  1337  1E13                     	;# 
  1338  1E14                     	;# 
  1339  1E15                     	;# 
  1340  1E16                     	;# 
  1341  1E17                     	;# 
  1342  1E18                     	;# 
  1343  1E19                     	;# 
  1344  1E1A                     	;# 
  1345  1E1B                     	;# 
  1346  1E1C                     	;# 
  1347  1E1D                     	;# 
  1348  1E1E                     	;# 
  1349  1E1F                     	;# 
  1350  1E20                     	;# 
  1351  1E21                     	;# 
  1352  1E22                     	;# 
  1353  1E23                     	;# 
  1354  1E24                     	;# 
  1355  1E25                     	;# 
  1356  1E26                     	;# 
  1357  1E27                     	;# 
  1358  1E28                     	;# 
  1359  1E29                     	;# 
  1360  1E2A                     	;# 
  1361  1E2B                     	;# 
  1362  1E2C                     	;# 
  1363  1E2D                     	;# 
  1364  1E2E                     	;# 
  1365  1E2F                     	;# 
  1366  1E30                     	;# 
  1367  1E31                     	;# 
  1368  1E32                     	;# 
  1369  1E33                     	;# 
  1370  1E34                     	;# 
  1371  1E35                     	;# 
  1372  1E36                     	;# 
  1373  1E37                     	;# 
  1374  1E8F                     	;# 
  1375  1E90                     	;# 
  1376  1E91                     	;# 
  1377  1E92                     	;# 
  1378  1E93                     	;# 
  1379  1E9C                     	;# 
  1380  1E9D                     	;# 
  1381  1EA1                     	;# 
  1382  1EA2                     	;# 
  1383  1EA9                     	;# 
  1384  1EAA                     	;# 
  1385  1EB1                     	;# 
  1386  1EBB                     	;# 
  1387  1EBC                     	;# 
  1388  1EBD                     	;# 
  1389  1EBE                     	;# 
  1390  1EC3                     	;# 
  1391  1EC5                     	;# 
  1392  1EC6                     	;# 
  1393  1EC7                     	;# 
  1394  1ECB                     	;# 
  1395  1ECC                     	;# 
  1396  1ECD                     	;# 
  1397  1ECE                     	;# 
  1398  1F10                     	;# 
  1399  1F11                     	;# 
  1400  1F12                     	;# 
  1401  1F13                     	;# 
  1402  1F14                     	;# 
  1403  1F15                     	;# 
  1404  1F16                     	;# 
  1405  1F17                     	;# 
  1406  1F18                     	;# 
  1407  1F19                     	;# 
  1408  1F1A                     	;# 
  1409  1F1B                     	;# 
  1410  1F1C                     	;# 
  1411  1F1D                     	;# 
  1412  1F1E                     	;# 
  1413  1F1F                     	;# 
  1414  1F20                     	;# 
  1415  1F21                     	;# 
  1416  1F22                     	;# 
  1417  1F23                     	;# 
  1418  1F24                     	;# 
  1419  1F26                     	;# 
  1420  1F27                     	;# 
  1421  1F38                     	;# 
  1422  1F39                     	;# 
  1423  1F3A                     	;# 
  1424  1F3B                     	;# 
  1425  1F3C                     	;# 
  1426  1F3D                     	;# 
  1427  1F3E                     	;# 
  1428  1F3F                     	;# 
  1429  1F43                     	;# 
  1430  1F44                     	;# 
  1431  1F45                     	;# 
  1432  1F46                     	;# 
  1433  1F47                     	;# 
  1434  1F48                     	;# 
  1435  1F49                     	;# 
  1436  1F4A                     	;# 
  1437  1F4E                     	;# 
  1438  1F4F                     	;# 
  1439  1F50                     	;# 
  1440  1F51                     	;# 
  1441  1F52                     	;# 
  1442  1F53                     	;# 
  1443  1F54                     	;# 
  1444  1F55                     	;# 
  1445  1F65                     	;# 
  1446  1F68                     	;# 
  1447  1F69                     	;# 
  1448  1F6A                     	;# 
  1449  1F6B                     	;# 
  1450  1FE4                     	;# 
  1451  1FE5                     	;# 
  1452  1FE6                     	;# 
  1453  1FE7                     	;# 
  1454  1FE8                     	;# 
  1455  1FE9                     	;# 
  1456  1FEA                     	;# 
  1457  1FEB                     	;# 
  1458  1FED                     	;# 
  1459  1FEE                     	;# 
  1460  1FEF                     	;# 
  1461  0000                     	;# 
  1462  0001                     	;# 
  1463  0002                     	;# 
  1464  0003                     	;# 
  1465  0004                     	;# 
  1466  0005                     	;# 
  1467  0006                     	;# 
  1468  0007                     	;# 
  1469  0008                     	;# 
  1470  0009                     	;# 
  1471  000A                     	;# 
  1472  000B                     	;# 
  1473  000C                     	;# 
  1474  000D                     	;# 
  1475  000E                     	;# 
  1476  0010                     	;# 
  1477  0012                     	;# 
  1478  0013                     	;# 
  1479  0014                     	;# 
  1480  0018                     	;# 
  1481  0019                     	;# 
  1482  001A                     	;# 
  1483  001F                     	;# 
  1484  008C                     	;# 
  1485  008C                     	;# 
  1486  008D                     	;# 
  1487  008E                     	;# 
  1488  008E                     	;# 
  1489  008F                     	;# 
  1490  0090                     	;# 
  1491  0090                     	;# 
  1492  0091                     	;# 
  1493  0092                     	;# 
  1494  0092                     	;# 
  1495  0093                     	;# 
  1496  0094                     	;# 
  1497  0094                     	;# 
  1498  0095                     	;# 
  1499  0096                     	;# 
  1500  0096                     	;# 
  1501  0097                     	;# 
  1502  0098                     	;# 
  1503  0099                     	;# 
  1504  009A                     	;# 
  1505  009B                     	;# 
  1506  009B                     	;# 
  1507  009C                     	;# 
  1508  009D                     	;# 
  1509  009D                     	;# 
  1510  009E                     	;# 
  1511  009F                     	;# 
  1512  010C                     	;# 
  1513  010C                     	;# 
  1514  010D                     	;# 
  1515  010E                     	;# 
  1516  010F                     	;# 
  1517  010F                     	;# 
  1518  0110                     	;# 
  1519  0111                     	;# 
  1520  0112                     	;# 
  1521  0113                     	;# 
  1522  0114                     	;# 
  1523  0115                     	;# 
  1524  0116                     	;# 
  1525  0117                     	;# 
  1526  0118                     	;# 
  1527  0119                     	;# 
  1528  0119                     	;# 
  1529  0119                     	;# 
  1530  011A                     	;# 
  1531  011A                     	;# 
  1532  011A                     	;# 
  1533  011B                     	;# 
  1534  011B                     	;# 
  1535  011B                     	;# 
  1536  011B                     	;# 
  1537  011B                     	;# 
  1538  011C                     	;# 
  1539  011C                     	;# 
  1540  011C                     	;# 
  1541  011D                     	;# 
  1542  011D                     	;# 
  1543  011D                     	;# 
  1544  011E                     	;# 
  1545  011E                     	;# 
  1546  011E                     	;# 
  1547  011F                     	;# 
  1548  011F                     	;# 
  1549  011F                     	;# 
  1550  011F                     	;# 
  1551  011F                     	;# 
  1552  018C                     	;# 
  1553  018D                     	;# 
  1554  018E                     	;# 
  1555  018F                     	;# 
  1556  0190                     	;# 
  1557  0191                     	;# 
  1558  0192                     	;# 
  1559  020C                     	;# 
  1560  020C                     	;# 
  1561  020D                     	;# 
  1562  020E                     	;# 
  1563  020F                     	;# 
  1564  020F                     	;# 
  1565  0210                     	;# 
  1566  0210                     	;# 
  1567  0211                     	;# 
  1568  0211                     	;# 
  1569  021E                     	;# 
  1570  028C                     	;# 
  1571  028C                     	;# 
  1572  028D                     	;# 
  1573  028D                     	;# 
  1574  028E                     	;# 
  1575  028F                     	;# 
  1576  0290                     	;# 
  1577  0290                     	;# 
  1578  0291                     	;# 
  1579  0292                     	;# 
  1580  0292                     	;# 
  1581  0293                     	;# 
  1582  0293                     	;# 
  1583  0294                     	;# 
  1584  0295                     	;# 
  1585  0296                     	;# 
  1586  0296                     	;# 
  1587  0297                     	;# 
  1588  030C                     	;# 
  1589  030C                     	;# 
  1590  030D                     	;# 
  1591  030E                     	;# 
  1592  030F                     	;# 
  1593  0310                     	;# 
  1594  0310                     	;# 
  1595  0311                     	;# 
  1596  0312                     	;# 
  1597  0313                     	;# 
  1598  0314                     	;# 
  1599  0314                     	;# 
  1600  0315                     	;# 
  1601  0316                     	;# 
  1602  0318                     	;# 
  1603  0318                     	;# 
  1604  0319                     	;# 
  1605  031A                     	;# 
  1606  040D                     	;# 
  1607  048C                     	;# 
  1608  048C                     	;# 
  1609  048D                     	;# 
  1610  048E                     	;# 
  1611  048F                     	;# 
  1612  048F                     	;# 
  1613  0490                     	;# 
  1614  0491                     	;# 
  1615  0492                     	;# 
  1616  0492                     	;# 
  1617  0493                     	;# 
  1618  0494                     	;# 
  1619  0495                     	;# 
  1620  0495                     	;# 
  1621  0496                     	;# 
  1622  0497                     	;# 
  1623  0498                     	;# 
  1624  0499                     	;# 
  1625  049A                     	;# 
  1626  049B                     	;# 
  1627  049C                     	;# 
  1628  049D                     	;# 
  1629  059C                     	;# 
  1630  059C                     	;# 
  1631  059D                     	;# 
  1632  059D                     	;# 
  1633  059E                     	;# 
  1634  059F                     	;# 
  1635  060C                     	;# 
  1636  060D                     	;# 
  1637  060E                     	;# 
  1638  060F                     	;# 
  1639  0610                     	;# 
  1640  0611                     	;# 
  1641  0612                     	;# 
  1642  0613                     	;# 
  1643  0614                     	;# 
  1644  070C                     	;# 
  1645  070D                     	;# 
  1646  070E                     	;# 
  1647  070F                     	;# 
  1648  0710                     	;# 
  1649  0711                     	;# 
  1650  0712                     	;# 
  1651  0713                     	;# 
  1652  0714                     	;# 
  1653  0716                     	;# 
  1654  0717                     	;# 
  1655  0718                     	;# 
  1656  0719                     	;# 
  1657  071A                     	;# 
  1658  071B                     	;# 
  1659  071C                     	;# 
  1660  071D                     	;# 
  1661  071E                     	;# 
  1662  0796                     	;# 
  1663  0797                     	;# 
  1664  0798                     	;# 
  1665  0799                     	;# 
  1666  079A                     	;# 
  1667  079B                     	;# 
  1668  080C                     	;# 
  1669  080D                     	;# 
  1670  080E                     	;# 
  1671  080F                     	;# 
  1672  0810                     	;# 
  1673  0811                     	;# 
  1674  0812                     	;# 
  1675  0813                     	;# 
  1676  0814                     	;# 
  1677  081A                     	;# 
  1678  081B                     	;# 
  1679  081C                     	;# 
  1680  081D                     	;# 
  1681  081E                     	;# 
  1682  081F                     	;# 
  1683  088C                     	;# 
  1684  088D                     	;# 
  1685  088E                     	;# 
  1686  088F                     	;# 
  1687  0890                     	;# 
  1688  0891                     	;# 
  1689  0892                     	;# 
  1690  0893                     	;# 
  1691  0894                     	;# 
  1692  090C                     	;# 
  1693  090E                     	;# 
  1694  090F                     	;# 
  1695  091F                     	;# 
  1696  098F                     	;# 
  1697  098F                     	;# 
  1698  0990                     	;# 
  1699  0991                     	;# 
  1700  0992                     	;# 
  1701  0993                     	;# 
  1702  0994                     	;# 
  1703  0995                     	;# 
  1704  0996                     	;# 
  1705  0997                     	;# 
  1706  0A19                     	;# 
  1707  0A19                     	;# 
  1708  0A1A                     	;# 
  1709  0A1A                     	;# 
  1710  0A1B                     	;# 
  1711  0A1B                     	;# 
  1712  0A1B                     	;# 
  1713  0A1C                     	;# 
  1714  0A1C                     	;# 
  1715  0A1D                     	;# 
  1716  0A1D                     	;# 
  1717  0A1E                     	;# 
  1718  0A1E                     	;# 
  1719  0A1F                     	;# 
  1720  0A1F                     	;# 
  1721  0A1F                     	;# 
  1722  0C0C                     	;# 
  1723  0C0D                     	;# 
  1724  0C0E                     	;# 
  1725  0C0F                     	;# 
  1726  0C10                     	;# 
  1727  0C11                     	;# 
  1728  0C12                     	;# 
  1729  0C13                     	;# 
  1730  0C14                     	;# 
  1731  0C15                     	;# 
  1732  0C16                     	;# 
  1733  0C17                     	;# 
  1734  0C18                     	;# 
  1735  0C19                     	;# 
  1736  0C1A                     	;# 
  1737  0C1B                     	;# 
  1738  0C1C                     	;# 
  1739  0E8C                     	;# 
  1740  0E8D                     	;# 
  1741  0E8E                     	;# 
  1742  0E8F                     	;# 
  1743  1D0C                     	;# 
  1744  1D0D                     	;# 
  1745  1D0E                     	;# 
  1746  1D0F                     	;# 
  1747  1D10                     	;# 
  1748  1D11                     	;# 
  1749  1D12                     	;# 
  1750  1D13                     	;# 
  1751  1D14                     	;# 
  1752  1D15                     	;# 
  1753  1D16                     	;# 
  1754  1D17                     	;# 
  1755  1D18                     	;# 
  1756  1D19                     	;# 
  1757  1D1A                     	;# 
  1758  1D1E                     	;# 
  1759  1D1F                     	;# 
  1760  1D20                     	;# 
  1761  1D24                     	;# 
  1762  1D25                     	;# 
  1763  1D26                     	;# 
  1764  1D2A                     	;# 
  1765  1D2B                     	;# 
  1766  1D2C                     	;# 
  1767  1D30                     	;# 
  1768  1D31                     	;# 
  1769  1D32                     	;# 
  1770  1D36                     	;# 
  1771  1D37                     	;# 
  1772  1D38                     	;# 
  1773  1D3C                     	;# 
  1774  1D3D                     	;# 
  1775  1D3E                     	;# 
  1776  1D42                     	;# 
  1777  1D43                     	;# 
  1778  1D44                     	;# 
  1779  1E0F                     	;# 
  1780  1E10                     	;# 
  1781  1E11                     	;# 
  1782  1E12                     	;# 
  1783  1E13                     	;# 
  1784  1E14                     	;# 
  1785  1E15                     	;# 
  1786  1E16                     	;# 
  1787  1E17                     	;# 
  1788  1E18                     	;# 
  1789  1E19                     	;# 
  1790  1E1A                     	;# 
  1791  1E1B                     	;# 
  1792  1E1C                     	;# 
  1793  1E1D                     	;# 
  1794  1E1E                     	;# 
  1795  1E1F                     	;# 
  1796  1E20                     	;# 
  1797  1E21                     	;# 
  1798  1E22                     	;# 
  1799  1E23                     	;# 
  1800  1E24                     	;# 
  1801  1E25                     	;# 
  1802  1E26                     	;# 
  1803  1E27                     	;# 
  1804  1E28                     	;# 
  1805  1E29                     	;# 
  1806  1E2A                     	;# 
  1807  1E2B                     	;# 
  1808  1E2C                     	;# 
  1809  1E2D                     	;# 
  1810  1E2E                     	;# 
  1811  1E2F                     	;# 
  1812  1E30                     	;# 
  1813  1E31                     	;# 
  1814  1E32                     	;# 
  1815  1E33                     	;# 
  1816  1E34                     	;# 
  1817  1E35                     	;# 
  1818  1E36                     	;# 
  1819  1E37                     	;# 
  1820  1E8F                     	;# 
  1821  1E90                     	;# 
  1822  1E91                     	;# 
  1823  1E92                     	;# 
  1824  1E93                     	;# 
  1825  1E9C                     	;# 
  1826  1E9D                     	;# 
  1827  1EA1                     	;# 
  1828  1EA2                     	;# 
  1829  1EA9                     	;# 
  1830  1EAA                     	;# 
  1831  1EB1                     	;# 
  1832  1EBB                     	;# 
  1833  1EBC                     	;# 
  1834  1EBD                     	;# 
  1835  1EBE                     	;# 
  1836  1EC3                     	;# 
  1837  1EC5                     	;# 
  1838  1EC6                     	;# 
  1839  1EC7                     	;# 
  1840  1ECB                     	;# 
  1841  1ECC                     	;# 
  1842  1ECD                     	;# 
  1843  1ECE                     	;# 
  1844  1F10                     	;# 
  1845  1F11                     	;# 
  1846  1F12                     	;# 
  1847  1F13                     	;# 
  1848  1F14                     	;# 
  1849  1F15                     	;# 
  1850  1F16                     	;# 
  1851  1F17                     	;# 
  1852  1F18                     	;# 
  1853  1F19                     	;# 
  1854  1F1A                     	;# 
  1855  1F1B                     	;# 
  1856  1F1C                     	;# 
  1857  1F1D                     	;# 
  1858  1F1E                     	;# 
  1859  1F1F                     	;# 
  1860  1F20                     	;# 
  1861  1F21                     	;# 
  1862  1F22                     	;# 
  1863  1F23                     	;# 
  1864  1F24                     	;# 
  1865  1F26                     	;# 
  1866  1F27                     	;# 
  1867  1F38                     	;# 
  1868  1F39                     	;# 
  1869  1F3A                     	;# 
  1870  1F3B                     	;# 
  1871  1F3C                     	;# 
  1872  1F3D                     	;# 
  1873  1F3E                     	;# 
  1874  1F3F                     	;# 
  1875  1F43                     	;# 
  1876  1F44                     	;# 
  1877  1F45                     	;# 
  1878  1F46                     	;# 
  1879  1F47                     	;# 
  1880  1F48                     	;# 
  1881  1F49                     	;# 
  1882  1F4A                     	;# 
  1883  1F4E                     	;# 
  1884  1F4F                     	;# 
  1885  1F50                     	;# 
  1886  1F51                     	;# 
  1887  1F52                     	;# 
  1888  1F53                     	;# 
  1889  1F54                     	;# 
  1890  1F55                     	;# 
  1891  1F65                     	;# 
  1892  1F68                     	;# 
  1893  1F69                     	;# 
  1894  1F6A                     	;# 
  1895  1F6B                     	;# 
  1896  1FE4                     	;# 
  1897  1FE5                     	;# 
  1898  1FE6                     	;# 
  1899  1FE7                     	;# 
  1900  1FE8                     	;# 
  1901  1FE9                     	;# 
  1902  1FEA                     	;# 
  1903  1FEB                     	;# 
  1904  1FED                     	;# 
  1905  1FEE                     	;# 
  1906  1FEF                     	;# 
  1907  0000                     	;# 
  1908  0001                     	;# 
  1909  0002                     	;# 
  1910  0003                     	;# 
  1911  0004                     	;# 
  1912  0005                     	;# 
  1913  0006                     	;# 
  1914  0007                     	;# 
  1915  0008                     	;# 
  1916  0009                     	;# 
  1917  000A                     	;# 
  1918  000B                     	;# 
  1919  000C                     	;# 
  1920  000D                     	;# 
  1921  000E                     	;# 
  1922  0010                     	;# 
  1923  0012                     	;# 
  1924  0013                     	;# 
  1925  0014                     	;# 
  1926  0018                     	;# 
  1927  0019                     	;# 
  1928  001A                     	;# 
  1929  001F                     	;# 
  1930  008C                     	;# 
  1931  008C                     	;# 
  1932  008D                     	;# 
  1933  008E                     	;# 
  1934  008E                     	;# 
  1935  008F                     	;# 
  1936  0090                     	;# 
  1937  0090                     	;# 
  1938  0091                     	;# 
  1939  0092                     	;# 
  1940  0092                     	;# 
  1941  0093                     	;# 
  1942  0094                     	;# 
  1943  0094                     	;# 
  1944  0095                     	;# 
  1945  0096                     	;# 
  1946  0096                     	;# 
  1947  0097                     	;# 
  1948  0098                     	;# 
  1949  0099                     	;# 
  1950  009A                     	;# 
  1951  009B                     	;# 
  1952  009B                     	;# 
  1953  009C                     	;# 
  1954  009D                     	;# 
  1955  009D                     	;# 
  1956  009E                     	;# 
  1957  009F                     	;# 
  1958  010C                     	;# 
  1959  010C                     	;# 
  1960  010D                     	;# 
  1961  010E                     	;# 
  1962  010F                     	;# 
  1963  010F                     	;# 
  1964  0110                     	;# 
  1965  0111                     	;# 
  1966  0112                     	;# 
  1967  0113                     	;# 
  1968  0114                     	;# 
  1969  0115                     	;# 
  1970  0116                     	;# 
  1971  0117                     	;# 
  1972  0118                     	;# 
  1973  0119                     	;# 
  1974  0119                     	;# 
  1975  0119                     	;# 
  1976  011A                     	;# 
  1977  011A                     	;# 
  1978  011A                     	;# 
  1979  011B                     	;# 
  1980  011B                     	;# 
  1981  011B                     	;# 
  1982  011B                     	;# 
  1983  011B                     	;# 
  1984  011C                     	;# 
  1985  011C                     	;# 
  1986  011C                     	;# 
  1987  011D                     	;# 
  1988  011D                     	;# 
  1989  011D                     	;# 
  1990  011E                     	;# 
  1991  011E                     	;# 
  1992  011E                     	;# 
  1993  011F                     	;# 
  1994  011F                     	;# 
  1995  011F                     	;# 
  1996  011F                     	;# 
  1997  011F                     	;# 
  1998  018C                     	;# 
  1999  018D                     	;# 
  2000  018E                     	;# 
  2001  018F                     	;# 
  2002  0190                     	;# 
  2003  0191                     	;# 
  2004  0192                     	;# 
  2005  020C                     	;# 
  2006  020C                     	;# 
  2007  020D                     	;# 
  2008  020E                     	;# 
  2009  020F                     	;# 
  2010  020F                     	;# 
  2011  0210                     	;# 
  2012  0210                     	;# 
  2013  0211                     	;# 
  2014  0211                     	;# 
  2015  021E                     	;# 
  2016  028C                     	;# 
  2017  028C                     	;# 
  2018  028D                     	;# 
  2019  028D                     	;# 
  2020  028E                     	;# 
  2021  028F                     	;# 
  2022  0290                     	;# 
  2023  0290                     	;# 
  2024  0291                     	;# 
  2025  0292                     	;# 
  2026  0292                     	;# 
  2027  0293                     	;# 
  2028  0293                     	;# 
  2029  0294                     	;# 
  2030  0295                     	;# 
  2031  0296                     	;# 
  2032  0296                     	;# 
  2033  0297                     	;# 
  2034  030C                     	;# 
  2035  030C                     	;# 
  2036  030D                     	;# 
  2037  030E                     	;# 
  2038  030F                     	;# 
  2039  0310                     	;# 
  2040  0310                     	;# 
  2041  0311                     	;# 
  2042  0312                     	;# 
  2043  0313                     	;# 
  2044  0314                     	;# 
  2045  0314                     	;# 
  2046  0315                     	;# 
  2047  0316                     	;# 
  2048  0318                     	;# 
  2049  0318                     	;# 
  2050  0319                     	;# 
  2051  031A                     	;# 
  2052  040D                     	;# 
  2053  048C                     	;# 
  2054  048C                     	;# 
  2055  048D                     	;# 
  2056  048E                     	;# 
  2057  048F                     	;# 
  2058  048F                     	;# 
  2059  0490                     	;# 
  2060  0491                     	;# 
  2061  0492                     	;# 
  2062  0492                     	;# 
  2063  0493                     	;# 
  2064  0494                     	;# 
  2065  0495                     	;# 
  2066  0495                     	;# 
  2067  0496                     	;# 
  2068  0497                     	;# 
  2069  0498                     	;# 
  2070  0499                     	;# 
  2071  049A                     	;# 
  2072  049B                     	;# 
  2073  049C                     	;# 
  2074  049D                     	;# 
  2075  059C                     	;# 
  2076  059C                     	;# 
  2077  059D                     	;# 
  2078  059D                     	;# 
  2079  059E                     	;# 
  2080  059F                     	;# 
  2081  060C                     	;# 
  2082  060D                     	;# 
  2083  060E                     	;# 
  2084  060F                     	;# 
  2085  0610                     	;# 
  2086  0611                     	;# 
  2087  0612                     	;# 
  2088  0613                     	;# 
  2089  0614                     	;# 
  2090  070C                     	;# 
  2091  070D                     	;# 
  2092  070E                     	;# 
  2093  070F                     	;# 
  2094  0710                     	;# 
  2095  0711                     	;# 
  2096  0712                     	;# 
  2097  0713                     	;# 
  2098  0714                     	;# 
  2099  0716                     	;# 
  2100  0717                     	;# 
  2101  0718                     	;# 
  2102  0719                     	;# 
  2103  071A                     	;# 
  2104  071B                     	;# 
  2105  071C                     	;# 
  2106  071D                     	;# 
  2107  071E                     	;# 
  2108  0796                     	;# 
  2109  0797                     	;# 
  2110  0798                     	;# 
  2111  0799                     	;# 
  2112  079A                     	;# 
  2113  079B                     	;# 
  2114  080C                     	;# 
  2115  080D                     	;# 
  2116  080E                     	;# 
  2117  080F                     	;# 
  2118  0810                     	;# 
  2119  0811                     	;# 
  2120  0812                     	;# 
  2121  0813                     	;# 
  2122  0814                     	;# 
  2123  081A                     	;# 
  2124  081B                     	;# 
  2125  081C                     	;# 
  2126  081D                     	;# 
  2127  081E                     	;# 
  2128  081F                     	;# 
  2129  088C                     	;# 
  2130  088D                     	;# 
  2131  088E                     	;# 
  2132  088F                     	;# 
  2133  0890                     	;# 
  2134  0891                     	;# 
  2135  0892                     	;# 
  2136  0893                     	;# 
  2137  0894                     	;# 
  2138  090C                     	;# 
  2139  090E                     	;# 
  2140  090F                     	;# 
  2141  091F                     	;# 
  2142  098F                     	;# 
  2143  098F                     	;# 
  2144  0990                     	;# 
  2145  0991                     	;# 
  2146  0992                     	;# 
  2147  0993                     	;# 
  2148  0994                     	;# 
  2149  0995                     	;# 
  2150  0996                     	;# 
  2151  0997                     	;# 
  2152  0A19                     	;# 
  2153  0A19                     	;# 
  2154  0A1A                     	;# 
  2155  0A1A                     	;# 
  2156  0A1B                     	;# 
  2157  0A1B                     	;# 
  2158  0A1B                     	;# 
  2159  0A1C                     	;# 
  2160  0A1C                     	;# 
  2161  0A1D                     	;# 
  2162  0A1D                     	;# 
  2163  0A1E                     	;# 
  2164  0A1E                     	;# 
  2165  0A1F                     	;# 
  2166  0A1F                     	;# 
  2167  0A1F                     	;# 
  2168  0C0C                     	;# 
  2169  0C0D                     	;# 
  2170  0C0E                     	;# 
  2171  0C0F                     	;# 
  2172  0C10                     	;# 
  2173  0C11                     	;# 
  2174  0C12                     	;# 
  2175  0C13                     	;# 
  2176  0C14                     	;# 
  2177  0C15                     	;# 
  2178  0C16                     	;# 
  2179  0C17                     	;# 
  2180  0C18                     	;# 
  2181  0C19                     	;# 
  2182  0C1A                     	;# 
  2183  0C1B                     	;# 
  2184  0C1C                     	;# 
  2185  0E8C                     	;# 
  2186  0E8D                     	;# 
  2187  0E8E                     	;# 
  2188  0E8F                     	;# 
  2189  1D0C                     	;# 
  2190  1D0D                     	;# 
  2191  1D0E                     	;# 
  2192  1D0F                     	;# 
  2193  1D10                     	;# 
  2194  1D11                     	;# 
  2195  1D12                     	;# 
  2196  1D13                     	;# 
  2197  1D14                     	;# 
  2198  1D15                     	;# 
  2199  1D16                     	;# 
  2200  1D17                     	;# 
  2201  1D18                     	;# 
  2202  1D19                     	;# 
  2203  1D1A                     	;# 
  2204  1D1E                     	;# 
  2205  1D1F                     	;# 
  2206  1D20                     	;# 
  2207  1D24                     	;# 
  2208  1D25                     	;# 
  2209  1D26                     	;# 
  2210  1D2A                     	;# 
  2211  1D2B                     	;# 
  2212  1D2C                     	;# 
  2213  1D30                     	;# 
  2214  1D31                     	;# 
  2215  1D32                     	;# 
  2216  1D36                     	;# 
  2217  1D37                     	;# 
  2218  1D38                     	;# 
  2219  1D3C                     	;# 
  2220  1D3D                     	;# 
  2221  1D3E                     	;# 
  2222  1D42                     	;# 
  2223  1D43                     	;# 
  2224  1D44                     	;# 
  2225  1E0F                     	;# 
  2226  1E10                     	;# 
  2227  1E11                     	;# 
  2228  1E12                     	;# 
  2229  1E13                     	;# 
  2230  1E14                     	;# 
  2231  1E15                     	;# 
  2232  1E16                     	;# 
  2233  1E17                     	;# 
  2234  1E18                     	;# 
  2235  1E19                     	;# 
  2236  1E1A                     	;# 
  2237  1E1B                     	;# 
  2238  1E1C                     	;# 
  2239  1E1D                     	;# 
  2240  1E1E                     	;# 
  2241  1E1F                     	;# 
  2242  1E20                     	;# 
  2243  1E21                     	;# 
  2244  1E22                     	;# 
  2245  1E23                     	;# 
  2246  1E24                     	;# 
  2247  1E25                     	;# 
  2248  1E26                     	;# 
  2249  1E27                     	;# 
  2250  1E28                     	;# 
  2251  1E29                     	;# 
  2252  1E2A                     	;# 
  2253  1E2B                     	;# 
  2254  1E2C                     	;# 
  2255  1E2D                     	;# 
  2256  1E2E                     	;# 
  2257  1E2F                     	;# 
  2258  1E30                     	;# 
  2259  1E31                     	;# 
  2260  1E32                     	;# 
  2261  1E33                     	;# 
  2262  1E34                     	;# 
  2263  1E35                     	;# 
  2264  1E36                     	;# 
  2265  1E37                     	;# 
  2266  1E8F                     	;# 
  2267  1E90                     	;# 
  2268  1E91                     	;# 
  2269  1E92                     	;# 
  2270  1E93                     	;# 
  2271  1E9C                     	;# 
  2272  1E9D                     	;# 
  2273  1EA1                     	;# 
  2274  1EA2                     	;# 
  2275  1EA9                     	;# 
  2276  1EAA                     	;# 
  2277  1EB1                     	;# 
  2278  1EBB                     	;# 
  2279  1EBC                     	;# 
  2280  1EBD                     	;# 
  2281  1EBE                     	;# 
  2282  1EC3                     	;# 
  2283  1EC5                     	;# 
  2284  1EC6                     	;# 
  2285  1EC7                     	;# 
  2286  1ECB                     	;# 
  2287  1ECC                     	;# 
  2288  1ECD                     	;# 
  2289  1ECE                     	;# 
  2290  1F10                     	;# 
  2291  1F11                     	;# 
  2292  1F12                     	;# 
  2293  1F13                     	;# 
  2294  1F14                     	;# 
  2295  1F15                     	;# 
  2296  1F16                     	;# 
  2297  1F17                     	;# 
  2298  1F18                     	;# 
  2299  1F19                     	;# 
  2300  1F1A                     	;# 
  2301  1F1B                     	;# 
  2302  1F1C                     	;# 
  2303  1F1D                     	;# 
  2304  1F1E                     	;# 
  2305  1F1F                     	;# 
  2306  1F20                     	;# 
  2307  1F21                     	;# 
  2308  1F22                     	;# 
  2309  1F23                     	;# 
  2310  1F24                     	;# 
  2311  1F26                     	;# 
  2312  1F27                     	;# 
  2313  1F38                     	;# 
  2314  1F39                     	;# 
  2315  1F3A                     	;# 
  2316  1F3B                     	;# 
  2317  1F3C                     	;# 
  2318  1F3D                     	;# 
  2319  1F3E                     	;# 
  2320  1F3F                     	;# 
  2321  1F43                     	;# 
  2322  1F44                     	;# 
  2323  1F45                     	;# 
  2324  1F46                     	;# 
  2325  1F47                     	;# 
  2326  1F48                     	;# 
  2327  1F49                     	;# 
  2328  1F4A                     	;# 
  2329  1F4E                     	;# 
  2330  1F4F                     	;# 
  2331  1F50                     	;# 
  2332  1F51                     	;# 
  2333  1F52                     	;# 
  2334  1F53                     	;# 
  2335  1F54                     	;# 
  2336  1F55                     	;# 
  2337  1F65                     	;# 
  2338  1F68                     	;# 
  2339  1F69                     	;# 
  2340  1F6A                     	;# 
  2341  1F6B                     	;# 
  2342  1FE4                     	;# 
  2343  1FE5                     	;# 
  2344  1FE6                     	;# 
  2345  1FE7                     	;# 
  2346  1FE8                     	;# 
  2347  1FE9                     	;# 
  2348  1FEA                     	;# 
  2349  1FEB                     	;# 
  2350  1FED                     	;# 
  2351  1FEE                     	;# 
  2352  1FEF                     	;# 
  2353  0000                     	;# 
  2354  0001                     	;# 
  2355  0002                     	;# 
  2356  0003                     	;# 
  2357  0004                     	;# 
  2358  0005                     	;# 
  2359  0006                     	;# 
  2360  0007                     	;# 
  2361  0008                     	;# 
  2362  0009                     	;# 
  2363  000A                     	;# 
  2364  000B                     	;# 
  2365  000C                     	;# 
  2366  000D                     	;# 
  2367  000E                     	;# 
  2368  0010                     	;# 
  2369  0012                     	;# 
  2370  0013                     	;# 
  2371  0014                     	;# 
  2372  0018                     	;# 
  2373  0019                     	;# 
  2374  001A                     	;# 
  2375  001F                     	;# 
  2376  008C                     	;# 
  2377  008C                     	;# 
  2378  008D                     	;# 
  2379  008E                     	;# 
  2380  008E                     	;# 
  2381  008F                     	;# 
  2382  0090                     	;# 
  2383  0090                     	;# 
  2384  0091                     	;# 
  2385  0092                     	;# 
  2386  0092                     	;# 
  2387  0093                     	;# 
  2388  0094                     	;# 
  2389  0094                     	;# 
  2390  0095                     	;# 
  2391  0096                     	;# 
  2392  0096                     	;# 
  2393  0097                     	;# 
  2394  0098                     	;# 
  2395  0099                     	;# 
  2396  009A                     	;# 
  2397  009B                     	;# 
  2398  009B                     	;# 
  2399  009C                     	;# 
  2400  009D                     	;# 
  2401  009D                     	;# 
  2402  009E                     	;# 
  2403  009F                     	;# 
  2404  010C                     	;# 
  2405  010C                     	;# 
  2406  010D                     	;# 
  2407  010E                     	;# 
  2408  010F                     	;# 
  2409  010F                     	;# 
  2410  0110                     	;# 
  2411  0111                     	;# 
  2412  0112                     	;# 
  2413  0113                     	;# 
  2414  0114                     	;# 
  2415  0115                     	;# 
  2416  0116                     	;# 
  2417  0117                     	;# 
  2418  0118                     	;# 
  2419  0119                     	;# 
  2420  0119                     	;# 
  2421  0119                     	;# 
  2422  011A                     	;# 
  2423  011A                     	;# 
  2424  011A                     	;# 
  2425  011B                     	;# 
  2426  011B                     	;# 
  2427  011B                     	;# 
  2428  011B                     	;# 
  2429  011B                     	;# 
  2430  011C                     	;# 
  2431  011C                     	;# 
  2432  011C                     	;# 
  2433  011D                     	;# 
  2434  011D                     	;# 
  2435  011D                     	;# 
  2436  011E                     	;# 
  2437  011E                     	;# 
  2438  011E                     	;# 
  2439  011F                     	;# 
  2440  011F                     	;# 
  2441  011F                     	;# 
  2442  011F                     	;# 
  2443  011F                     	;# 
  2444  018C                     	;# 
  2445  018D                     	;# 
  2446  018E                     	;# 
  2447  018F                     	;# 
  2448  0190                     	;# 
  2449  0191                     	;# 
  2450  0192                     	;# 
  2451  020C                     	;# 
  2452  020C                     	;# 
  2453  020D                     	;# 
  2454  020E                     	;# 
  2455  020F                     	;# 
  2456  020F                     	;# 
  2457  0210                     	;# 
  2458  0210                     	;# 
  2459  0211                     	;# 
  2460  0211                     	;# 
  2461  021E                     	;# 
  2462  028C                     	;# 
  2463  028C                     	;# 
  2464  028D                     	;# 
  2465  028D                     	;# 
  2466  028E                     	;# 
  2467  028F                     	;# 
  2468  0290                     	;# 
  2469  0290                     	;# 
  2470  0291                     	;# 
  2471  0292                     	;# 
  2472  0292                     	;# 
  2473  0293                     	;# 
  2474  0293                     	;# 
  2475  0294                     	;# 
  2476  0295                     	;# 
  2477  0296                     	;# 
  2478  0296                     	;# 
  2479  0297                     	;# 
  2480  030C                     	;# 
  2481  030C                     	;# 
  2482  030D                     	;# 
  2483  030E                     	;# 
  2484  030F                     	;# 
  2485  0310                     	;# 
  2486  0310                     	;# 
  2487  0311                     	;# 
  2488  0312                     	;# 
  2489  0313                     	;# 
  2490  0314                     	;# 
  2491  0314                     	;# 
  2492  0315                     	;# 
  2493  0316                     	;# 
  2494  0318                     	;# 
  2495  0318                     	;# 
  2496  0319                     	;# 
  2497  031A                     	;# 
  2498  040D                     	;# 
  2499  048C                     	;# 
  2500  048C                     	;# 
  2501  048D                     	;# 
  2502  048E                     	;# 
  2503  048F                     	;# 
  2504  048F                     	;# 
  2505  0490                     	;# 
  2506  0491                     	;# 
  2507  0492                     	;# 
  2508  0492                     	;# 
  2509  0493                     	;# 
  2510  0494                     	;# 
  2511  0495                     	;# 
  2512  0495                     	;# 
  2513  0496                     	;# 
  2514  0497                     	;# 
  2515  0498                     	;# 
  2516  0499                     	;# 
  2517  049A                     	;# 
  2518  049B                     	;# 
  2519  049C                     	;# 
  2520  049D                     	;# 
  2521  059C                     	;# 
  2522  059C                     	;# 
  2523  059D                     	;# 
  2524  059D                     	;# 
  2525  059E                     	;# 
  2526  059F                     	;# 
  2527  060C                     	;# 
  2528  060D                     	;# 
  2529  060E                     	;# 
  2530  060F                     	;# 
  2531  0610                     	;# 
  2532  0611                     	;# 
  2533  0612                     	;# 
  2534  0613                     	;# 
  2535  0614                     	;# 
  2536  070C                     	;# 
  2537  070D                     	;# 
  2538  070E                     	;# 
  2539  070F                     	;# 
  2540  0710                     	;# 
  2541  0711                     	;# 
  2542  0712                     	;# 
  2543  0713                     	;# 
  2544  0714                     	;# 
  2545  0716                     	;# 
  2546  0717                     	;# 
  2547  0718                     	;# 
  2548  0719                     	;# 
  2549  071A                     	;# 
  2550  071B                     	;# 
  2551  071C                     	;# 
  2552  071D                     	;# 
  2553  071E                     	;# 
  2554  0796                     	;# 
  2555  0797                     	;# 
  2556  0798                     	;# 
  2557  0799                     	;# 
  2558  079A                     	;# 
  2559  079B                     	;# 
  2560  080C                     	;# 
  2561  080D                     	;# 
  2562  080E                     	;# 
  2563  080F                     	;# 
  2564  0810                     	;# 
  2565  0811                     	;# 
  2566  0812                     	;# 
  2567  0813                     	;# 
  2568  0814                     	;# 
  2569  081A                     	;# 
  2570  081B                     	;# 
  2571  081C                     	;# 
  2572  081D                     	;# 
  2573  081E                     	;# 
  2574  081F                     	;# 
  2575  088C                     	;# 
  2576  088D                     	;# 
  2577  088E                     	;# 
  2578  088F                     	;# 
  2579  0890                     	;# 
  2580  0891                     	;# 
  2581  0892                     	;# 
  2582  0893                     	;# 
  2583  0894                     	;# 
  2584  090C                     	;# 
  2585  090E                     	;# 
  2586  090F                     	;# 
  2587  091F                     	;# 
  2588  098F                     	;# 
  2589  098F                     	;# 
  2590  0990                     	;# 
  2591  0991                     	;# 
  2592  0992                     	;# 
  2593  0993                     	;# 
  2594  0994                     	;# 
  2595  0995                     	;# 
  2596  0996                     	;# 
  2597  0997                     	;# 
  2598  0A19                     	;# 
  2599  0A19                     	;# 
  2600  0A1A                     	;# 
  2601  0A1A                     	;# 
  2602  0A1B                     	;# 
  2603  0A1B                     	;# 
  2604  0A1B                     	;# 
  2605  0A1C                     	;# 
  2606  0A1C                     	;# 
  2607  0A1D                     	;# 
  2608  0A1D                     	;# 
  2609  0A1E                     	;# 
  2610  0A1E                     	;# 
  2611  0A1F                     	;# 
  2612  0A1F                     	;# 
  2613  0A1F                     	;# 
  2614  0C0C                     	;# 
  2615  0C0D                     	;# 
  2616  0C0E                     	;# 
  2617  0C0F                     	;# 
  2618  0C10                     	;# 
  2619  0C11                     	;# 
  2620  0C12                     	;# 
  2621  0C13                     	;# 
  2622  0C14                     	;# 
  2623  0C15                     	;# 
  2624  0C16                     	;# 
  2625  0C17                     	;# 
  2626  0C18                     	;# 
  2627  0C19                     	;# 
  2628  0C1A                     	;# 
  2629  0C1B                     	;# 
  2630  0C1C                     	;# 
  2631  0E8C                     	;# 
  2632  0E8D                     	;# 
  2633  0E8E                     	;# 
  2634  0E8F                     	;# 
  2635  1D0C                     	;# 
  2636  1D0D                     	;# 
  2637  1D0E                     	;# 
  2638  1D0F                     	;# 
  2639  1D10                     	;# 
  2640  1D11                     	;# 
  2641  1D12                     	;# 
  2642  1D13                     	;# 
  2643  1D14                     	;# 
  2644  1D15                     	;# 
  2645  1D16                     	;# 
  2646  1D17                     	;# 
  2647  1D18                     	;# 
  2648  1D19                     	;# 
  2649  1D1A                     	;# 
  2650  1D1E                     	;# 
  2651  1D1F                     	;# 
  2652  1D20                     	;# 
  2653  1D24                     	;# 
  2654  1D25                     	;# 
  2655  1D26                     	;# 
  2656  1D2A                     	;# 
  2657  1D2B                     	;# 
  2658  1D2C                     	;# 
  2659  1D30                     	;# 
  2660  1D31                     	;# 
  2661  1D32                     	;# 
  2662  1D36                     	;# 
  2663  1D37                     	;# 
  2664  1D38                     	;# 
  2665  1D3C                     	;# 
  2666  1D3D                     	;# 
  2667  1D3E                     	;# 
  2668  1D42                     	;# 
  2669  1D43                     	;# 
  2670  1D44                     	;# 
  2671  1E0F                     	;# 
  2672  1E10                     	;# 
  2673  1E11                     	;# 
  2674  1E12                     	;# 
  2675  1E13                     	;# 
  2676  1E14                     	;# 
  2677  1E15                     	;# 
  2678  1E16                     	;# 
  2679  1E17                     	;# 
  2680  1E18                     	;# 
  2681  1E19                     	;# 
  2682  1E1A                     	;# 
  2683  1E1B                     	;# 
  2684  1E1C                     	;# 
  2685  1E1D                     	;# 
  2686  1E1E                     	;# 
  2687  1E1F                     	;# 
  2688  1E20                     	;# 
  2689  1E21                     	;# 
  2690  1E22                     	;# 
  2691  1E23                     	;# 
  2692  1E24                     	;# 
  2693  1E25                     	;# 
  2694  1E26                     	;# 
  2695  1E27                     	;# 
  2696  1E28                     	;# 
  2697  1E29                     	;# 
  2698  1E2A                     	;# 
  2699  1E2B                     	;# 
  2700  1E2C                     	;# 
  2701  1E2D                     	;# 
  2702  1E2E                     	;# 
  2703  1E2F                     	;# 
  2704  1E30                     	;# 
  2705  1E31                     	;# 
  2706  1E32                     	;# 
  2707  1E33                     	;# 
  2708  1E34                     	;# 
  2709  1E35                     	;# 
  2710  1E36                     	;# 
  2711  1E37                     	;# 
  2712  1E8F                     	;# 
  2713  1E90                     	;# 
  2714  1E91                     	;# 
  2715  1E92                     	;# 
  2716  1E93                     	;# 
  2717  1E9C                     	;# 
  2718  1E9D                     	;# 
  2719  1EA1                     	;# 
  2720  1EA2                     	;# 
  2721  1EA9                     	;# 
  2722  1EAA                     	;# 
  2723  1EB1                     	;# 
  2724  1EBB                     	;# 
  2725  1EBC                     	;# 
  2726  1EBD                     	;# 
  2727  1EBE                     	;# 
  2728  1EC3                     	;# 
  2729  1EC5                     	;# 
  2730  1EC6                     	;# 
  2731  1EC7                     	;# 
  2732  1ECB                     	;# 
  2733  1ECC                     	;# 
  2734  1ECD                     	;# 
  2735  1ECE                     	;# 
  2736  1F10                     	;# 
  2737  1F11                     	;# 
  2738  1F12                     	;# 
  2739  1F13                     	;# 
  2740  1F14                     	;# 
  2741  1F15                     	;# 
  2742  1F16                     	;# 
  2743  1F17                     	;# 
  2744  1F18                     	;# 
  2745  1F19                     	;# 
  2746  1F1A                     	;# 
  2747  1F1B                     	;# 
  2748  1F1C                     	;# 
  2749  1F1D                     	;# 
  2750  1F1E                     	;# 
  2751  1F1F                     	;# 
  2752  1F20                     	;# 
  2753  1F21                     	;# 
  2754  1F22                     	;# 
  2755  1F23                     	;# 
  2756  1F24                     	;# 
  2757  1F26                     	;# 
  2758  1F27                     	;# 
  2759  1F38                     	;# 
  2760  1F39                     	;# 
  2761  1F3A                     	;# 
  2762  1F3B                     	;# 
  2763  1F3C                     	;# 
  2764  1F3D                     	;# 
  2765  1F3E                     	;# 
  2766  1F3F                     	;# 
  2767  1F43                     	;# 
  2768  1F44                     	;# 
  2769  1F45                     	;# 
  2770  1F46                     	;# 
  2771  1F47                     	;# 
  2772  1F48                     	;# 
  2773  1F49                     	;# 
  2774  1F4A                     	;# 
  2775  1F4E                     	;# 
  2776  1F4F                     	;# 
  2777  1F50                     	;# 
  2778  1F51                     	;# 
  2779  1F52                     	;# 
  2780  1F53                     	;# 
  2781  1F54                     	;# 
  2782  1F55                     	;# 
  2783  1F65                     	;# 
  2784  1F68                     	;# 
  2785  1F69                     	;# 
  2786  1F6A                     	;# 
  2787  1F6B                     	;# 
  2788  1FE4                     	;# 
  2789  1FE5                     	;# 
  2790  1FE6                     	;# 
  2791  1FE7                     	;# 
  2792  1FE8                     	;# 
  2793  1FE9                     	;# 
  2794  1FEA                     	;# 
  2795  1FEB                     	;# 
  2796  1FED                     	;# 
  2797  1FEE                     	;# 
  2798  1FEF                     	;# 
  2799  0000                     	;# 
  2800  0001                     	;# 
  2801  0002                     	;# 
  2802  0003                     	;# 
  2803  0004                     	;# 
  2804  0005                     	;# 
  2805  0006                     	;# 
  2806  0007                     	;# 
  2807  0008                     	;# 
  2808  0009                     	;# 
  2809  000A                     	;# 
  2810  000B                     	;# 
  2811  000C                     	;# 
  2812  000D                     	;# 
  2813  000E                     	;# 
  2814  0010                     	;# 
  2815  0012                     	;# 
  2816  0013                     	;# 
  2817  0014                     	;# 
  2818  0018                     	;# 
  2819  0019                     	;# 
  2820  001A                     	;# 
  2821  001F                     	;# 
  2822  008C                     	;# 
  2823  008C                     	;# 
  2824  008D                     	;# 
  2825  008E                     	;# 
  2826  008E                     	;# 
  2827  008F                     	;# 
  2828  0090                     	;# 
  2829  0090                     	;# 
  2830  0091                     	;# 
  2831  0092                     	;# 
  2832  0092                     	;# 
  2833  0093                     	;# 
  2834  0094                     	;# 
  2835  0094                     	;# 
  2836  0095                     	;# 
  2837  0096                     	;# 
  2838  0096                     	;# 
  2839  0097                     	;# 
  2840  0098                     	;# 
  2841  0099                     	;# 
  2842  009A                     	;# 
  2843  009B                     	;# 
  2844  009B                     	;# 
  2845  009C                     	;# 
  2846  009D                     	;# 
  2847  009D                     	;# 
  2848  009E                     	;# 
  2849  009F                     	;# 
  2850  010C                     	;# 
  2851  010C                     	;# 
  2852  010D                     	;# 
  2853  010E                     	;# 
  2854  010F                     	;# 
  2855  010F                     	;# 
  2856  0110                     	;# 
  2857  0111                     	;# 
  2858  0112                     	;# 
  2859  0113                     	;# 
  2860  0114                     	;# 
  2861  0115                     	;# 
  2862  0116                     	;# 
  2863  0117                     	;# 
  2864  0118                     	;# 
  2865  0119                     	;# 
  2866  0119                     	;# 
  2867  0119                     	;# 
  2868  011A                     	;# 
  2869  011A                     	;# 
  2870  011A                     	;# 
  2871  011B                     	;# 
  2872  011B                     	;# 
  2873  011B                     	;# 
  2874  011B                     	;# 
  2875  011B                     	;# 
  2876  011C                     	;# 
  2877  011C                     	;# 
  2878  011C                     	;# 
  2879  011D                     	;# 
  2880  011D                     	;# 
  2881  011D                     	;# 
  2882  011E                     	;# 
  2883  011E                     	;# 
  2884  011E                     	;# 
  2885  011F                     	;# 
  2886  011F                     	;# 
  2887  011F                     	;# 
  2888  011F                     	;# 
  2889  011F                     	;# 
  2890  018C                     	;# 
  2891  018D                     	;# 
  2892  018E                     	;# 
  2893  018F                     	;# 
  2894  0190                     	;# 
  2895  0191                     	;# 
  2896  0192                     	;# 
  2897  020C                     	;# 
  2898  020C                     	;# 
  2899  020D                     	;# 
  2900  020E                     	;# 
  2901  020F                     	;# 
  2902  020F                     	;# 
  2903  0210                     	;# 
  2904  0210                     	;# 
  2905  0211                     	;# 
  2906  0211                     	;# 
  2907  021E                     	;# 
  2908  028C                     	;# 
  2909  028C                     	;# 
  2910  028D                     	;# 
  2911  028D                     	;# 
  2912  028E                     	;# 
  2913  028F                     	;# 
  2914  0290                     	;# 
  2915  0290                     	;# 
  2916  0291                     	;# 
  2917  0292                     	;# 
  2918  0292                     	;# 
  2919  0293                     	;# 
  2920  0293                     	;# 
  2921  0294                     	;# 
  2922  0295                     	;# 
  2923  0296                     	;# 
  2924  0296                     	;# 
  2925  0297                     	;# 
  2926  030C                     	;# 
  2927  030C                     	;# 
  2928  030D                     	;# 
  2929  030E                     	;# 
  2930  030F                     	;# 
  2931  0310                     	;# 
  2932  0310                     	;# 
  2933  0311                     	;# 
  2934  0312                     	;# 
  2935  0313                     	;# 
  2936  0314                     	;# 
  2937  0314                     	;# 
  2938  0315                     	;# 
  2939  0316                     	;# 
  2940  0318                     	;# 
  2941  0318                     	;# 
  2942  0319                     	;# 
  2943  031A                     	;# 
  2944  040D                     	;# 
  2945  048C                     	;# 
  2946  048C                     	;# 
  2947  048D                     	;# 
  2948  048E                     	;# 
  2949  048F                     	;# 
  2950  048F                     	;# 
  2951  0490                     	;# 
  2952  0491                     	;# 
  2953  0492                     	;# 
  2954  0492                     	;# 
  2955  0493                     	;# 
  2956  0494                     	;# 
  2957  0495                     	;# 
  2958  0495                     	;# 
  2959  0496                     	;# 
  2960  0497                     	;# 
  2961  0498                     	;# 
  2962  0499                     	;# 
  2963  049A                     	;# 
  2964  049B                     	;# 
  2965  049C                     	;# 
  2966  049D                     	;# 
  2967  059C                     	;# 
  2968  059C                     	;# 
  2969  059D                     	;# 
  2970  059D                     	;# 
  2971  059E                     	;# 
  2972  059F                     	;# 
  2973  060C                     	;# 
  2974  060D                     	;# 
  2975  060E                     	;# 
  2976  060F                     	;# 
  2977  0610                     	;# 
  2978  0611                     	;# 
  2979  0612                     	;# 
  2980  0613                     	;# 
  2981  0614                     	;# 
  2982  070C                     	;# 
  2983  070D                     	;# 
  2984  070E                     	;# 
  2985  070F                     	;# 
  2986  0710                     	;# 
  2987  0711                     	;# 
  2988  0712                     	;# 
  2989  0713                     	;# 
  2990  0714                     	;# 
  2991  0716                     	;# 
  2992  0717                     	;# 
  2993  0718                     	;# 
  2994  0719                     	;# 
  2995  071A                     	;# 
  2996  071B                     	;# 
  2997  071C                     	;# 
  2998  071D                     	;# 
  2999  071E                     	;# 
  3000  0796                     	;# 
  3001  0797                     	;# 
  3002  0798                     	;# 
  3003  0799                     	;# 
  3004  079A                     	;# 
  3005  079B                     	;# 
  3006  080C                     	;# 
  3007  080D                     	;# 
  3008  080E                     	;# 
  3009  080F                     	;# 
  3010  0810                     	;# 
  3011  0811                     	;# 
  3012  0812                     	;# 
  3013  0813                     	;# 
  3014  0814                     	;# 
  3015  081A                     	;# 
  3016  081B                     	;# 
  3017  081C                     	;# 
  3018  081D                     	;# 
  3019  081E                     	;# 
  3020  081F                     	;# 
  3021  088C                     	;# 
  3022  088D                     	;# 
  3023  088E                     	;# 
  3024  088F                     	;# 
  3025  0890                     	;# 
  3026  0891                     	;# 
  3027  0892                     	;# 
  3028  0893                     	;# 
  3029  0894                     	;# 
  3030  090C                     	;# 
  3031  090E                     	;# 
  3032  090F                     	;# 
  3033  091F                     	;# 
  3034  098F                     	;# 
  3035  098F                     	;# 
  3036  0990                     	;# 
  3037  0991                     	;# 
  3038  0992                     	;# 
  3039  0993                     	;# 
  3040  0994                     	;# 
  3041  0995                     	;# 
  3042  0996                     	;# 
  3043  0997                     	;# 
  3044  0A19                     	;# 
  3045  0A19                     	;# 
  3046  0A1A                     	;# 
  3047  0A1A                     	;# 
  3048  0A1B                     	;# 
  3049  0A1B                     	;# 
  3050  0A1B                     	;# 
  3051  0A1C                     	;# 
  3052  0A1C                     	;# 
  3053  0A1D                     	;# 
  3054  0A1D                     	;# 
  3055  0A1E                     	;# 
  3056  0A1E                     	;# 
  3057  0A1F                     	;# 
  3058  0A1F                     	;# 
  3059  0A1F                     	;# 
  3060  0C0C                     	;# 
  3061  0C0D                     	;# 
  3062  0C0E                     	;# 
  3063  0C0F                     	;# 
  3064  0C10                     	;# 
  3065  0C11                     	;# 
  3066  0C12                     	;# 
  3067  0C13                     	;# 
  3068  0C14                     	;# 
  3069  0C15                     	;# 
  3070  0C16                     	;# 
  3071  0C17                     	;# 
  3072  0C18                     	;# 
  3073  0C19                     	;# 
  3074  0C1A                     	;# 
  3075  0C1B                     	;# 
  3076  0C1C                     	;# 
  3077  0E8C                     	;# 
  3078  0E8D                     	;# 
  3079  0E8E                     	;# 
  3080  0E8F                     	;# 
  3081  1D0C                     	;# 
  3082  1D0D                     	;# 
  3083  1D0E                     	;# 
  3084  1D0F                     	;# 
  3085  1D10                     	;# 
  3086  1D11                     	;# 
  3087  1D12                     	;# 
  3088  1D13                     	;# 
  3089  1D14                     	;# 
  3090  1D15                     	;# 
  3091  1D16                     	;# 
  3092  1D17                     	;# 
  3093  1D18                     	;# 
  3094  1D19                     	;# 
  3095  1D1A                     	;# 
  3096  1D1E                     	;# 
  3097  1D1F                     	;# 
  3098  1D20                     	;# 
  3099  1D24                     	;# 
  3100  1D25                     	;# 
  3101  1D26                     	;# 
  3102  1D2A                     	;# 
  3103  1D2B                     	;# 
  3104  1D2C                     	;# 
  3105  1D30                     	;# 
  3106  1D31                     	;# 
  3107  1D32                     	;# 
  3108  1D36                     	;# 
  3109  1D37                     	;# 
  3110  1D38                     	;# 
  3111  1D3C                     	;# 
  3112  1D3D                     	;# 
  3113  1D3E                     	;# 
  3114  1D42                     	;# 
  3115  1D43                     	;# 
  3116  1D44                     	;# 
  3117  1E0F                     	;# 
  3118  1E10                     	;# 
  3119  1E11                     	;# 
  3120  1E12                     	;# 
  3121  1E13                     	;# 
  3122  1E14                     	;# 
  3123  1E15                     	;# 
  3124  1E16                     	;# 
  3125  1E17                     	;# 
  3126  1E18                     	;# 
  3127  1E19                     	;# 
  3128  1E1A                     	;# 
  3129  1E1B                     	;# 
  3130  1E1C                     	;# 
  3131  1E1D                     	;# 
  3132  1E1E                     	;# 
  3133  1E1F                     	;# 
  3134  1E20                     	;# 
  3135  1E21                     	;# 
  3136  1E22                     	;# 
  3137  1E23                     	;# 
  3138  1E24                     	;# 
  3139  1E25                     	;# 
  3140  1E26                     	;# 
  3141  1E27                     	;# 
  3142  1E28                     	;# 
  3143  1E29                     	;# 
  3144  1E2A                     	;# 
  3145  1E2B                     	;# 
  3146  1E2C                     	;# 
  3147  1E2D                     	;# 
  3148  1E2E                     	;# 
  3149  1E2F                     	;# 
  3150  1E30                     	;# 
  3151  1E31                     	;# 
  3152  1E32                     	;# 
  3153  1E33                     	;# 
  3154  1E34                     	;# 
  3155  1E35                     	;# 
  3156  1E36                     	;# 
  3157  1E37                     	;# 
  3158  1E8F                     	;# 
  3159  1E90                     	;# 
  3160  1E91                     	;# 
  3161  1E92                     	;# 
  3162  1E93                     	;# 
  3163  1E9C                     	;# 
  3164  1E9D                     	;# 
  3165  1EA1                     	;# 
  3166  1EA2                     	;# 
  3167  1EA9                     	;# 
  3168  1EAA                     	;# 
  3169  1EB1                     	;# 
  3170  1EBB                     	;# 
  3171  1EBC                     	;# 
  3172  1EBD                     	;# 
  3173  1EBE                     	;# 
  3174  1EC3                     	;# 
  3175  1EC5                     	;# 
  3176  1EC6                     	;# 
  3177  1EC7                     	;# 
  3178  1ECB                     	;# 
  3179  1ECC                     	;# 
  3180  1ECD                     	;# 
  3181  1ECE                     	;# 
  3182  1F10                     	;# 
  3183  1F11                     	;# 
  3184  1F12                     	;# 
  3185  1F13                     	;# 
  3186  1F14                     	;# 
  3187  1F15                     	;# 
  3188  1F16                     	;# 
  3189  1F17                     	;# 
  3190  1F18                     	;# 
  3191  1F19                     	;# 
  3192  1F1A                     	;# 
  3193  1F1B                     	;# 
  3194  1F1C                     	;# 
  3195  1F1D                     	;# 
  3196  1F1E                     	;# 
  3197  1F1F                     	;# 
  3198  1F20                     	;# 
  3199  1F21                     	;# 
  3200  1F22                     	;# 
  3201  1F23                     	;# 
  3202  1F24                     	;# 
  3203  1F26                     	;# 
  3204  1F27                     	;# 
  3205  1F38                     	;# 
  3206  1F39                     	;# 
  3207  1F3A                     	;# 
  3208  1F3B                     	;# 
  3209  1F3C                     	;# 
  3210  1F3D                     	;# 
  3211  1F3E                     	;# 
  3212  1F3F                     	;# 
  3213  1F43                     	;# 
  3214  1F44                     	;# 
  3215  1F45                     	;# 
  3216  1F46                     	;# 
  3217  1F47                     	;# 
  3218  1F48                     	;# 
  3219  1F49                     	;# 
  3220  1F4A                     	;# 
  3221  1F4E                     	;# 
  3222  1F4F                     	;# 
  3223  1F50                     	;# 
  3224  1F51                     	;# 
  3225  1F52                     	;# 
  3226  1F53                     	;# 
  3227  1F54                     	;# 
  3228  1F55                     	;# 
  3229  1F65                     	;# 
  3230  1F68                     	;# 
  3231  1F69                     	;# 
  3232  1F6A                     	;# 
  3233  1F6B                     	;# 
  3234  1FE4                     	;# 
  3235  1FE5                     	;# 
  3236  1FE6                     	;# 
  3237  1FE7                     	;# 
  3238  1FE8                     	;# 
  3239  1FE9                     	;# 
  3240  1FEA                     	;# 
  3241  1FEB                     	;# 
  3242  1FED                     	;# 
  3243  1FEE                     	;# 
  3244  1FEF                     	;# 
  3245  0000                     	;# 
  3246  0001                     	;# 
  3247  0002                     	;# 
  3248  0003                     	;# 
  3249  0004                     	;# 
  3250  0005                     	;# 
  3251  0006                     	;# 
  3252  0007                     	;# 
  3253  0008                     	;# 
  3254  0009                     	;# 
  3255  000A                     	;# 
  3256  000B                     	;# 
  3257  000C                     	;# 
  3258  000D                     	;# 
  3259  000E                     	;# 
  3260  0010                     	;# 
  3261  0012                     	;# 
  3262  0013                     	;# 
  3263  0014                     	;# 
  3264  0018                     	;# 
  3265  0019                     	;# 
  3266  001A                     	;# 
  3267  001F                     	;# 
  3268  008C                     	;# 
  3269  008C                     	;# 
  3270  008D                     	;# 
  3271  008E                     	;# 
  3272  008E                     	;# 
  3273  008F                     	;# 
  3274  0090                     	;# 
  3275  0090                     	;# 
  3276  0091                     	;# 
  3277  0092                     	;# 
  3278  0092                     	;# 
  3279  0093                     	;# 
  3280  0094                     	;# 
  3281  0094                     	;# 
  3282  0095                     	;# 
  3283  0096                     	;# 
  3284  0096                     	;# 
  3285  0097                     	;# 
  3286  0098                     	;# 
  3287  0099                     	;# 
  3288  009A                     	;# 
  3289  009B                     	;# 
  3290  009B                     	;# 
  3291  009C                     	;# 
  3292  009D                     	;# 
  3293  009D                     	;# 
  3294  009E                     	;# 
  3295  009F                     	;# 
  3296  010C                     	;# 
  3297  010C                     	;# 
  3298  010D                     	;# 
  3299  010E                     	;# 
  3300  010F                     	;# 
  3301  010F                     	;# 
  3302  0110                     	;# 
  3303  0111                     	;# 
  3304  0112                     	;# 
  3305  0113                     	;# 
  3306  0114                     	;# 
  3307  0115                     	;# 
  3308  0116                     	;# 
  3309  0117                     	;# 
  3310  0118                     	;# 
  3311  0119                     	;# 
  3312  0119                     	;# 
  3313  0119                     	;# 
  3314  011A                     	;# 
  3315  011A                     	;# 
  3316  011A                     	;# 
  3317  011B                     	;# 
  3318  011B                     	;# 
  3319  011B                     	;# 
  3320  011B                     	;# 
  3321  011B                     	;# 
  3322  011C                     	;# 
  3323  011C                     	;# 
  3324  011C                     	;# 
  3325  011D                     	;# 
  3326  011D                     	;# 
  3327  011D                     	;# 
  3328  011E                     	;# 
  3329  011E                     	;# 
  3330  011E                     	;# 
  3331  011F                     	;# 
  3332  011F                     	;# 
  3333  011F                     	;# 
  3334  011F                     	;# 
  3335  011F                     	;# 
  3336  018C                     	;# 
  3337  018D                     	;# 
  3338  018E                     	;# 
  3339  018F                     	;# 
  3340  0190                     	;# 
  3341  0191                     	;# 
  3342  0192                     	;# 
  3343  020C                     	;# 
  3344  020C                     	;# 
  3345  020D                     	;# 
  3346  020E                     	;# 
  3347  020F                     	;# 
  3348  020F                     	;# 
  3349  0210                     	;# 
  3350  0210                     	;# 
  3351  0211                     	;# 
  3352  0211                     	;# 
  3353  021E                     	;# 
  3354  028C                     	;# 
  3355  028C                     	;# 
  3356  028D                     	;# 
  3357  028D                     	;# 
  3358  028E                     	;# 
  3359  028F                     	;# 
  3360  0290                     	;# 
  3361  0290                     	;# 
  3362  0291                     	;# 
  3363  0292                     	;# 
  3364  0292                     	;# 
  3365  0293                     	;# 
  3366  0293                     	;# 
  3367  0294                     	;# 
  3368  0295                     	;# 
  3369  0296                     	;# 
  3370  0296                     	;# 
  3371  0297                     	;# 
  3372  030C                     	;# 
  3373  030C                     	;# 
  3374  030D                     	;# 
  3375  030E                     	;# 
  3376  030F                     	;# 
  3377  0310                     	;# 
  3378  0310                     	;# 
  3379  0311                     	;# 
  3380  0312                     	;# 
  3381  0313                     	;# 
  3382  0314                     	;# 
  3383  0314                     	;# 
  3384  0315                     	;# 
  3385  0316                     	;# 
  3386  0318                     	;# 
  3387  0318                     	;# 
  3388  0319                     	;# 
  3389  031A                     	;# 
  3390  040D                     	;# 
  3391  048C                     	;# 
  3392  048C                     	;# 
  3393  048D                     	;# 
  3394  048E                     	;# 
  3395  048F                     	;# 
  3396  048F                     	;# 
  3397  0490                     	;# 
  3398  0491                     	;# 
  3399  0492                     	;# 
  3400  0492                     	;# 
  3401  0493                     	;# 
  3402  0494                     	;# 
  3403  0495                     	;# 
  3404  0495                     	;# 
  3405  0496                     	;# 
  3406  0497                     	;# 
  3407  0498                     	;# 
  3408  0499                     	;# 
  3409  049A                     	;# 
  3410  049B                     	;# 
  3411  049C                     	;# 
  3412  049D                     	;# 
  3413  059C                     	;# 
  3414  059C                     	;# 
  3415  059D                     	;# 
  3416  059D                     	;# 
  3417  059E                     	;# 
  3418  059F                     	;# 
  3419  060C                     	;# 
  3420  060D                     	;# 
  3421  060E                     	;# 
  3422  060F                     	;# 
  3423  0610                     	;# 
  3424  0611                     	;# 
  3425  0612                     	;# 
  3426  0613                     	;# 
  3427  0614                     	;# 
  3428  070C                     	;# 
  3429  070D                     	;# 
  3430  070E                     	;# 
  3431  070F                     	;# 
  3432  0710                     	;# 
  3433  0711                     	;# 
  3434  0712                     	;# 
  3435  0713                     	;# 
  3436  0714                     	;# 
  3437  0716                     	;# 
  3438  0717                     	;# 
  3439  0718                     	;# 
  3440  0719                     	;# 
  3441  071A                     	;# 
  3442  071B                     	;# 
  3443  071C                     	;# 
  3444  071D                     	;# 
  3445  071E                     	;# 
  3446  0796                     	;# 
  3447  0797                     	;# 
  3448  0798                     	;# 
  3449  0799                     	;# 
  3450  079A                     	;# 
  3451  079B                     	;# 
  3452  080C                     	;# 
  3453  080D                     	;# 
  3454  080E                     	;# 
  3455  080F                     	;# 
  3456  0810                     	;# 
  3457  0811                     	;# 
  3458  0812                     	;# 
  3459  0813                     	;# 
  3460  0814                     	;# 
  3461  081A                     	;# 
  3462  081B                     	;# 
  3463  081C                     	;# 
  3464  081D                     	;# 
  3465  081E                     	;# 
  3466  081F                     	;# 
  3467  088C                     	;# 
  3468  088D                     	;# 
  3469  088E                     	;# 
  3470  088F                     	;# 
  3471  0890                     	;# 
  3472  0891                     	;# 
  3473  0892                     	;# 
  3474  0893                     	;# 
  3475  0894                     	;# 
  3476  090C                     	;# 
  3477  090E                     	;# 
  3478  090F                     	;# 
  3479  091F                     	;# 
  3480  098F                     	;# 
  3481  098F                     	;# 
  3482  0990                     	;# 
  3483  0991                     	;# 
  3484  0992                     	;# 
  3485  0993                     	;# 
  3486  0994                     	;# 
  3487  0995                     	;# 
  3488  0996                     	;# 
  3489  0997                     	;# 
  3490  0A19                     	;# 
  3491  0A19                     	;# 
  3492  0A1A                     	;# 
  3493  0A1A                     	;# 
  3494  0A1B                     	;# 
  3495  0A1B                     	;# 
  3496  0A1B                     	;# 
  3497  0A1C                     	;# 
  3498  0A1C                     	;# 
  3499  0A1D                     	;# 
  3500  0A1D                     	;# 
  3501  0A1E                     	;# 
  3502  0A1E                     	;# 
  3503  0A1F                     	;# 
  3504  0A1F                     	;# 
  3505  0A1F                     	;# 
  3506  0C0C                     	;# 
  3507  0C0D                     	;# 
  3508  0C0E                     	;# 
  3509  0C0F                     	;# 
  3510  0C10                     	;# 
  3511  0C11                     	;# 
  3512  0C12                     	;# 
  3513  0C13                     	;# 
  3514  0C14                     	;# 
  3515  0C15                     	;# 
  3516  0C16                     	;# 
  3517  0C17                     	;# 
  3518  0C18                     	;# 
  3519  0C19                     	;# 
  3520  0C1A                     	;# 
  3521  0C1B                     	;# 
  3522  0C1C                     	;# 
  3523  0E8C                     	;# 
  3524  0E8D                     	;# 
  3525  0E8E                     	;# 
  3526  0E8F                     	;# 
  3527  1D0C                     	;# 
  3528  1D0D                     	;# 
  3529  1D0E                     	;# 
  3530  1D0F                     	;# 
  3531  1D10                     	;# 
  3532  1D11                     	;# 
  3533  1D12                     	;# 
  3534  1D13                     	;# 
  3535  1D14                     	;# 
  3536  1D15                     	;# 
  3537  1D16                     	;# 
  3538  1D17                     	;# 
  3539  1D18                     	;# 
  3540  1D19                     	;# 
  3541  1D1A                     	;# 
  3542  1D1E                     	;# 
  3543  1D1F                     	;# 
  3544  1D20                     	;# 
  3545  1D24                     	;# 
  3546  1D25                     	;# 
  3547  1D26                     	;# 
  3548  1D2A                     	;# 
  3549  1D2B                     	;# 
  3550  1D2C                     	;# 
  3551  1D30                     	;# 
  3552  1D31                     	;# 
  3553  1D32                     	;# 
  3554  1D36                     	;# 
  3555  1D37                     	;# 
  3556  1D38                     	;# 
  3557  1D3C                     	;# 
  3558  1D3D                     	;# 
  3559  1D3E                     	;# 
  3560  1D42                     	;# 
  3561  1D43                     	;# 
  3562  1D44                     	;# 
  3563  1E0F                     	;# 
  3564  1E10                     	;# 
  3565  1E11                     	;# 
  3566  1E12                     	;# 
  3567  1E13                     	;# 
  3568  1E14                     	;# 
  3569  1E15                     	;# 
  3570  1E16                     	;# 
  3571  1E17                     	;# 
  3572  1E18                     	;# 
  3573  1E19                     	;# 
  3574  1E1A                     	;# 
  3575  1E1B                     	;# 
  3576  1E1C                     	;# 
  3577  1E1D                     	;# 
  3578  1E1E                     	;# 
  3579  1E1F                     	;# 
  3580  1E20                     	;# 
  3581  1E21                     	;# 
  3582  1E22                     	;# 
  3583  1E23                     	;# 
  3584  1E24                     	;# 
  3585  1E25                     	;# 
  3586  1E26                     	;# 
  3587  1E27                     	;# 
  3588  1E28                     	;# 
  3589  1E29                     	;# 
  3590  1E2A                     	;# 
  3591  1E2B                     	;# 
  3592  1E2C                     	;# 
  3593  1E2D                     	;# 
  3594  1E2E                     	;# 
  3595  1E2F                     	;# 
  3596  1E30                     	;# 
  3597  1E31                     	;# 
  3598  1E32                     	;# 
  3599  1E33                     	;# 
  3600  1E34                     	;# 
  3601  1E35                     	;# 
  3602  1E36                     	;# 
  3603  1E37                     	;# 
  3604  1E8F                     	;# 
  3605  1E90                     	;# 
  3606  1E91                     	;# 
  3607  1E92                     	;# 
  3608  1E93                     	;# 
  3609  1E9C                     	;# 
  3610  1E9D                     	;# 
  3611  1EA1                     	;# 
  3612  1EA2                     	;# 
  3613  1EA9                     	;# 
  3614  1EAA                     	;# 
  3615  1EB1                     	;# 
  3616  1EBB                     	;# 
  3617  1EBC                     	;# 
  3618  1EBD                     	;# 
  3619  1EBE                     	;# 
  3620  1EC3                     	;# 
  3621  1EC5                     	;# 
  3622  1EC6                     	;# 
  3623  1EC7                     	;# 
  3624  1ECB                     	;# 
  3625  1ECC                     	;# 
  3626  1ECD                     	;# 
  3627  1ECE                     	;# 
  3628  1F10                     	;# 
  3629  1F11                     	;# 
  3630  1F12                     	;# 
  3631  1F13                     	;# 
  3632  1F14                     	;# 
  3633  1F15                     	;# 
  3634  1F16                     	;# 
  3635  1F17                     	;# 
  3636  1F18                     	;# 
  3637  1F19                     	;# 
  3638  1F1A                     	;# 
  3639  1F1B                     	;# 
  3640  1F1C                     	;# 
  3641  1F1D                     	;# 
  3642  1F1E                     	;# 
  3643  1F1F                     	;# 
  3644  1F20                     	;# 
  3645  1F21                     	;# 
  3646  1F22                     	;# 
  3647  1F23                     	;# 
  3648  1F24                     	;# 
  3649  1F26                     	;# 
  3650  1F27                     	;# 
  3651  1F38                     	;# 
  3652  1F39                     	;# 
  3653  1F3A                     	;# 
  3654  1F3B                     	;# 
  3655  1F3C                     	;# 
  3656  1F3D                     	;# 
  3657  1F3E                     	;# 
  3658  1F3F                     	;# 
  3659  1F43                     	;# 
  3660  1F44                     	;# 
  3661  1F45                     	;# 
  3662  1F46                     	;# 
  3663  1F47                     	;# 
  3664  1F48                     	;# 
  3665  1F49                     	;# 
  3666  1F4A                     	;# 
  3667  1F4E                     	;# 
  3668  1F4F                     	;# 
  3669  1F50                     	;# 
  3670  1F51                     	;# 
  3671  1F52                     	;# 
  3672  1F53                     	;# 
  3673  1F54                     	;# 
  3674  1F55                     	;# 
  3675  1F65                     	;# 
  3676  1F68                     	;# 
  3677  1F69                     	;# 
  3678  1F6A                     	;# 
  3679  1F6B                     	;# 
  3680  1FE4                     	;# 
  3681  1FE5                     	;# 
  3682  1FE6                     	;# 
  3683  1FE7                     	;# 
  3684  1FE8                     	;# 
  3685  1FE9                     	;# 
  3686  1FEA                     	;# 
  3687  1FEB                     	;# 
  3688  1FED                     	;# 
  3689  1FEE                     	;# 
  3690  1FEF                     	;_buffer
  3691                           
  3692                           	psect	idataBANK2
  3693  1FC2                     __pidataBANK2:	
  3694                           
  3695                           ;initializer for main@F12667
  3696  1FC2  344E               	retlw	78
  3697  1FC3  344F               	retlw	79
  3698  1FC4  3449               	retlw	73
  3699  1FC5  3453               	retlw	83
  3700  1FC6  3445               	retlw	69
  3701  1FC7  3420               	retlw	32
  3702  1FC8  344D               	retlw	77
  3703  1FC9  3445               	retlw	69
  3704  1FCA  3454               	retlw	84
  3705  1FCB  3445               	retlw	69
  3706  1FCC  3452               	retlw	82
  3707  1FCD  340A               	retlw	10
  3708  1FCE  3400               	retlw	0
  3709                           
  3710                           	psect	stringtext1
  3711  1000                     __pstringtext1:	
  3712  1000                     _Font10x12:	
  3713  1000  34C0               	retlw	192
  3714  1001  3401               	retlw	1
  3715  1002  34C0               	retlw	192
  3716  1003  3401               	retlw	1
  3717  1004  34C0               	retlw	192
  3718  1005  3401               	retlw	1
  3719  1006  34C0               	retlw	192
  3720  1007  3401               	retlw	1
  3721  1008  34C0               	retlw	192
  3722  1009  3401               	retlw	1
  3723  100A  3400               	retlw	0
  3724  100B  3400               	retlw	0
  3725  100C  3400               	retlw	0
  3726  100D  3400               	retlw	0
  3727  100E  3400               	retlw	0
  3728  100F  3400               	retlw	0
  3729  1010  3400               	retlw	0
  3730  1011  3400               	retlw	0
  3731  1012  3400               	retlw	0
  3732  1013  3400               	retlw	0
  3733  1014  3400               	retlw	0
  3734  1015  3400               	retlw	0
  3735  1016  3400               	retlw	0
  3736  1017  340E               	retlw	14
  3737  1018  3400               	retlw	0
  3738  1019  340E               	retlw	14
  3739  101A  3400               	retlw	0
  3740  101B  340E               	retlw	14
  3741  101C  3400               	retlw	0
  3742  101D  3400               	retlw	0
  3743  101E  3400               	retlw	0
  3744  101F  3400               	retlw	0
  3745  1020  3400               	retlw	0
  3746  1021  3400               	retlw	0
  3747  1022  3400               	retlw	0
  3748  1023  3400               	retlw	0
  3749  1024  3400               	retlw	0
  3750  1025  3400               	retlw	0
  3751  1026  3400               	retlw	0
  3752  1027  3400               	retlw	0
  3753  1028  3400               	retlw	0
  3754  1029  3400               	retlw	0
  3755  102A  3400               	retlw	0
  3756  102B  3400               	retlw	0
  3757  102C  3400               	retlw	0
  3758  102D  3400               	retlw	0
  3759  102E  3400               	retlw	0
  3760  102F  3400               	retlw	0
  3761  1030  3400               	retlw	0
  3762  1031  3400               	retlw	0
  3763  1032  3400               	retlw	0
  3764  1033  3400               	retlw	0
  3765  1034  3400               	retlw	0
  3766  1035  3400               	retlw	0
  3767  1036  3400               	retlw	0
  3768  1037  3400               	retlw	0
  3769  1038  3400               	retlw	0
  3770  1039  3400               	retlw	0
  3771  103A  3400               	retlw	0
  3772  103B  3400               	retlw	0
  3773  103C  3400               	retlw	0
  3774  103D  3400               	retlw	0
  3775  103E  34FC               	retlw	252
  3776  103F  3403               	retlw	3
  3777  1040  34FE               	retlw	254
  3778  1041  3407               	retlw	7
  3779  1042  34FF               	retlw	255
  3780  1043  340F               	retlw	15
  3781  1044  3403               	retlw	3
  3782  1045  340C               	retlw	12
  3783  1046  3403               	retlw	3
  3784  1047  340C               	retlw	12
  3785  1048  34FF               	retlw	255
  3786  1049  340F               	retlw	15
  3787  104A  34FE               	retlw	254
  3788  104B  3407               	retlw	7
  3789  104C  34FC               	retlw	252
  3790  104D  3403               	retlw	3
  3791  104E  3400               	retlw	0
  3792  104F  3400               	retlw	0
  3793  1050  3400               	retlw	0
  3794  1051  3400               	retlw	0
  3795  1052  3400               	retlw	0
  3796  1053  3400               	retlw	0
  3797  1054  3430               	retlw	48
  3798  1055  3400               	retlw	0
  3799  1056  3438               	retlw	56
  3800  1057  3400               	retlw	0
  3801  1058  341C               	retlw	28
  3802  1059  3400               	retlw	0
  3803  105A  34FF               	retlw	255
  3804  105B  340F               	retlw	15
  3805  105C  34FF               	retlw	255
  3806  105D  340F               	retlw	15
  3807  105E  34FF               	retlw	255
  3808  105F  340F               	retlw	15
  3809  1060  3400               	retlw	0
  3810  1061  3400               	retlw	0
  3811  1062  3400               	retlw	0
  3812  1063  3400               	retlw	0
  3813  1064  3400               	retlw	0
  3814  1065  3400               	retlw	0
  3815  1066  340C               	retlw	12
  3816  1067  340C               	retlw	12
  3817  1068  340E               	retlw	14
  3818  1069  340E               	retlw	14
  3819  106A  340F               	retlw	15
  3820  106B  340F               	retlw	15
  3821  106C  3483               	retlw	131
  3822  106D  340F               	retlw	15
  3823  106E  34C3               	retlw	195
  3824  106F  340D               	retlw	13
  3825  1070  34FF               	retlw	255
  3826  1071  340C               	retlw	12
  3827  1072  347E               	retlw	126
  3828  1073  340C               	retlw	12
  3829  1074  343C               	retlw	60
  3830  1075  340C               	retlw	12
  3831  1076  3400               	retlw	0
  3832  1077  3400               	retlw	0
  3833  1078  3400               	retlw	0
  3834  1079  3400               	retlw	0
  3835  107A  3404               	retlw	4
  3836  107B  3403               	retlw	3
  3837  107C  340E               	retlw	14
  3838  107D  3407               	retlw	7
  3839  107E  340F               	retlw	15
  3840  107F  340F               	retlw	15
  3841  1080  3463               	retlw	99
  3842  1081  340C               	retlw	12
  3843  1082  3463               	retlw	99
  3844  1083  340C               	retlw	12
  3845  1084  34FF               	retlw	255
  3846  1085  340F               	retlw	15
  3847  1086  34FE               	retlw	254
  3848  1087  3407               	retlw	7
  3849  1088  349C               	retlw	156
  3850  1089  3403               	retlw	3
  3851  108A  3400               	retlw	0
  3852  108B  3400               	retlw	0
  3853  108C  3400               	retlw	0
  3854  108D  3400               	retlw	0
  3855  108E  34C0               	retlw	192
  3856  108F  3401               	retlw	1
  3857  1090  34E0               	retlw	224
  3858  1091  3401               	retlw	1
  3859  1092  34F8               	retlw	248
  3860  1093  3401               	retlw	1
  3861  1094  349C               	retlw	156
  3862  1095  3401               	retlw	1
  3863  1096  348E               	retlw	142
  3864  1097  3401               	retlw	1
  3865  1098  34FF               	retlw	255
  3866  1099  340F               	retlw	15
  3867  109A  34FF               	retlw	255
  3868  109B  340F               	retlw	15
  3869  109C  34FF               	retlw	255
  3870  109D  340F               	retlw	15
  3871  109E  3480               	retlw	128
  3872  109F  3401               	retlw	1
  3873  10A0  3400               	retlw	0
  3874  10A1  3400               	retlw	0
  3875  10A2  3478               	retlw	120
  3876  10A3  3403               	retlw	3
  3877  10A4  347F               	retlw	127
  3878  10A5  3407               	retlw	7
  3879  10A6  347F               	retlw	127
  3880  10A7  340F               	retlw	15
  3881  10A8  3433               	retlw	51
  3882  10A9  340C               	retlw	12
  3883  10AA  3433               	retlw	51
  3884  10AB  340C               	retlw	12
  3885  10AC  34F3               	retlw	243
  3886  10AD  340F               	retlw	15
  3887  10AE  34E3               	retlw	227
  3888  10AF  3407               	retlw	7
  3889  10B0  34C3               	retlw	195
  3890  10B1  3403               	retlw	3
  3891  10B2  3400               	retlw	0
  3892  10B3  3400               	retlw	0
  3893  10B4  3400               	retlw	0
  3894  10B5  3400               	retlw	0
  3895  10B6  34F8               	retlw	248
  3896  10B7  3401               	retlw	1
  3897  10B8  34FE               	retlw	254
  3898  10B9  3407               	retlw	7
  3899  10BA  34FF               	retlw	255
  3900  10BB  340F               	retlw	15
  3901  10BC  3423               	retlw	35
  3902  10BD  340C               	retlw	12
  3903  10BE  3433               	retlw	51
  3904  10BF  340C               	retlw	12
  3905  10C0  34F7               	retlw	247
  3906  10C1  340F               	retlw	15
  3907  10C2  34E7               	retlw	231
  3908  10C3  3407               	retlw	7
  3909  10C4  34C6               	retlw	198
  3910  10C5  3403               	retlw	3
  3911  10C6  3400               	retlw	0
  3912  10C7  3400               	retlw	0
  3913  10C8  3400               	retlw	0
  3914  10C9  3400               	retlw	0
  3915  10CA  3403               	retlw	3
  3916  10CB  3400               	retlw	0
  3917  10CC  3403               	retlw	3
  3918  10CD  3400               	retlw	0
  3919  10CE  3403               	retlw	3
  3920  10CF  340E               	retlw	14
  3921  10D0  34C3               	retlw	195
  3922  10D1  340F               	retlw	15
  3923  10D2  34F3               	retlw	243
  3924  10D3  340F               	retlw	15
  3925  10D4  34FB               	retlw	251
  3926  10D5  3400               	retlw	0
  3927  10D6  340F               	retlw	15
  3928  10D7  3400               	retlw	0
  3929  10D8  3403               	retlw	3
  3930  10D9  3400               	retlw	0
  3931  10DA  3400               	retlw	0
  3932  10DB  3400               	retlw	0
  3933  10DC  3400               	retlw	0
  3934  10DD  3400               	retlw	0
  3935  10DE  349C               	retlw	156
  3936  10DF  3403               	retlw	3
  3937  10E0  34FE               	retlw	254
  3938  10E1  3407               	retlw	7
  3939  10E2  34FF               	retlw	255
  3940  10E3  340F               	retlw	15
  3941  10E4  3463               	retlw	99
  3942  10E5  340C               	retlw	12
  3943  10E6  3463               	retlw	99
  3944  10E7  340C               	retlw	12
  3945  10E8  34FF               	retlw	255
  3946  10E9  340F               	retlw	15
  3947  10EA  34FE               	retlw	254
  3948  10EB  3407               	retlw	7
  3949  10EC  349C               	retlw	156
  3950  10ED  3403               	retlw	3
  3951  10EE  3400               	retlw	0
  3952  10EF  3400               	retlw	0
  3953  10F0  3400               	retlw	0
  3954  10F1  3400               	retlw	0
  3955  10F2  343C               	retlw	60
  3956  10F3  3406               	retlw	6
  3957  10F4  347E               	retlw	126
  3958  10F5  340E               	retlw	14
  3959  10F6  34FF               	retlw	255
  3960  10F7  340E               	retlw	14
  3961  10F8  34C3               	retlw	195
  3962  10F9  340C               	retlw	12
  3963  10FA  3443               	retlw	67
  3964  10FB  340C               	retlw	12
  3965  10FC  34FF               	retlw	255
  3966  10FD  340F               	retlw	15
  3967  10FE  34FE               	retlw	254
  3968  10FF  3407               	retlw	7
  3969  1100  34F8               	retlw	248
  3970  1101  3401               	retlw	1
  3971  1102  3400               	retlw	0
  3972  1103  3400               	retlw	0
  3973  1104                     __end_of_Font10x12:	
  3974                           
  3975                           	psect	stringtext2
  3976  1104                     __pstringtext2:	
  3977  1104                     _TABLA2:	
  3978  1104  347F               	retlw	127
  3979  1105  3409               	retlw	9
  3980  1106  3409               	retlw	9
  3981  1107  3409               	retlw	9
  3982  1108  3406               	retlw	6
  3983  1109  343E               	retlw	62
  3984  110A  3441               	retlw	65
  3985  110B  3451               	retlw	81
  3986  110C  3421               	retlw	33
  3987  110D  345E               	retlw	94
  3988  110E  347F               	retlw	127
  3989  110F  3409               	retlw	9
  3990  1110  3419               	retlw	25
  3991  1111  3429               	retlw	41
  3992  1112  3446               	retlw	70
  3993  1113  3446               	retlw	70
  3994  1114  3449               	retlw	73
  3995  1115  3449               	retlw	73
  3996  1116  3449               	retlw	73
  3997  1117  3431               	retlw	49
  3998  1118  3401               	retlw	1
  3999  1119  3401               	retlw	1
  4000  111A  347F               	retlw	127
  4001  111B  3401               	retlw	1
  4002  111C  3401               	retlw	1
  4003  111D  343F               	retlw	63
  4004  111E  3440               	retlw	64
  4005  111F  3440               	retlw	64
  4006  1120  3440               	retlw	64
  4007  1121  343F               	retlw	63
  4008  1122  341F               	retlw	31
  4009  1123  3420               	retlw	32
  4010  1124  3440               	retlw	64
  4011  1125  3420               	retlw	32
  4012  1126  341F               	retlw	31
  4013  1127  343F               	retlw	63
  4014  1128  3440               	retlw	64
  4015  1129  3438               	retlw	56
  4016  112A  3440               	retlw	64
  4017  112B  343F               	retlw	63
  4018  112C  3463               	retlw	99
  4019  112D  3414               	retlw	20
  4020  112E  3408               	retlw	8
  4021  112F  3414               	retlw	20
  4022  1130  3463               	retlw	99
  4023  1131  3407               	retlw	7
  4024  1132  3408               	retlw	8
  4025  1133  3470               	retlw	112
  4026  1134  3408               	retlw	8
  4027  1135  3407               	retlw	7
  4028  1136  3461               	retlw	97
  4029  1137  3451               	retlw	81
  4030  1138  3449               	retlw	73
  4031  1139  3445               	retlw	69
  4032  113A  3443               	retlw	67
  4033  113B  3400               	retlw	0
  4034  113C  347F               	retlw	127
  4035  113D  3441               	retlw	65
  4036  113E  3441               	retlw	65
  4037  113F  3400               	retlw	0
  4038  1140  3402               	retlw	2
  4039  1141  3404               	retlw	4
  4040  1142  3408               	retlw	8
  4041  1143  3410               	retlw	16
  4042  1144  3420               	retlw	32
  4043  1145  3400               	retlw	0
  4044  1146  3441               	retlw	65
  4045  1147  3441               	retlw	65
  4046  1148  347F               	retlw	127
  4047  1149  3400               	retlw	0
  4048  114A  3404               	retlw	4
  4049  114B  3402               	retlw	2
  4050  114C  3401               	retlw	1
  4051  114D  3402               	retlw	2
  4052  114E  3404               	retlw	4
  4053  114F  3440               	retlw	64
  4054  1150  3440               	retlw	64
  4055  1151  3440               	retlw	64
  4056  1152  3440               	retlw	64
  4057  1153  3440               	retlw	64
  4058  1154  3400               	retlw	0
  4059  1155  3401               	retlw	1
  4060  1156  3402               	retlw	2
  4061  1157  3404               	retlw	4
  4062  1158  3400               	retlw	0
  4063  1159  3420               	retlw	32
  4064  115A  3454               	retlw	84
  4065  115B  3454               	retlw	84
  4066  115C  3454               	retlw	84
  4067  115D  3478               	retlw	120
  4068  115E  347F               	retlw	127
  4069  115F  3448               	retlw	72
  4070  1160  3444               	retlw	68
  4071  1161  3444               	retlw	68
  4072  1162  3438               	retlw	56
  4073  1163  3438               	retlw	56
  4074  1164  3444               	retlw	68
  4075  1165  3444               	retlw	68
  4076  1166  3444               	retlw	68
  4077  1167  3420               	retlw	32
  4078  1168  3438               	retlw	56
  4079  1169  3444               	retlw	68
  4080  116A  3444               	retlw	68
  4081  116B  3448               	retlw	72
  4082  116C  347F               	retlw	127
  4083  116D  3438               	retlw	56
  4084  116E  3454               	retlw	84
  4085  116F  3454               	retlw	84
  4086  1170  3454               	retlw	84
  4087  1171  3418               	retlw	24
  4088  1172  3408               	retlw	8
  4089  1173  347E               	retlw	126
  4090  1174  3409               	retlw	9
  4091  1175  3401               	retlw	1
  4092  1176  3402               	retlw	2
  4093  1177  340C               	retlw	12
  4094  1178  3452               	retlw	82
  4095  1179  3452               	retlw	82
  4096  117A  3452               	retlw	82
  4097  117B  343E               	retlw	62
  4098  117C  347F               	retlw	127
  4099  117D  3408               	retlw	8
  4100  117E  3404               	retlw	4
  4101  117F  3404               	retlw	4
  4102  1180  3478               	retlw	120
  4103  1181  3400               	retlw	0
  4104  1182  3444               	retlw	68
  4105  1183  347D               	retlw	125
  4106  1184  3440               	retlw	64
  4107  1185  3400               	retlw	0
  4108  1186  3420               	retlw	32
  4109  1187  3440               	retlw	64
  4110  1188  3444               	retlw	68
  4111  1189  343D               	retlw	61
  4112  118A  3400               	retlw	0
  4113  118B  347F               	retlw	127
  4114  118C  3410               	retlw	16
  4115  118D  3428               	retlw	40
  4116  118E  3444               	retlw	68
  4117  118F  3400               	retlw	0
  4118  1190  3400               	retlw	0
  4119  1191  3441               	retlw	65
  4120  1192  347F               	retlw	127
  4121  1193  3440               	retlw	64
  4122  1194  3400               	retlw	0
  4123  1195  347C               	retlw	124
  4124  1196  3404               	retlw	4
  4125  1197  3418               	retlw	24
  4126  1198  3404               	retlw	4
  4127  1199  3478               	retlw	120
  4128  119A  347C               	retlw	124
  4129  119B  3408               	retlw	8
  4130  119C  3404               	retlw	4
  4131  119D  3404               	retlw	4
  4132  119E  3478               	retlw	120
  4133  119F  3438               	retlw	56
  4134  11A0  3444               	retlw	68
  4135  11A1  3444               	retlw	68
  4136  11A2  3444               	retlw	68
  4137  11A3  3438               	retlw	56
  4138  11A4  347C               	retlw	124
  4139  11A5  3414               	retlw	20
  4140  11A6  3414               	retlw	20
  4141  11A7  3414               	retlw	20
  4142  11A8  3408               	retlw	8
  4143  11A9  3408               	retlw	8
  4144  11AA  3414               	retlw	20
  4145  11AB  3414               	retlw	20
  4146  11AC  3418               	retlw	24
  4147  11AD  347C               	retlw	124
  4148  11AE  347C               	retlw	124
  4149  11AF  3408               	retlw	8
  4150  11B0  3404               	retlw	4
  4151  11B1  3404               	retlw	4
  4152  11B2  3408               	retlw	8
  4153  11B3  3448               	retlw	72
  4154  11B4  3454               	retlw	84
  4155  11B5  3454               	retlw	84
  4156  11B6  3454               	retlw	84
  4157  11B7  3420               	retlw	32
  4158  11B8  3404               	retlw	4
  4159  11B9  343F               	retlw	63
  4160  11BA  3444               	retlw	68
  4161  11BB  3440               	retlw	64
  4162  11BC  3420               	retlw	32
  4163  11BD  343C               	retlw	60
  4164  11BE  3440               	retlw	64
  4165  11BF  3440               	retlw	64
  4166  11C0  3420               	retlw	32
  4167  11C1  347C               	retlw	124
  4168  11C2  341C               	retlw	28
  4169  11C3  3420               	retlw	32
  4170  11C4  3440               	retlw	64
  4171  11C5  3420               	retlw	32
  4172  11C6  341C               	retlw	28
  4173  11C7  343C               	retlw	60
  4174  11C8  3440               	retlw	64
  4175  11C9  3430               	retlw	48
  4176  11CA  3440               	retlw	64
  4177  11CB  343C               	retlw	60
  4178  11CC  3444               	retlw	68
  4179  11CD  3428               	retlw	40
  4180  11CE  3410               	retlw	16
  4181  11CF  3428               	retlw	40
  4182  11D0  3444               	retlw	68
  4183  11D1  340C               	retlw	12
  4184  11D2  3450               	retlw	80
  4185  11D3  3450               	retlw	80
  4186  11D4  3450               	retlw	80
  4187  11D5  343C               	retlw	60
  4188  11D6  3444               	retlw	68
  4189  11D7  3464               	retlw	100
  4190  11D8  3454               	retlw	84
  4191  11D9  344C               	retlw	76
  4192  11DA  3444               	retlw	68
  4193  11DB  3400               	retlw	0
  4194  11DC  3408               	retlw	8
  4195  11DD  3436               	retlw	54
  4196  11DE  3441               	retlw	65
  4197  11DF  3400               	retlw	0
  4198  11E0  3400               	retlw	0
  4199  11E1  3400               	retlw	0
  4200  11E2  347F               	retlw	127
  4201  11E3  3400               	retlw	0
  4202  11E4  3400               	retlw	0
  4203  11E5  3400               	retlw	0
  4204  11E6  3441               	retlw	65
  4205  11E7  3436               	retlw	54
  4206  11E8  3408               	retlw	8
  4207  11E9  3400               	retlw	0
  4208  11EA  3410               	retlw	16
  4209  11EB  3408               	retlw	8
  4210  11EC  3408               	retlw	8
  4211  11ED  3410               	retlw	16
  4212  11EE  3408               	retlw	8
  4213  11EF  3478               	retlw	120
  4214  11F0  3446               	retlw	70
  4215  11F1  3441               	retlw	65
  4216  11F2  3446               	retlw	70
  4217  11F3  3478               	retlw	120
  4218  11F4                     __end_of_TABLA2:	
  4219                           
  4220                           	psect	stringtext3
  4221  11F4                     __pstringtext3:	
  4222  11F4                     _TABLA1:	
  4223  11F4  3400               	retlw	0
  4224  11F5  3400               	retlw	0
  4225  11F6  3400               	retlw	0
  4226  11F7  3400               	retlw	0
  4227  11F8  3400               	retlw	0
  4228  11F9  3400               	retlw	0
  4229  11FA  3400               	retlw	0
  4230  11FB  345F               	retlw	95
  4231  11FC  3400               	retlw	0
  4232  11FD  3400               	retlw	0
  4233  11FE  3400               	retlw	0
  4234  11FF  3407               	retlw	7
  4235  1200  3400               	retlw	0
  4236  1201  3407               	retlw	7
  4237  1202  3400               	retlw	0
  4238  1203  3414               	retlw	20
  4239  1204  347F               	retlw	127
  4240  1205  3414               	retlw	20
  4241  1206  347F               	retlw	127
  4242  1207  3414               	retlw	20
  4243  1208  3424               	retlw	36
  4244  1209  342A               	retlw	42
  4245  120A  347F               	retlw	127
  4246  120B  342A               	retlw	42
  4247  120C  3412               	retlw	18
  4248  120D  3423               	retlw	35
  4249  120E  3413               	retlw	19
  4250  120F  3408               	retlw	8
  4251  1210  3464               	retlw	100
  4252  1211  3462               	retlw	98
  4253  1212  3436               	retlw	54
  4254  1213  3449               	retlw	73
  4255  1214  3455               	retlw	85
  4256  1215  3422               	retlw	34
  4257  1216  3450               	retlw	80
  4258  1217  3400               	retlw	0
  4259  1218  3405               	retlw	5
  4260  1219  3403               	retlw	3
  4261  121A  3400               	retlw	0
  4262  121B  3400               	retlw	0
  4263  121C  3400               	retlw	0
  4264  121D  341C               	retlw	28
  4265  121E  3422               	retlw	34
  4266  121F  3441               	retlw	65
  4267  1220  3400               	retlw	0
  4268  1221  3400               	retlw	0
  4269  1222  3441               	retlw	65
  4270  1223  3422               	retlw	34
  4271  1224  341C               	retlw	28
  4272  1225  3400               	retlw	0
  4273  1226  3414               	retlw	20
  4274  1227  3408               	retlw	8
  4275  1228  343E               	retlw	62
  4276  1229  3408               	retlw	8
  4277  122A  3414               	retlw	20
  4278  122B  3408               	retlw	8
  4279  122C  3408               	retlw	8
  4280  122D  343E               	retlw	62
  4281  122E  3408               	retlw	8
  4282  122F  3408               	retlw	8
  4283  1230  3400               	retlw	0
  4284  1231  3450               	retlw	80
  4285  1232  3430               	retlw	48
  4286  1233  3400               	retlw	0
  4287  1234  3400               	retlw	0
  4288  1235  3408               	retlw	8
  4289  1236  3408               	retlw	8
  4290  1237  3408               	retlw	8
  4291  1238  3408               	retlw	8
  4292  1239  3408               	retlw	8
  4293  123A  3400               	retlw	0
  4294  123B  3460               	retlw	96
  4295  123C  3460               	retlw	96
  4296  123D  3400               	retlw	0
  4297  123E  3400               	retlw	0
  4298  123F  3420               	retlw	32
  4299  1240  3410               	retlw	16
  4300  1241  3408               	retlw	8
  4301  1242  3404               	retlw	4
  4302  1243  3402               	retlw	2
  4303  1244  343E               	retlw	62
  4304  1245  3451               	retlw	81
  4305  1246  3449               	retlw	73
  4306  1247  3445               	retlw	69
  4307  1248  343E               	retlw	62
  4308  1249  3400               	retlw	0
  4309  124A  3442               	retlw	66
  4310  124B  347F               	retlw	127
  4311  124C  3440               	retlw	64
  4312  124D  3400               	retlw	0
  4313  124E  3442               	retlw	66
  4314  124F  3461               	retlw	97
  4315  1250  3451               	retlw	81
  4316  1251  3449               	retlw	73
  4317  1252  3446               	retlw	70
  4318  1253  3421               	retlw	33
  4319  1254  3441               	retlw	65
  4320  1255  3445               	retlw	69
  4321  1256  344B               	retlw	75
  4322  1257  3431               	retlw	49
  4323  1258  3418               	retlw	24
  4324  1259  3414               	retlw	20
  4325  125A  3412               	retlw	18
  4326  125B  347F               	retlw	127
  4327  125C  3410               	retlw	16
  4328  125D  3427               	retlw	39
  4329  125E  3445               	retlw	69
  4330  125F  3445               	retlw	69
  4331  1260  3445               	retlw	69
  4332  1261  3439               	retlw	57
  4333  1262  343C               	retlw	60
  4334  1263  344A               	retlw	74
  4335  1264  3449               	retlw	73
  4336  1265  3449               	retlw	73
  4337  1266  3430               	retlw	48
  4338  1267  3401               	retlw	1
  4339  1268  3471               	retlw	113
  4340  1269  3409               	retlw	9
  4341  126A  3405               	retlw	5
  4342  126B  3403               	retlw	3
  4343  126C  3436               	retlw	54
  4344  126D  3449               	retlw	73
  4345  126E  3449               	retlw	73
  4346  126F  3449               	retlw	73
  4347  1270  3436               	retlw	54
  4348  1271  3406               	retlw	6
  4349  1272  3449               	retlw	73
  4350  1273  3449               	retlw	73
  4351  1274  3429               	retlw	41
  4352  1275  341E               	retlw	30
  4353  1276  3400               	retlw	0
  4354  1277  3436               	retlw	54
  4355  1278  3436               	retlw	54
  4356  1279  3400               	retlw	0
  4357  127A  3400               	retlw	0
  4358  127B  3400               	retlw	0
  4359  127C  3456               	retlw	86
  4360  127D  3436               	retlw	54
  4361  127E  3400               	retlw	0
  4362  127F  3400               	retlw	0
  4363  1280  3408               	retlw	8
  4364  1281  3414               	retlw	20
  4365  1282  3422               	retlw	34
  4366  1283  3441               	retlw	65
  4367  1284  3400               	retlw	0
  4368  1285  3414               	retlw	20
  4369  1286  3414               	retlw	20
  4370  1287  3414               	retlw	20
  4371  1288  3414               	retlw	20
  4372  1289  3414               	retlw	20
  4373  128A  3400               	retlw	0
  4374  128B  3441               	retlw	65
  4375  128C  3422               	retlw	34
  4376  128D  3414               	retlw	20
  4377  128E  3408               	retlw	8
  4378  128F  3402               	retlw	2
  4379  1290  3401               	retlw	1
  4380  1291  3451               	retlw	81
  4381  1292  3409               	retlw	9
  4382  1293  3406               	retlw	6
  4383  1294  3432               	retlw	50
  4384  1295  3449               	retlw	73
  4385  1296  3479               	retlw	121
  4386  1297  3441               	retlw	65
  4387  1298  343E               	retlw	62
  4388  1299  347E               	retlw	126
  4389  129A  3411               	retlw	17
  4390  129B  3411               	retlw	17
  4391  129C  3411               	retlw	17
  4392  129D  347E               	retlw	126
  4393  129E  347F               	retlw	127
  4394  129F  3449               	retlw	73
  4395  12A0  3449               	retlw	73
  4396  12A1  3449               	retlw	73
  4397  12A2  3436               	retlw	54
  4398  12A3  343E               	retlw	62
  4399  12A4  3441               	retlw	65
  4400  12A5  3441               	retlw	65
  4401  12A6  3441               	retlw	65
  4402  12A7  3422               	retlw	34
  4403  12A8  347F               	retlw	127
  4404  12A9  3441               	retlw	65
  4405  12AA  3441               	retlw	65
  4406  12AB  3422               	retlw	34
  4407  12AC  341C               	retlw	28
  4408  12AD  347F               	retlw	127
  4409  12AE  3449               	retlw	73
  4410  12AF  3449               	retlw	73
  4411  12B0  3449               	retlw	73
  4412  12B1  3441               	retlw	65
  4413  12B2  347F               	retlw	127
  4414  12B3  3409               	retlw	9
  4415  12B4  3409               	retlw	9
  4416  12B5  3409               	retlw	9
  4417  12B6  3401               	retlw	1
  4418  12B7  343E               	retlw	62
  4419  12B8  3441               	retlw	65
  4420  12B9  3449               	retlw	73
  4421  12BA  3449               	retlw	73
  4422  12BB  347A               	retlw	122
  4423  12BC  347F               	retlw	127
  4424  12BD  3408               	retlw	8
  4425  12BE  3408               	retlw	8
  4426  12BF  3408               	retlw	8
  4427  12C0  347F               	retlw	127
  4428  12C1  3400               	retlw	0
  4429  12C2  3441               	retlw	65
  4430  12C3  347F               	retlw	127
  4431  12C4  3441               	retlw	65
  4432  12C5  3400               	retlw	0
  4433  12C6  3420               	retlw	32
  4434  12C7  3440               	retlw	64
  4435  12C8  3441               	retlw	65
  4436  12C9  343F               	retlw	63
  4437  12CA  3401               	retlw	1
  4438  12CB  347F               	retlw	127
  4439  12CC  3408               	retlw	8
  4440  12CD  3414               	retlw	20
  4441  12CE  3422               	retlw	34
  4442  12CF  3441               	retlw	65
  4443  12D0  347F               	retlw	127
  4444  12D1  3440               	retlw	64
  4445  12D2  3440               	retlw	64
  4446  12D3  3440               	retlw	64
  4447  12D4  3440               	retlw	64
  4448  12D5  347F               	retlw	127
  4449  12D6  3402               	retlw	2
  4450  12D7  340C               	retlw	12
  4451  12D8  3402               	retlw	2
  4452  12D9  347F               	retlw	127
  4453  12DA  347F               	retlw	127
  4454  12DB  3404               	retlw	4
  4455  12DC  3408               	retlw	8
  4456  12DD  3410               	retlw	16
  4457  12DE  347F               	retlw	127
  4458  12DF  343E               	retlw	62
  4459  12E0  3441               	retlw	65
  4460  12E1  3441               	retlw	65
  4461  12E2  3441               	retlw	65
  4462  12E3  343E               	retlw	62
  4463  12E4                     __end_of_TABLA1:	
  4464                           
  4465                           	psect	stringtext4
  4466  1800                     __pstringtext4:	
  4467  1800                     _dpowers:	
  4468  1800  3401               	retlw	1
  4469  1801  3400               	retlw	0
  4470  1802  3400               	retlw	0
  4471  1803  3400               	retlw	0
  4472  1804  340A               	retlw	10
  4473  1805  3400               	retlw	0
  4474  1806  3400               	retlw	0
  4475  1807  3400               	retlw	0
  4476  1808  3464               	retlw	100
  4477  1809  3400               	retlw	0
  4478  180A  3400               	retlw	0
  4479  180B  3400               	retlw	0
  4480  180C  34E8               	retlw	232
  4481  180D  3403               	retlw	3
  4482  180E  3400               	retlw	0
  4483  180F  3400               	retlw	0
  4484  1810  3410               	retlw	16
  4485  1811  3427               	retlw	39
  4486  1812  3400               	retlw	0
  4487  1813  3400               	retlw	0
  4488  1814  34A0               	retlw	160
  4489  1815  3486               	retlw	134
  4490  1816  3401               	retlw	1
  4491  1817  3400               	retlw	0
  4492  1818  3440               	retlw	64
  4493  1819  3442               	retlw	66
  4494  181A  340F               	retlw	15
  4495  181B  3400               	retlw	0
  4496  181C  3480               	retlw	128
  4497  181D  3496               	retlw	150
  4498  181E  3498               	retlw	152
  4499  181F  3400               	retlw	0
  4500  1820  3400               	retlw	0
  4501  1821  34E1               	retlw	225
  4502  1822  34F5               	retlw	245
  4503  1823  3405               	retlw	5
  4504  1824  3400               	retlw	0
  4505  1825  34CA               	retlw	202
  4506  1826  349A               	retlw	154
  4507  1827  343B               	retlw	59
  4508  1828                     __end_of_dpowers:	
  4509                           
  4510                           	psect	stringtext5
  4511  1828                     __pstringtext5:	
  4512  1828                     __powers_:	
  4513  1828  3400               	retlw	0
  4514  1829  3480               	retlw	128
  4515  182A  343F               	retlw	63
  4516  182B  3400               	retlw	0
  4517  182C  3420               	retlw	32
  4518  182D  3441               	retlw	65
  4519  182E  3400               	retlw	0
  4520  182F  34C8               	retlw	200
  4521  1830  3442               	retlw	66
  4522  1831  3400               	retlw	0
  4523  1832  347A               	retlw	122
  4524  1833  3444               	retlw	68
  4525  1834  3440               	retlw	64
  4526  1835  341C               	retlw	28
  4527  1836  3446               	retlw	70
  4528  1837  3450               	retlw	80
  4529  1838  34C3               	retlw	195
  4530  1839  3447               	retlw	71
  4531  183A  3424               	retlw	36
  4532  183B  3474               	retlw	116
  4533  183C  3449               	retlw	73
  4534  183D  3497               	retlw	151
  4535  183E  3418               	retlw	24
  4536  183F  344B               	retlw	75
  4537  1840  34BC               	retlw	188
  4538  1841  34BE               	retlw	190
  4539  1842  344C               	retlw	76
  4540  1843  346B               	retlw	107
  4541  1844  346E               	retlw	110
  4542  1845  344E               	retlw	78
  4543  1846  3403               	retlw	3
  4544  1847  3415               	retlw	21
  4545  1848  3450               	retlw	80
  4546  1849  3479               	retlw	121
  4547  184A  34AD               	retlw	173
  4548  184B  3460               	retlw	96
  4549  184C  34F3               	retlw	243
  4550  184D  3449               	retlw	73
  4551  184E  3471               	retlw	113
  4552  184F                     __end_of__powers_:	
  4553                           
  4554                           	psect	stringtext6
  4555  184F                     __pstringtext6:	
  4556  184F                     __npowers_:	
  4557  184F  3400               	retlw	0
  4558  1850  3480               	retlw	128
  4559  1851  343F               	retlw	63
  4560  1852  34CD               	retlw	205
  4561  1853  34CC               	retlw	204
  4562  1854  343D               	retlw	61
  4563  1855  34D7               	retlw	215
  4564  1856  3423               	retlw	35
  4565  1857  343C               	retlw	60
  4566  1858  3412               	retlw	18
  4567  1859  3483               	retlw	131
  4568  185A  343A               	retlw	58
  4569  185B  34B7               	retlw	183
  4570  185C  34D1               	retlw	209
  4571  185D  3438               	retlw	56
  4572  185E  34C6               	retlw	198
  4573  185F  3427               	retlw	39
  4574  1860  3437               	retlw	55
  4575  1861  3438               	retlw	56
  4576  1862  3486               	retlw	134
  4577  1863  3435               	retlw	53
  4578  1864  34C0               	retlw	192
  4579  1865  34D6               	retlw	214
  4580  1866  3433               	retlw	51
  4581  1867  34CC               	retlw	204
  4582  1868  342B               	retlw	43
  4583  1869  3432               	retlw	50
  4584  186A  3470               	retlw	112
  4585  186B  3489               	retlw	137
  4586  186C  3430               	retlw	48
  4587  186D  34E7               	retlw	231
  4588  186E  34DB               	retlw	219
  4589  186F  342E               	retlw	46
  4590  1870  34E5               	retlw	229
  4591  1871  343C               	retlw	60
  4592  1872  341E               	retlw	30
  4593  1873  3442               	retlw	66
  4594  1874  34A2               	retlw	162
  4595  1875  340D               	retlw	13
  4596  1876                     __end_of__npowers_:	
  4597                           
  4598                           	psect	nvBANK1
  4599  00D2                     __pnvBANK1:	
  4600  00D2                     _timer0ReloadVal16bit:	
  4601  00D2                     	ds	2
  4602  001A                     _LATCbits	set	26
  4603  000B                     _INTCONbits	set	11
  4604  0019                     _LATBbits	set	25
  4605  0014                     _TRISC	set	20
  4606  0013                     _TRISB	set	19
  4607  0012                     _TRISA	set	18
  4608  001A                     _LATC	set	26
  4609  0019                     _LATB	set	25
  4610  0018                     _LATA	set	24
  4611  0090                     _ADERRL	set	144
  4612  0091                     _ADERRH	set	145
  4613  009B                     _ADPREVL	set	155
  4614  009C                     _ADPREVH	set	156
  4615  0094                     _ADFLTRL	set	148
  4616  0095                     _ADFLTRH	set	149
  4617  0096                     _ADACCL	set	150
  4618  0097                     _ADACCH	set	151
  4619  0099                     _ADCNT	set	153
  4620  009D                     _ADRESL	set	157
  4621  009E                     _ADRESH	set	158
  4622  009F                     _ADPCH	set	159
  4623  009A                     _ADRPT	set	154
  4624  0098                     _ADACCU	set	152
  4625  0093                     _ADSTPTH	set	147
  4626  0092                     _ADSTPTL	set	146
  4627  008F                     _ADUTHH	set	143
  4628  008E                     _ADUTHL	set	142
  4629  008D                     _ADLTHH	set	141
  4630  008C                     _ADLTHL	set	140
  4631  0112                     _ADCON1bits	set	274
  4632  0115                     _ADSTATbits	set	277
  4633  0113                     _ADCON2bits	set	275
  4634  0114                     _ADCON3bits	set	276
  4635  0111                     _ADCON0bits	set	273
  4636  0111                     _ADCON0	set	273
  4637  0118                     _ADCLK	set	280
  4638  0117                     _ADACT	set	279
  4639  0116                     _ADREF	set	278
  4640  0115                     _ADSTAT	set	277
  4641  0114                     _ADCON3	set	276
  4642  0113                     _ADCON2	set	275
  4643  0112                     _ADCON1	set	274
  4644  0110                     _ADPREH	set	272
  4645  010F                     _ADPREL	set	271
  4646  010E                     _ADCAP	set	270
  4647  010D                     _ADACQH	set	269
  4648  010C                     _ADACQL	set	268
  4649  059E                     _T0CON0bits	set	1438
  4650  059E                     _T0CON0	set	1438
  4651  059C                     _TMR0L	set	1436
  4652  059D                     _TMR0H	set	1437
  4653  059F                     _T0CON1	set	1439
  4654  0716                     _PIE0bits	set	1814
  4655  070C                     _PIR0bits	set	1804
  4656  079B                     _PMD5	set	1947
  4657  079A                     _PMD4	set	1946
  4658  0799                     _PMD3	set	1945
  4659  0798                     _PMD2	set	1944
  4660  0797                     _PMD1	set	1943
  4661  0796                     _PMD0	set	1942
  4662  0892                     _OSCTUNE	set	2194
  4663  0890                     _OSCSTAT	set	2192
  4664  0893                     _OSCFRQ	set	2195
  4665  0891                     _OSCEN	set	2193
  4666  088F                     _OSCCON3	set	2191
  4667  088D                     _OSCCON1	set	2189
  4668  090C                     _FVRCONbits	set	2316
  4669  090C                     _FVRCON	set	2316
  4670  1EC3                     _ADCACTPPSbits	set	7875
  4671  1F50                     _ODCONC	set	8016
  4672  1F45                     _ODCONB	set	8005
  4673  1F3A                     _ODCONA	set	7994
  4674  1F4F                     _WPUC	set	8015
  4675  1F39                     _WPUA	set	7993
  4676  1F44                     _WPUB	set	8004
  4677  1F65                     _WPUE	set	8037
  4678  1F38                     _ANSELA	set	7992
  4679  1F43                     _ANSELB	set	8003
  4680  1F4E                     _ANSELC	set	8014
  4681                           
  4682                           	psect	stringtext7
  4683  2000                     __pstringtext7:	
  4684  2000                     STR_1:	
  4685  2000  3425               	retlw	37	;'%'
  4686  2001  3423               	retlw	35	;'#'
  4687  2002  3437               	retlw	55	;'7'
  4688  2003  342E               	retlw	46	;'.'
  4689  2004  3433               	retlw	51	;'3'
  4690  2005  3466               	retlw	102	;'f'
  4691  2006  3420               	retlw	32	;' '
  4692  2007  3475               	retlw	117	;'u'
  4693  2008  3456               	retlw	86	;'V'
  4694  2009  3420               	retlw	32	;' '
  4695  200A  3472               	retlw	114	;'r'
  4696  200B  346D               	retlw	109	;'m'
  4697  200C  3473               	retlw	115	;'s'
  4698  200D  3400               	retlw	0
  4699                           
  4700                           	psect	stringtext8
  4701  0000                     __pstringtext8:	
  4702                           
  4703                           ; #config settings
  4704  0000                     
  4705                           	psect	cinit
  4706  0016                     start_initialization:	
  4707  0016                     __initialization:		;BIGRAM
  4708                           
  4709                           ; Initialize objects allocated to BANK2
  4710  0016  30C2               	movlw	low __pidataBANK2
  4711  0017  0084               	movwf	4
  4712  0018  309F               	movlw	(high __pidataBANK2)| (0+128)
  4713  0019  0085               	movwf	5
  4714  001A  3046               	movlw	low __pdataBANK2
  4715  001B  0086               	movwf	6
  4716  001C  3001               	movlw	high __pdataBANK2
  4717  001D  0087               	movwf	7
  4718  001E  3000               	movlw	0
  4719  001F  00FF               	movwf	btemp+1
  4720  0020  300D               	movlw	13
  4721  0021  319F  279C  3180   	fcall	init_ram
  4722                           
  4723                           ; Clear objects allocated to BIGRAM
  4724  0024  30F8               	movlw	low (0+9720)
  4725  0025  0084               	movwf	4
  4726  0026  3025               	movlw	high (0+9720)
  4727  0027  0085               	movwf	5
  4728  0028  30F8               	movlw	248
  4729  0029  00FE               	movwf	btemp
  4730  002A  3001               	movlw	1
  4731  002B  00FF               	movwf	btemp+1
  4732  002C  319F  2790         	fcall	clear_ram0
  4733                           
  4734                           ; Clear objects allocated to BANK0
  4735  002E  01E6               	clrf	__pbssBANK0& (0+127)
  4736                           
  4737                           ; Clear objects allocated to BANK1
  4738  002F  0141               	movlb	1	; select bank1
  4739  0030  01D4               	clrf	__pbssBANK1& (0+127)
  4740  0031  01D5               	clrf	(__pbssBANK1+1)& (0+127)
  4741                           
  4742                           ; Clear objects allocated to BANK2
  4743  0032  0142               	movlb	2	; select bank2
  4744  0033  01D3               	clrf	__pbssBANK2& (0+127)
  4745  0034  01D4               	clrf	(__pbssBANK2+1)& (0+127)
  4746  0035                     end_of_initialization:	
  4747                           ;End of C runtime variable initialization code
  4748                           
  4749  0035                     __end_of__initialization:	
  4750  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4751  0036  0140               	movlb	0
  4752  0037  3194  2CF5         	ljmp	_main	;jump to C main() function
  4753                           
  4754                           	psect	bssBANK0
  4755  0066                     __pbssBANK0:	
  4756  0066                     _LCD_contrast:	
  4757  0066                     	ds	1
  4758                           
  4759                           	psect	bssBANK1
  4760  00D4                     __pbssBANK1:	
  4761  00D4                     _state:	
  4762  00D4                     	ds	2
  4763                           
  4764                           	psect	bssBANK2
  4765  0153                     __pbssBANK2:	
  4766  0153                     _idy:	
  4767  0153                     	ds	1
  4768  0154                     _idx:	
  4769  0154                     	ds	1
  4770                           
  4771                           	psect	dataBANK2
  4772  0146                     __pdataBANK2:	
  4773  0146                     main@F12667:	
  4774  0146                     	ds	13
  4775                           
  4776                           	psect	inittext
  4777  1F9C                     init_ram:	
  4778  1F9C  00FE               	movwf	126
  4779  1F9D                     initloop:	
  4780  1F9D  0012               	moviw fsr0++
  4781  1F9E  001E               	movwi fsr1++
  4782  1F9F  3001               	movlw	1
  4783  1FA0  02FE               	subwf	126,f
  4784  1FA1  3000               	movlw	0
  4785  1FA2  3BFF               	subwfb	127,f
  4786  1FA3  087F               	movf	127,w
  4787  1FA4  047E               	iorwf	126,w
  4788  1FA5  1903               	btfsc	3,2
  4789  1FA6  3400               	retlw	0
  4790  1FA7  2F9D               	goto	initloop
  4791                           
  4792                           	psect	clrtext
  4793  1F90                     clear_ram0:	
  4794                           ;	Called with FSR0 containing the base address, and
  4795                           ;	btemp/btemp+1 has the size to clear
  4796                           
  4797  1F90  0064               	clrwdt	;clear the watchdog before getting into this loop
  4798  1F91                     clrloop0:	
  4799  1F91  0180               	clrf	0	;clear RAM location pointed to by FSR
  4800  1F92  3101               	addfsr 0,1
  4801  1F93  3001               	movlw	1
  4802  1F94  02FE               	subwf	126,f
  4803  1F95  3000               	movlw	0
  4804  1F96  3BFF               	subwfb	127,f
  4805  1F97  087F               	movf	127,w
  4806  1F98  047E               	iorwf	126,w
  4807  1F99  1903               	btfsc	3,2
  4808  1F9A  3400               	retlw	0	;all done for this memory range, return
  4809  1F9B  2F91               	goto	clrloop0	;have we reached the end yet?
  4810                           
  4811                           	psect	cstackBANK2
  4812  0120                     __pcstackBANK2:	
  4813  0120                     ??_PMD_Initialize:	
  4814  0120                     ??_PIN_MANAGER_Initialize:	
  4815                           ; 1 bytes @ 0x0
  4816                           
  4817  0120                     ??_OSCILLATOR_Initialize:	
  4818                           ; 1 bytes @ 0x0
  4819                           
  4820  0120                     ??_ADCC_Initialize:	
  4821                           ; 1 bytes @ 0x0
  4822                           
  4823  0120                     ??_FVR_Initialize:	
  4824                           ; 1 bytes @ 0x0
  4825                           
  4826  0120                     ??_TMR0_Initialize:	
  4827                           ; 1 bytes @ 0x0
  4828                           
  4829  0120                     ?_nokia_gotoxy:	
  4830                           ; 1 bytes @ 0x0
  4831                           
  4832  0120                     ?_nokia_delay:	
  4833                           ; 1 bytes @ 0x0
  4834                           
  4835  0120                     ??_nokia_write_dorc:	
  4836                           ; 1 bytes @ 0x0
  4837                           
  4838  0120                     ??_SYSTEM_Initialize:	
  4839                           ; 1 bytes @ 0x0
  4840                           
  4841  0120                     ?___bmul:	
  4842                           ; 1 bytes @ 0x0
  4843                           
  4844  0120                     ?___wmul:	
  4845                           ; 1 bytes @ 0x0
  4846                           
  4847  0120                     nokia_gotoxy@y:	
  4848                           ; 2 bytes @ 0x0
  4849                           
  4850  0120                     ___bmul@multiplicand:	
  4851                           ; 1 bytes @ 0x0
  4852                           
  4853  0120                     nokia_delay@count:	
  4854                           ; 1 bytes @ 0x0
  4855                           
  4856  0120                     ___wmul@multiplier:	
  4857                           ; 2 bytes @ 0x0
  4858                           
  4859                           
  4860                           ; 2 bytes @ 0x0
  4861  0120                     	ds	1
  4862  0121                     ??_nokia_gotoxy:	
  4863  0121                     ??___bmul:	
  4864                           ; 1 bytes @ 0x1
  4865                           
  4866  0121                     nokia_write_dorc@n_dato:	
  4867                           ; 1 bytes @ 0x1
  4868                           
  4869                           
  4870                           ; 1 bytes @ 0x1
  4871  0121                     	ds	1
  4872  0122                     ??_nokia_delay:	
  4873  0122                     nokia_write_dorc@caa:	
  4874                           ; 1 bytes @ 0x2
  4875                           
  4876  0122                     nokia_gotoxy@x:	
  4877                           ; 1 bytes @ 0x2
  4878                           
  4879  0122                     ___bmul@product:	
  4880                           ; 1 bytes @ 0x2
  4881                           
  4882  0122                     ___wmul@multiplicand:	
  4883                           ; 1 bytes @ 0x2
  4884                           
  4885                           
  4886                           ; 2 bytes @ 0x2
  4887  0122                     	ds	1
  4888  0123                     nokia_write_dorc@data:	
  4889  0123                     ___bmul@multiplier:	
  4890                           ; 1 bytes @ 0x3
  4891                           
  4892                           
  4893                           ; 1 bytes @ 0x3
  4894  0123                     	ds	1
  4895  0124                     ??_nokia_write_command:	
  4896  0124                     ??_nokia_write_data:	
  4897                           ; 1 bytes @ 0x4
  4898                           
  4899  0124                     ??___wmul:	
  4900                           ; 1 bytes @ 0x4
  4901                           
  4902  0124                     nokia_write_command@comando:	
  4903                           ; 1 bytes @ 0x4
  4904                           
  4905  0124                     nokia_write_data@dato:	
  4906                           ; 1 bytes @ 0x4
  4907                           
  4908  0124                     ___wmul@product:	
  4909                           ; 1 bytes @ 0x4
  4910                           
  4911                           
  4912                           ; 2 bytes @ 0x4
  4913  0124                     	ds	1
  4914  0125                     ??_nokia_init:	
  4915                           
  4916                           ; 1 bytes @ 0x5
  4917  0125                     	ds	1
  4918  0126                     ??_nokia_clean_buffer:	
  4919  0126                     ??_nokia_refresh:	
  4920                           ; 1 bytes @ 0x6
  4921                           
  4922  0126                     ??_nokia_printchar:	
  4923                           ; 1 bytes @ 0x6
  4924                           
  4925                           
  4926                           ; 1 bytes @ 0x6
  4927  0126                     	ds	8
  4928  012E                     nokia_clean_buffer@i:	
  4929  012E                     nokia_refresh@i:	
  4930                           ; 1 bytes @ 0xE
  4931                           
  4932                           
  4933                           ; 1 bytes @ 0xE
  4934  012E                     	ds	1
  4935  012F                     nokia_clean_buffer@j:	
  4936  012F                     nokia_refresh@j:	
  4937                           ; 1 bytes @ 0xF
  4938                           
  4939                           
  4940                           ; 1 bytes @ 0xF
  4941  012F                     	ds	1
  4942  0130                     nokia_printchar@char_data:	
  4943                           
  4944                           ; 1 bytes @ 0x10
  4945  0130                     	ds	1
  4946  0131                     nokia_printchar@char_pos:	
  4947                           
  4948                           ; 1 bytes @ 0x11
  4949  0131                     	ds	1
  4950  0132                     nokia_printchar@char_row:	
  4951                           
  4952                           ; 1 bytes @ 0x12
  4953  0132                     	ds	1
  4954  0133                     nokia_printchar@c:	
  4955                           
  4956                           ; 1 bytes @ 0x13
  4957  0133                     	ds	1
  4958  0134                     ?_nokia_printstr:	
  4959  0134                     nokia_printstr@message:	
  4960                           ; 1 bytes @ 0x14
  4961                           
  4962                           
  4963                           ; 2 bytes @ 0x14
  4964  0134                     	ds	2
  4965  0136                     ??_nokia_printstr:	
  4966  0136                     ??_main:	
  4967                           ; 1 bytes @ 0x16
  4968                           
  4969                           
  4970                           ; 1 bytes @ 0x16
  4971  0136                     	ds	1
  4972  0137                     main@str_greeting:	
  4973                           
  4974                           ; 13 bytes @ 0x17
  4975  0137                     	ds	13
  4976  0144                     main@i:	
  4977                           
  4978                           ; 2 bytes @ 0x24
  4979  0144                     	ds	2
  4980                           
  4981                           	psect	cstackBANK1
  4982  00A0                     __pcstackBANK1:	
  4983  00A0                     _sprintf$1457:	
  4984                           
  4985                           ; 3 bytes @ 0x0
  4986  00A0                     	ds	3
  4987  00A3                     sprintf@ap:	
  4988                           
  4989                           ; 1 bytes @ 0x3
  4990  00A3                     	ds	1
  4991  00A4                     sprintf@val:	
  4992                           
  4993                           ; 4 bytes @ 0x4
  4994  00A4                     	ds	4
  4995  00A8                     sprintf@width:	
  4996                           
  4997                           ; 2 bytes @ 0x8
  4998  00A8                     	ds	2
  4999  00AA                     sprintf@flag:	
  5000                           
  5001                           ; 2 bytes @ 0xA
  5002  00AA                     	ds	2
  5003  00AC                     sprintf@tmpval:	
  5004                           
  5005                           ; 4 bytes @ 0xC
  5006  00AC                     	ds	4
  5007  00B0                     sprintf@exp:	
  5008                           
  5009                           ; 2 bytes @ 0x10
  5010  00B0                     	ds	2
  5011  00B2                     sprintf@sp:	
  5012                           
  5013                           ; 1 bytes @ 0x12
  5014  00B2                     	ds	1
  5015  00B3                     sprintf@fval:	
  5016                           
  5017                           ; 3 bytes @ 0x13
  5018  00B3                     	ds	3
  5019  00B6                     sprintf@prec:	
  5020                           
  5021                           ; 2 bytes @ 0x16
  5022  00B6                     	ds	2
  5023  00B8                     sprintf@c:	
  5024                           
  5025                           ; 1 bytes @ 0x18
  5026  00B8                     	ds	1
  5027  00B9                     TMR0_ISR@sbuf:	
  5028                           
  5029                           ; 20 bytes @ 0x19
  5030  00B9                     	ds	20
  5031  00CD                     _TMR0_ISR$1453:	
  5032                           
  5033                           ; 3 bytes @ 0x2D
  5034  00CD                     	ds	3
  5035  00D0                     TMR0_ISR@convertedValue:	
  5036                           
  5037                           ; 2 bytes @ 0x30
  5038  00D0                     	ds	2
  5039                           
  5040                           	psect	cstackCOMMON
  5041  0070                     __pcstackCOMMON:	
  5042  0070                     ?_isdigit:	
  5043  0070                     ?___ftge:	
  5044                           ; 1 bit 
  5045                           
  5046  0070                     ?_PMD_Initialize:	
  5047                           ; 1 bit 
  5048                           
  5049  0070                     ?_PIN_MANAGER_Initialize:	
  5050                           ; 1 bytes @ 0x0
  5051                           
  5052  0070                     ?_OSCILLATOR_Initialize:	
  5053                           ; 1 bytes @ 0x0
  5054                           
  5055  0070                     ?_ADCC_Initialize:	
  5056                           ; 1 bytes @ 0x0
  5057                           
  5058  0070                     ?_FVR_Initialize:	
  5059                           ; 1 bytes @ 0x0
  5060                           
  5061  0070                     ?_TMR0_Initialize:	
  5062                           ; 1 bytes @ 0x0
  5063                           
  5064  0070                     ?_nokia_clean_line:	
  5065                           ; 1 bytes @ 0x0
  5066                           
  5067  0070                     ?_nokia_refresh_line:	
  5068                           ; 1 bytes @ 0x0
  5069                           
  5070  0070                     ?_nokia_init:	
  5071                           ; 1 bytes @ 0x0
  5072                           
  5073  0070                     ?_nokia_clean_buffer:	
  5074                           ; 1 bytes @ 0x0
  5075                           
  5076  0070                     ?_nokia_refresh:	
  5077                           ; 1 bytes @ 0x0
  5078                           
  5079  0070                     ?_nokia_write_command:	
  5080                           ; 1 bytes @ 0x0
  5081                           
  5082  0070                     ?_nokia_write_data:	
  5083                           ; 1 bytes @ 0x0
  5084                           
  5085  0070                     ?_nokia_write_dorc:	
  5086                           ; 1 bytes @ 0x0
  5087                           
  5088  0070                     ??_isdigit:	
  5089                           ; 1 bytes @ 0x0
  5090                           
  5091  0070                     ?_SYSTEM_Initialize:	
  5092                           ; 1 bytes @ 0x0
  5093                           
  5094  0070                     ?_ADCC_StartConversion:	
  5095                           ; 1 bytes @ 0x0
  5096                           
  5097  0070                     ??_ADCC_StartConversion:	
  5098                           ; 1 bytes @ 0x0
  5099                           
  5100  0070                     ?_ADCC_IsConversionDone:	
  5101                           ; 1 bytes @ 0x0
  5102                           
  5103  0070                     ??_ADCC_IsConversionDone:	
  5104                           ; 1 bytes @ 0x0
  5105                           
  5106  0070                     ?_TMR0_ISR:	
  5107                           ; 1 bytes @ 0x0
  5108                           
  5109  0070                     ?_INTERRUPT_InterruptManager:	
  5110                           ; 1 bytes @ 0x0
  5111                           
  5112  0070                     ?_main:	
  5113                           ; 1 bytes @ 0x0
  5114                           
  5115  0070                     ?_nokia_printchar:	
  5116                           ; 1 bytes @ 0x0
  5117                           
  5118  0070                     ?i1_nokia_write_command:	
  5119                           ; 1 bytes @ 0x0
  5120                           
  5121  0070                     ?i1_nokia_write_data:	
  5122                           ; 1 bytes @ 0x0
  5123                           
  5124  0070                     ?i1_nokia_write_dorc:	
  5125                           ; 1 bytes @ 0x0
  5126                           
  5127  0070                     ??i1_nokia_write_dorc:	
  5128                           ; 1 bytes @ 0x0
  5129                           
  5130  0070                     ?i1_nokia_gotoxy:	
  5131                           ; 1 bytes @ 0x0
  5132                           
  5133  0070                     ?i1_nokia_printchar:	
  5134                           ; 1 bytes @ 0x0
  5135                           
  5136  0070                     ?i1___bmul:	
  5137                           ; 1 bytes @ 0x0
  5138                           
  5139  0070                     ?_ADCC_GetConversionResult:	
  5140                           ; 1 bytes @ 0x0
  5141                           
  5142  0070                     ?___awmod:	
  5143                           ; 2 bytes @ 0x0
  5144                           
  5145  0070                     ?___ftpack:	
  5146                           ; 2 bytes @ 0x0
  5147                           
  5148  0070                     ?___ftneg:	
  5149                           ; 3 bytes @ 0x0
  5150                           
  5151  0070                     ?__tdiv_to_l_:	
  5152                           ; 3 bytes @ 0x0
  5153                           
  5154  0070                     ?__div_to_l_:	
  5155                           ; 4 bytes @ 0x0
  5156                           
  5157  0070                     ?___lldiv:	
  5158                           ; 4 bytes @ 0x0
  5159                           
  5160  0070                     ?___llmod:	
  5161                           ; 4 bytes @ 0x0
  5162                           
  5163  0070                     ADCC_StartConversion@channel:	
  5164                           ; 4 bytes @ 0x0
  5165                           
  5166  0070                     _isdigit$1138:	
  5167                           ; 1 bytes @ 0x0
  5168                           
  5169  0070                     i1nokia_gotoxy@y:	
  5170                           ; 1 bytes @ 0x0
  5171                           
  5172  0070                     i1___bmul@multiplicand:	
  5173                           ; 1 bytes @ 0x0
  5174                           
  5175  0070                     ___awmod@divisor:	
  5176                           ; 1 bytes @ 0x0
  5177                           
  5178  0070                     __div_to_l_@f1:	
  5179                           ; 2 bytes @ 0x0
  5180                           
  5181  0070                     ___ftpack@arg:	
  5182                           ; 3 bytes @ 0x0
  5183                           
  5184  0070                     __tdiv_to_l_@f1:	
  5185                           ; 3 bytes @ 0x0
  5186                           
  5187  0070                     ___ftge@ff1:	
  5188                           ; 3 bytes @ 0x0
  5189                           
  5190  0070                     ___ftneg@f1:	
  5191                           ; 3 bytes @ 0x0
  5192                           
  5193  0070                     ___lldiv@divisor:	
  5194                           ; 3 bytes @ 0x0
  5195                           
  5196  0070                     ___llmod@divisor:	
  5197                           ; 4 bytes @ 0x0
  5198                           
  5199                           
  5200                           ; 4 bytes @ 0x0
  5201  0070                     	ds	1
  5202  0071                     ??i1_nokia_gotoxy:	
  5203  0071                     ??i1___bmul:	
  5204                           ; 1 bytes @ 0x1
  5205                           
  5206  0071                     isdigit@c:	
  5207                           ; 1 bytes @ 0x1
  5208                           
  5209  0071                     i1nokia_write_dorc@n_dato:	
  5210                           ; 1 bytes @ 0x1
  5211                           
  5212                           
  5213                           ; 1 bytes @ 0x1
  5214  0071                     	ds	1
  5215  0072                     ??_ADCC_GetConversionResult:	
  5216  0072                     i1nokia_write_dorc@caa:	
  5217                           ; 1 bytes @ 0x2
  5218                           
  5219  0072                     i1nokia_gotoxy@x:	
  5220                           ; 1 bytes @ 0x2
  5221                           
  5222  0072                     i1___bmul@product:	
  5223                           ; 1 bytes @ 0x2
  5224                           
  5225  0072                     ___awmod@dividend:	
  5226                           ; 1 bytes @ 0x2
  5227                           
  5228                           
  5229                           ; 2 bytes @ 0x2
  5230  0072                     	ds	1
  5231  0073                     ??___ftneg:	
  5232  0073                     ___ftpack@exp:	
  5233                           ; 1 bytes @ 0x3
  5234                           
  5235  0073                     i1nokia_write_dorc@data:	
  5236                           ; 1 bytes @ 0x3
  5237                           
  5238  0073                     i1___bmul@multiplier:	
  5239                           ; 1 bytes @ 0x3
  5240                           
  5241  0073                     __div_to_l_@f2:	
  5242                           ; 1 bytes @ 0x3
  5243                           
  5244  0073                     __tdiv_to_l_@f2:	
  5245                           ; 3 bytes @ 0x3
  5246                           
  5247  0073                     ___ftge@ff2:	
  5248                           ; 3 bytes @ 0x3
  5249                           
  5250                           
  5251                           ; 3 bytes @ 0x3
  5252  0073                     	ds	1
  5253  0074                     ??___awmod:	
  5254  0074                     ??i1_nokia_write_command:	
  5255                           ; 1 bytes @ 0x4
  5256                           
  5257  0074                     ??i1_nokia_write_data:	
  5258                           ; 1 bytes @ 0x4
  5259                           
  5260  0074                     ___ftpack@sign:	
  5261                           ; 1 bytes @ 0x4
  5262                           
  5263  0074                     i1nokia_write_command@comando:	
  5264                           ; 1 bytes @ 0x4
  5265                           
  5266  0074                     i1nokia_write_data@dato:	
  5267                           ; 1 bytes @ 0x4
  5268                           
  5269  0074                     ___lldiv@dividend:	
  5270                           ; 1 bytes @ 0x4
  5271                           
  5272  0074                     ___llmod@dividend:	
  5273                           ; 4 bytes @ 0x4
  5274                           
  5275                           
  5276                           ; 4 bytes @ 0x4
  5277  0074                     	ds	1
  5278  0075                     ??___ftpack:	
  5279  0075                     ___awmod@counter:	
  5280                           ; 1 bytes @ 0x5
  5281                           
  5282                           
  5283                           ; 1 bytes @ 0x5
  5284  0075                     	ds	1
  5285  0076                     ??__tdiv_to_l_:	
  5286  0076                     ??__div_to_l_:	
  5287                           ; 1 bytes @ 0x6
  5288                           
  5289  0076                     ??___ftge:	
  5290                           ; 1 bytes @ 0x6
  5291                           
  5292  0076                     ___awmod@sign:	
  5293                           ; 1 bytes @ 0x6
  5294                           
  5295                           
  5296                           ; 1 bytes @ 0x6
  5297  0076                     	ds	1
  5298  0077                     ?___awdiv:	
  5299  0077                     ___awdiv@divisor:	
  5300                           ; 2 bytes @ 0x7
  5301                           
  5302                           
  5303                           ; 2 bytes @ 0x7
  5304  0077                     	ds	1
  5305  0078                     ??___lldiv:	
  5306  0078                     ??___llmod:	
  5307                           ; 1 bytes @ 0x8
  5308                           
  5309  0078                     ?___lltoft:	
  5310                           ; 1 bytes @ 0x8
  5311                           
  5312  0078                     ?___lwtoft:	
  5313                           ; 3 bytes @ 0x8
  5314                           
  5315  0078                     ___lwtoft@c:	
  5316                           ; 3 bytes @ 0x8
  5317                           
  5318  0078                     ___lltoft@c:	
  5319                           ; 2 bytes @ 0x8
  5320                           
  5321                           
  5322                           ; 4 bytes @ 0x8
  5323  0078                     	ds	1
  5324  0079                     ___llmod@counter:	
  5325  0079                     ___awdiv@dividend:	
  5326                           ; 1 bytes @ 0x9
  5327                           
  5328  0079                     ___lldiv@quotient:	
  5329                           ; 2 bytes @ 0x9
  5330                           
  5331                           
  5332                           ; 4 bytes @ 0x9
  5333  0079                     	ds	2
  5334  007B                     ??___awdiv:	
  5335  007B                     ??___lwtoft:	
  5336                           ; 1 bytes @ 0xB
  5337                           
  5338                           
  5339                           ; 1 bytes @ 0xB
  5340  007B                     	ds	1
  5341  007C                     ??___lltoft:	
  5342  007C                     ??i1___wmul:	
  5343                           ; 1 bytes @ 0xC
  5344                           
  5345  007C                     i1___wmul@product:	
  5346                           ; 1 bytes @ 0xC
  5347                           
  5348                           
  5349                           ; 2 bytes @ 0xC
  5350  007C                     	ds	1
  5351  007D                     ___lldiv@counter:	
  5352  007D                     ___lltoft@exp:	
  5353                           ; 1 bytes @ 0xD
  5354                           
  5355                           
  5356                           ; 1 bytes @ 0xD
  5357  007D                     	ds	1
  5358  007E                     ??___ftsub:	
  5359  007E                     ??i1_nokia_printstr:	
  5360                           ; 1 bytes @ 0xE
  5361                           
  5362                           
  5363                           	psect	cstackBANK0
  5364  0020                     __pcstackBANK0:	
  5365                           ; 1 bytes @ 0xE
  5366                           
  5367  0020                     ___awdiv@counter:	
  5368  0020                     __div_to_l_@quot:	
  5369                           ; 1 bytes @ 0x0
  5370                           
  5371  0020                     __tdiv_to_l_@quot:	
  5372                           ; 4 bytes @ 0x0
  5373                           
  5374                           
  5375                           ; 4 bytes @ 0x0
  5376  0020                     	ds	1
  5377  0021                     ___awdiv@sign:	
  5378                           
  5379                           ; 1 bytes @ 0x1
  5380  0021                     	ds	1
  5381  0022                     ___awdiv@quotient:	
  5382                           
  5383                           ; 2 bytes @ 0x2
  5384  0022                     	ds	2
  5385  0024                     ?i1___wmul:	
  5386  0024                     __div_to_l_@cntr:	
  5387                           ; 2 bytes @ 0x4
  5388                           
  5389  0024                     __tdiv_to_l_@cntr:	
  5390                           ; 1 bytes @ 0x4
  5391                           
  5392  0024                     i1___wmul@multiplier:	
  5393                           ; 1 bytes @ 0x4
  5394                           
  5395                           
  5396                           ; 2 bytes @ 0x4
  5397  0024                     	ds	1
  5398  0025                     __div_to_l_@exp1:	
  5399  0025                     __tdiv_to_l_@exp1:	
  5400                           ; 1 bytes @ 0x5
  5401                           
  5402                           
  5403                           ; 1 bytes @ 0x5
  5404  0025                     	ds	1
  5405  0026                     i1___wmul@multiplicand:	
  5406                           
  5407                           ; 2 bytes @ 0x6
  5408  0026                     	ds	2
  5409  0028                     ??_nokia_clean_line:	
  5410  0028                     ??_nokia_refresh_line:	
  5411                           ; 1 bytes @ 0x8
  5412                           
  5413  0028                     ??i1_nokia_printchar:	
  5414                           ; 1 bytes @ 0x8
  5415                           
  5416  0028                     ?___ftmul:	
  5417                           ; 1 bytes @ 0x8
  5418                           
  5419  0028                     ___ftmul@f1:	
  5420                           ; 3 bytes @ 0x8
  5421                           
  5422                           
  5423                           ; 3 bytes @ 0x8
  5424  0028                     	ds	3
  5425  002B                     ___ftmul@f2:	
  5426                           
  5427                           ; 3 bytes @ 0xB
  5428  002B                     	ds	3
  5429  002E                     ??___ftmul:	
  5430                           
  5431                           ; 1 bytes @ 0xE
  5432  002E                     	ds	2
  5433  0030                     nokia_clean_line@y:	
  5434  0030                     nokia_refresh_line@y:	
  5435                           ; 1 bytes @ 0x10
  5436                           
  5437                           
  5438                           ; 1 bytes @ 0x10
  5439  0030                     	ds	1
  5440  0031                     nokia_clean_line@i:	
  5441  0031                     nokia_refresh_line@x:	
  5442                           ; 1 bytes @ 0x11
  5443                           
  5444                           
  5445                           ; 1 bytes @ 0x11
  5446  0031                     	ds	1
  5447  0032                     ___ftmul@exp:	
  5448  0032                     i1nokia_printchar@char_data:	
  5449                           ; 1 bytes @ 0x12
  5450                           
  5451                           
  5452                           ; 1 bytes @ 0x12
  5453  0032                     	ds	1
  5454  0033                     i1nokia_printchar@char_pos:	
  5455  0033                     ___ftmul@f3_as_product:	
  5456                           ; 1 bytes @ 0x13
  5457                           
  5458                           
  5459                           ; 3 bytes @ 0x13
  5460  0033                     	ds	1
  5461  0034                     i1nokia_printchar@char_row:	
  5462                           
  5463                           ; 1 bytes @ 0x14
  5464  0034                     	ds	1
  5465  0035                     i1nokia_printchar@c:	
  5466                           
  5467                           ; 1 bytes @ 0x15
  5468  0035                     	ds	1
  5469  0036                     ?i1_nokia_printstr:	
  5470  0036                     ___ftmul@cntr:	
  5471                           ; 1 bytes @ 0x16
  5472                           
  5473  0036                     i1nokia_printstr@message:	
  5474                           ; 1 bytes @ 0x16
  5475                           
  5476                           
  5477                           ; 2 bytes @ 0x16
  5478  0036                     	ds	1
  5479  0037                     ___ftmul@sign:	
  5480                           
  5481                           ; 1 bytes @ 0x17
  5482  0037                     	ds	1
  5483  0038                     ?_fround:	
  5484  0038                     ?_scale:	
  5485                           ; 3 bytes @ 0x18
  5486                           
  5487  0038                     ?___fttol:	
  5488                           ; 3 bytes @ 0x18
  5489                           
  5490  0038                     ___fttol@f1:	
  5491                           ; 4 bytes @ 0x18
  5492                           
  5493                           
  5494                           ; 3 bytes @ 0x18
  5495  0038                     	ds	3
  5496  003B                     ??_fround:	
  5497  003B                     ??_scale:	
  5498                           ; 1 bytes @ 0x1B
  5499                           
  5500                           
  5501                           ; 1 bytes @ 0x1B
  5502  003B                     	ds	1
  5503  003C                     ??___fttol:	
  5504                           
  5505                           ; 1 bytes @ 0x1C
  5506  003C                     	ds	1
  5507  003D                     _scale$1456:	
  5508                           
  5509                           ; 3 bytes @ 0x1D
  5510  003D                     	ds	2
  5511  003F                     _fround$1455:	
  5512                           
  5513                           ; 3 bytes @ 0x1F
  5514  003F                     	ds	1
  5515  0040                     scale@scl:	
  5516  0040                     ___fttol@sign1:	
  5517                           ; 1 bytes @ 0x20
  5518                           
  5519                           
  5520                           ; 1 bytes @ 0x20
  5521  0040                     	ds	1
  5522  0041                     ___fttol@lval:	
  5523                           
  5524                           ; 4 bytes @ 0x21
  5525  0041                     	ds	1
  5526  0042                     _fround$1454:	
  5527                           
  5528                           ; 3 bytes @ 0x22
  5529  0042                     	ds	3
  5530  0045                     fround@prec:	
  5531  0045                     ___fttol@exp1:	
  5532                           ; 1 bytes @ 0x25
  5533                           
  5534                           
  5535                           ; 1 bytes @ 0x25
  5536  0045                     	ds	1
  5537  0046                     ?___ftadd:	
  5538  0046                     ___ftadd@f1:	
  5539                           ; 3 bytes @ 0x26
  5540                           
  5541                           
  5542                           ; 3 bytes @ 0x26
  5543  0046                     	ds	3
  5544  0049                     ___ftadd@f2:	
  5545                           
  5546                           ; 3 bytes @ 0x29
  5547  0049                     	ds	3
  5548  004C                     ??___ftadd:	
  5549                           
  5550                           ; 1 bytes @ 0x2C
  5551  004C                     	ds	4
  5552  0050                     ___ftadd@sign:	
  5553                           
  5554                           ; 1 bytes @ 0x30
  5555  0050                     	ds	1
  5556  0051                     ___ftadd@exp2:	
  5557                           
  5558                           ; 1 bytes @ 0x31
  5559  0051                     	ds	1
  5560  0052                     ___ftadd@exp1:	
  5561                           
  5562                           ; 1 bytes @ 0x32
  5563  0052                     	ds	1
  5564  0053                     ?___ftsub:	
  5565  0053                     ___ftsub@f2:	
  5566                           ; 3 bytes @ 0x33
  5567                           
  5568                           
  5569                           ; 3 bytes @ 0x33
  5570  0053                     	ds	3
  5571  0056                     ___ftsub@f1:	
  5572                           
  5573                           ; 3 bytes @ 0x36
  5574  0056                     	ds	3
  5575  0059                     ?_sprintf:	
  5576  0059                     sprintf@f:	
  5577                           ; 2 bytes @ 0x39
  5578                           
  5579                           
  5580                           ; 2 bytes @ 0x39
  5581  0059                     	ds	5
  5582  005E                     ??_sprintf:	
  5583                           
  5584                           ; 1 bytes @ 0x3E
  5585  005E                     	ds	6
  5586  0064                     ??_TMR0_ISR:	
  5587                           
  5588                           ; 1 bytes @ 0x44
  5589  0064                     	ds	1
  5590  0065                     ??_INTERRUPT_InterruptManager:	
  5591                           
  5592                           ; 1 bytes @ 0x45
  5593  0065                     	ds	1
  5594                           
  5595                           	psect	maintext
  5596  14F5                     __pmaintext:	
  5597 ;;
  5598 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  5599 ;;
  5600 ;; *************** function _main *****************
  5601 ;; Defined at:
  5602 ;;		line 54 in file "main.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;		None
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  str_greeting   13   23[BANK2 ] unsigned char [13]
  5607 ;;  i               2   36[BANK2 ] int 
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  1    wreg      void 
  5610 ;; Registers used:
  5611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : B3F/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5618 ;;      Locals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5619 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5620 ;;      Totals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5621 ;;Total ram usage:       16 bytes
  5622 ;; Hardware stack levels required when called:    9
  5623 ;; This function calls:
  5624 ;;		_SYSTEM_Initialize
  5625 ;;		_nokia_clean_buffer
  5626 ;;		_nokia_gotoxy
  5627 ;;		_nokia_init
  5628 ;;		_nokia_printstr
  5629 ;;		_nokia_refresh
  5630 ;; This function is called by:
  5631 ;;		Startup code after reset
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           
  5636                           ;psect for function _main
  5637  14F5                     _main:	
  5638                           
  5639                           ;main.c: 57: SYSTEM_Initialize();
  5640                           
  5641                           ;incstack = 0
  5642                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5643  14F5  319F  27EE  3194   	fcall	_SYSTEM_Initialize
  5644                           
  5645                           ;main.c: 64: do { LATBbits.LATB1 = 0; } while(0);
  5646  14F8  0140               	movlb	0	; select bank0
  5647  14F9  1099               	bcf	25,1	;volatile
  5648                           
  5649                           ;main.c: 68: char str_greeting[]="NOISE METER\n";
  5650  14FA  3046               	movlw	low main@F12667
  5651  14FB  0086               	movwf	6
  5652  14FC  3001               	movlw	high main@F12667
  5653  14FD  0087               	movwf	7
  5654  14FE  3037               	movlw	low main@str_greeting
  5655  14FF  0084               	movwf	4
  5656  1500  3001               	movlw	high main@str_greeting
  5657  1501  0085               	movwf	5
  5658  1502  300D               	movlw	13
  5659  1503  0142               	movlb	2	; select bank2
  5660  1504  00B6               	movwf	??_main^(0+256)
  5661  1505                     u4830:	
  5662  1505  0016               	moviw fsr1++
  5663  1506  001A               	movwi fsr0++
  5664  1507  0BB6               	decfsz	??_main^(0+256),f
  5665  1508  2D05               	goto	u4830
  5666                           
  5667                           ;main.c: 69: nokia_init();
  5668  1509  3197  271C  3194   	fcall	_nokia_init
  5669                           
  5670                           ;main.c: 70: nokia_clean_buffer();
  5671  150C  3188  2000  3194   	fcall	_nokia_clean_buffer
  5672                           
  5673                           ;main.c: 71: nokia_gotoxy(8,0);
  5674  150F  0142               	movlb	2	; select bank2
  5675  1510  01A0               	clrf	nokia_gotoxy@y^(0+256)
  5676  1511  3008               	movlw	8
  5677  1512  3193  2383  3194   	fcall	_nokia_gotoxy
  5678                           
  5679                           ;main.c: 72: nokia_printstr(&str_greeting[0]);
  5680  1515  3037               	movlw	low main@str_greeting
  5681  1516  0142               	movlb	2	; select bank2
  5682  1517  00B4               	movwf	nokia_printstr@message^(0+256)
  5683  1518  3001               	movlw	high main@str_greeting
  5684  1519  00B5               	movwf	(nokia_printstr@message+1)^(0+256)
  5685  151A  3193  2336  3194   	fcall	_nokia_printstr
  5686                           
  5687                           ;main.c: 73: nokia_refresh();
  5688  151D  3187  27B9  3194   	fcall	_nokia_refresh
  5689                           
  5690                           ;main.c: 90: (INTCONbits.GIE = 1);
  5691  1520  178B               	bsf	11,7	;volatile
  5692                           
  5693                           ;main.c: 93: (INTCONbits.PEIE = 1);
  5694  1521  170B               	bsf	11,6	;volatile
  5695  1522                     L1:	
  5696                           
  5697                           ;main.c: 103: int i=0;
  5698  1522  0142               	movlb	2	; select bank2
  5699  1523  01C4               	clrf	main@i^(0+256)
  5700  1524  01C5               	clrf	(main@i+1)^(0+256)
  5701  1525                     l3880:	
  5702                           ;main.c: 104: while (1)
  5703                           
  5704                           
  5705                           ;main.c: 105: {
  5706                           ;main.c: 109: i++;
  5707  1525  3001               	movlw	1
  5708  1526  0142               	movlb	2	; select bank2
  5709  1527  07C4               	addwf	main@i^(0+256),f
  5710  1528  3000               	movlw	0
  5711  1529  3DC5               	addwfc	(main@i+1)^(0+256),f
  5712                           
  5713                           ;main.c: 110: if (i>=1000) i=0;
  5714  152A  0845               	movf	(main@i+1)^(0+256),w
  5715  152B  3A80               	xorlw	128
  5716  152C  00B6               	movwf	??_main^(0+256)
  5717  152D  3083               	movlw	131
  5718  152E  0236               	subwf	??_main^(0+256),w
  5719  152F  1D03               	skipz
  5720  1530  2D33               	goto	u4845
  5721  1531  30E8               	movlw	232
  5722  1532  0244               	subwf	main@i^(0+256),w
  5723  1533                     u4845:	
  5724  1533  1C03               	skipc
  5725  1534  2D25               	goto	l3880
  5726  1535  2D22               	goto	L1
  5727  1536                     __end_of_main:	
  5728                           
  5729                           	psect	text1
  5730  07B9                     __ptext1:	
  5731 ;; *************** function _nokia_refresh *****************
  5732 ;; Defined at:
  5733 ;;		line 319 in file "Nokia_5110.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;		None
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  j               1   15[BANK2 ] unsigned char 
  5738 ;;  i               1   14[BANK2 ] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      void 
  5741 ;; Registers used:
  5742 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5749 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5750 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5751 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5752 ;;Total ram usage:       10 bytes
  5753 ;; Hardware stack levels used:    1
  5754 ;; Hardware stack levels required when called:    8
  5755 ;; This function calls:
  5756 ;;		___wmul
  5757 ;;		_nokia_write_command
  5758 ;;		_nokia_write_data
  5759 ;; This function is called by:
  5760 ;;		_main
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           
  5765                           ;psect for function _nokia_refresh
  5766  07B9                     _nokia_refresh:	
  5767                           
  5768                           ;Nokia_5110.c: 320: char i,j;
  5769                           ;Nokia_5110.c: 321: nokia_write_command(0x40);
  5770                           
  5771                           ;incstack = 0
  5772                           ; Regs used in _nokia_refresh: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5773  07B9  3040               	movlw	64
  5774  07BA  319F  27A8  3187   	fcall	_nokia_write_command
  5775                           
  5776                           ;Nokia_5110.c: 322: nokia_write_command(0x80);
  5777  07BD  3080               	movlw	128
  5778  07BE  319F  27A8  3187   	fcall	_nokia_write_command
  5779                           
  5780                           ;Nokia_5110.c: 323: for(j=0;j<6;j++){
  5781  07C1  0142               	movlb	2	; select bank2
  5782  07C2  01AF               	clrf	nokia_refresh@j^(0+256)
  5783  07C3                     L2:	
  5784  07C3  3006               	movlw	6
  5785  07C4  022F               	subwf	nokia_refresh@j^(0+256),w
  5786  07C5  1803               	btfsc	3,0
  5787  07C6  0008               	return
  5788                           
  5789                           ;Nokia_5110.c: 324: for(i=0;i<84;i++){
  5790  07C7  01AE               	clrf	nokia_refresh@i^(0+256)
  5791  07C8  3054               	movlw	84
  5792  07C9  022E               	subwf	nokia_refresh@i^(0+256),w
  5793  07CA  1803               	btfsc	3,0
  5794  07CB  2FFB               	goto	l3740
  5795  07CC                     l3734:	
  5796                           
  5797                           ;Nokia_5110.c: 325: nokia_write_data(buffer[i][j]);
  5798  07CC  082F               	movf	nokia_refresh@j^(0+256),w
  5799  07CD  00A6               	movwf	??_nokia_refresh^(0+256)
  5800  07CE  01A7               	clrf	(??_nokia_refresh^(0+256)+1)
  5801  07CF  082E               	movf	nokia_refresh@i^(0+256),w
  5802  07D0  00A8               	movwf	(??_nokia_refresh+2)^(0+256)
  5803  07D1  01A9               	clrf	((??_nokia_refresh+2)^(0+256)+1)
  5804  07D2  0828               	movf	(??_nokia_refresh+2)^(0+256),w
  5805  07D3  00A0               	movwf	___wmul@multiplier^(0+256)
  5806  07D4  0829               	movf	(??_nokia_refresh+3)^(0+256),w
  5807  07D5  00A1               	movwf	(___wmul@multiplier+1)^(0+256)
  5808  07D6  3006               	movlw	6
  5809  07D7  00A2               	movwf	___wmul@multiplicand^(0+256)
  5810  07D8  3000               	movlw	0
  5811  07D9  00A3               	movwf	(___wmul@multiplicand^(0+256)+1)
  5812  07DA  3193  23BA  3187   	fcall	___wmul
  5813  07DD  30F8               	movlw	248
  5814  07DE  0142               	movlb	2	; select bank2
  5815  07DF  00AA               	movwf	(??_nokia_refresh+4)^(0+256)
  5816  07E0  3025               	movlw	37
  5817  07E1  00AB               	movwf	((??_nokia_refresh+4)^(0+256)+1)
  5818  07E2  0820               	movf	?___wmul^(0+256),w
  5819  07E3  072A               	addwf	(??_nokia_refresh+4)^(0+256),w
  5820  07E4  00AC               	movwf	(??_nokia_refresh+6)^(0+256)
  5821  07E5  0821               	movf	(?___wmul+1)^(0+256),w
  5822  07E6  3D2B               	addwfc	(??_nokia_refresh+5)^(0+256),w
  5823  07E7  00AD               	movwf	(??_nokia_refresh+7)^(0+256)
  5824  07E8  0826               	movf	??_nokia_refresh^(0+256),w
  5825  07E9  072C               	addwf	(??_nokia_refresh+6)^(0+256),w
  5826  07EA  0086               	movwf	6
  5827  07EB  0827               	movf	(??_nokia_refresh+1)^(0+256),w
  5828  07EC  3D2D               	addwfc	(??_nokia_refresh+7)^(0+256),w
  5829  07ED  0087               	movwf	7
  5830  07EE  0801               	movf	1,w
  5831  07EF  319F  27B5  3187   	fcall	_nokia_write_data
  5832  07F2  3001               	movlw	1
  5833  07F3  0142               	movlb	2	; select bank2
  5834  07F4  00A6               	movwf	??_nokia_refresh^(0+256)
  5835  07F5  0826               	movf	??_nokia_refresh^(0+256),w
  5836  07F6  07AE               	addwf	nokia_refresh@i^(0+256),f
  5837  07F7  3054               	movlw	84
  5838  07F8  022E               	subwf	nokia_refresh@i^(0+256),w
  5839  07F9  1C03               	skipc
  5840  07FA  2FCC               	goto	l3734
  5841  07FB                     l3740:	
  5842  07FB  3001               	movlw	1
  5843  07FC  00A6               	movwf	??_nokia_refresh^(0+256)
  5844  07FD  0826               	movf	??_nokia_refresh^(0+256),w
  5845  07FE  07AF               	addwf	nokia_refresh@j^(0+256),f
  5846  07FF  2FC3               	goto	L2
  5847  0800                     __end_of_nokia_refresh:	
  5848                           
  5849                           	psect	text2
  5850  1FB5                     __ptext2:	
  5851 ;; *************** function _nokia_write_data *****************
  5852 ;; Defined at:
  5853 ;;		line 364 in file "Nokia_5110.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  dato            1    wreg     unsigned char 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  dato            1    4[BANK2 ] unsigned char 
  5858 ;; Return value:  Size  Location     Type
  5859 ;;                  1    wreg      void 
  5860 ;; Registers used:
  5861 ;;		wreg, status,2, status,0, pclath, cstack
  5862 ;; Tracked objects:
  5863 ;;		On entry : 0/0
  5864 ;;		On exit  : 0/0
  5865 ;;		Unchanged: 0/0
  5866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5868 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5870 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5871 ;;Total ram usage:        1 bytes
  5872 ;; Hardware stack levels used:    1
  5873 ;; Hardware stack levels required when called:    7
  5874 ;; This function calls:
  5875 ;;		_nokia_write_dorc
  5876 ;; This function is called by:
  5877 ;;		_nokia_refresh
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           
  5882                           ;psect for function _nokia_write_data
  5883  1FB5                     _nokia_write_data:	
  5884                           
  5885                           ;incstack = 0
  5886                           ; Regs used in _nokia_write_data: [wreg+status,2+status,0+pclath+cstack]
  5887                           ;nokia_write_data@dato stored from wreg
  5888  1FB5  0142               	movlb	2	; select bank2
  5889  1FB6  00A4               	movwf	nokia_write_data@dato^(0+256)
  5890                           
  5891                           ;Nokia_5110.c: 366: do { LATCbits.LATC2 = 1; } while(0);
  5892  1FB7  0140               	movlb	0	; select bank0
  5893  1FB8  151A               	bsf	26,2	;volatile
  5894                           
  5895                           ;Nokia_5110.c: 369: do { LATCbits.LATC1 = 0; } while(0);
  5896  1FB9  109A               	bcf	26,1	;volatile
  5897                           
  5898                           ;Nokia_5110.c: 371: nokia_write_dorc(dato);
  5899  1FBA  0142               	movlb	2	; select bank2
  5900  1FBB  0824               	movf	nokia_write_data@dato^(0+256),w
  5901  1FBC  3194  2432         	fcall	_nokia_write_dorc
  5902                           
  5903                           ;Nokia_5110.c: 373: do { LATCbits.LATC1 = 1; } while(0);
  5904  1FBE  0140               	movlb	0	; select bank0
  5905  1FBF  149A               	bsf	26,1	;volatile
  5906                           
  5907                           ;Nokia_5110.c: 376: do { LATCbits.LATC3 = 1; } while(0);
  5908  1FC0  159A               	bsf	26,3	;volatile
  5909  1FC1  0008               	return
  5910  1FC2                     __end_of_nokia_write_data:	
  5911                           
  5912                           	psect	text3
  5913  1336                     __ptext3:	
  5914 ;; *************** function _nokia_printstr *****************
  5915 ;; Defined at:
  5916 ;;		line 486 in file "Nokia_5110.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  message         2   20[BANK2 ] PTR unsigned char 
  5919 ;;		 -> main@str_greeting(13), TMR0_ISR@sbuf(20), 
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;		None
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  1    wreg      void 
  5924 ;; Registers used:
  5925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5931 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5934 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5935 ;;Total ram usage:        2 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    8
  5938 ;; This function calls:
  5939 ;;		_nokia_printchar
  5940 ;; This function is called by:
  5941 ;;		_main
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           
  5946                           ;psect for function _nokia_printstr
  5947  1336                     _nokia_printstr:	
  5948  1336                     l3850:	
  5949                           ;Nokia_5110.c: 488: for(; *message != '\0';message++){
  5950                           
  5951                           ;incstack = 0
  5952                           ; Regs used in _nokia_printstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5953                           
  5954  1336  0142               	movlb	2	; select bank2
  5955  1337  0834               	movf	nokia_printstr@message^(0+256),w
  5956  1338  0086               	movwf	6
  5957  1339  0835               	movf	(nokia_printstr@message+1)^(0+256),w
  5958  133A  0087               	movwf	7
  5959  133B  0801               	movf	1,w
  5960  133C  1903               	btfsc	3,2
  5961  133D  0008               	return
  5962                           
  5963                           ;Nokia_5110.c: 489: nokia_printchar(*message);
  5964  133E  0142               	movlb	2	; select bank2
  5965  133F  0834               	movf	nokia_printstr@message^(0+256),w
  5966  1340  0086               	movwf	6
  5967  1341  0835               	movf	(nokia_printstr@message+1)^(0+256),w
  5968  1342  0087               	movwf	7
  5969  1343  0801               	movf	1,w
  5970  1344  318A  222C  3193   	fcall	_nokia_printchar
  5971  1347  3001               	movlw	1
  5972  1348  0142               	movlb	2	; select bank2
  5973  1349  07B4               	addwf	nokia_printstr@message^(0+256),f
  5974  134A  3000               	movlw	0
  5975  134B  3DB5               	addwfc	(nokia_printstr@message+1)^(0+256),f
  5976  134C  2B36               	goto	l3850
  5977  134D                     __end_of_nokia_printstr:	
  5978                           
  5979                           	psect	text4
  5980  0A2C                     __ptext4:	
  5981 ;; *************** function _nokia_printchar *****************
  5982 ;; Defined at:
  5983 ;;		line 455 in file "Nokia_5110.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  c               1    wreg     unsigned char 
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;  c               1   19[BANK2 ] unsigned char 
  5988 ;;  char_row        1   18[BANK2 ] unsigned char 
  5989 ;;  char_pos        1   17[BANK2 ] unsigned char 
  5990 ;;  char_data       1   16[BANK2 ] unsigned char 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      void 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6001 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6002 ;;      Temps:          0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6003 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6004 ;;Total ram usage:       14 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:    7
  6007 ;; This function calls:
  6008 ;;		___bmul
  6009 ;;		___wmul
  6010 ;; This function is called by:
  6011 ;;		_nokia_printstr
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           
  6016                           ;psect for function _nokia_printchar
  6017  0A2C                     _nokia_printchar:	
  6018                           
  6019                           ;incstack = 0
  6020                           ; Regs used in _nokia_printchar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6021                           ;nokia_printchar@c stored from wreg
  6022  0A2C  0142               	movlb	2	; select bank2
  6023  0A2D  00B3               	movwf	nokia_printchar@c^(0+256)
  6024                           
  6025                           ;Nokia_5110.c: 457: char char_row,char_pos,char_data;
  6026                           ;Nokia_5110.c: 459: if (c<0x20) return;
  6027  0A2E  3020               	movlw	32
  6028  0A2F  0233               	subwf	nokia_printchar@c^(0+256),w
  6029  0A30  1C03               	btfss	3,0
  6030  0A31  0008               	return
  6031                           
  6032                           ;Nokia_5110.c: 460: if (c>0x7f) return;
  6033  0A32  3080               	movlw	128
  6034  0A33  0233               	subwf	nokia_printchar@c^(0+256),w
  6035  0A34  1803               	btfsc	3,0
  6036  0A35  0008               	return
  6037                           
  6038                           ;Nokia_5110.c: 462: for (char_row=0;char_row<5;char_row++)
  6039  0A36  01B2               	clrf	nokia_printchar@char_row^(0+256)
  6040  0A37  3005               	movlw	5
  6041  0A38  0232               	subwf	nokia_printchar@char_row^(0+256),w
  6042  0A39  1803               	btfsc	3,0
  6043  0A3A  2ABC               	goto	l3614
  6044  0A3B                     l3584:	
  6045                           
  6046                           ;Nokia_5110.c: 463: {
  6047                           ;Nokia_5110.c: 464: if (idx>83){
  6048  0A3B  3054               	movlw	84
  6049  0A3C  0254               	subwf	_idx^(0+256),w
  6050  0A3D  1C03               	skipc
  6051  0A3E  2A48               	goto	l3594
  6052                           
  6053                           ;Nokia_5110.c: 465: idx=0;
  6054  0A3F  01D4               	clrf	_idx^(0+256)
  6055                           
  6056                           ;Nokia_5110.c: 466: idy++;
  6057  0A40  3001               	movlw	1
  6058  0A41  00A6               	movwf	??_nokia_printchar^(0+256)
  6059  0A42  0826               	movf	??_nokia_printchar^(0+256),w
  6060  0A43  07D3               	addwf	_idy^(0+256),f
  6061                           
  6062                           ;Nokia_5110.c: 467: if (idy>5)
  6063  0A44  3006               	movlw	6
  6064  0A45  0253               	subwf	_idy^(0+256),w
  6065  0A46  1803               	btfsc	3,0
  6066                           
  6067                           ;Nokia_5110.c: 468: idy=0;
  6068  0A47  01D3               	clrf	_idy^(0+256)
  6069  0A48                     l3594:	
  6070                           
  6071                           ;Nokia_5110.c: 469: }
  6072                           ;Nokia_5110.c: 470: if (c<0x50){
  6073  0A48  3050               	movlw	80
  6074  0A49  0233               	subwf	nokia_printchar@c^(0+256),w
  6075  0A4A  1803               	skipnc
  6076  0A4B  2A68               	goto	l3600
  6077                           
  6078                           ;Nokia_5110.c: 471: char_pos=((c-0x20)*5);
  6079  0A4C  3005               	movlw	5
  6080  0A4D  00A6               	movwf	??_nokia_printchar^(0+256)
  6081  0A4E  0826               	movf	??_nokia_printchar^(0+256),w
  6082  0A4F  00A0               	movwf	___bmul@multiplicand^(0+256)
  6083  0A50  0833               	movf	nokia_printchar@c^(0+256),w
  6084  0A51  3EE0               	addlw	224
  6085  0A52  3192  22E6  318A   	fcall	___bmul
  6086  0A55  0142               	movlb	2	; select bank2
  6087  0A56  00A7               	movwf	(??_nokia_printchar+1)^(0+256)
  6088  0A57  0827               	movf	(??_nokia_printchar+1)^(0+256),w
  6089  0A58  00B1               	movwf	nokia_printchar@char_pos^(0+256)
  6090                           
  6091                           ;Nokia_5110.c: 472: char_data=TABLA1[(char_pos+char_row)];
  6092  0A59  0831               	movf	nokia_printchar@char_pos^(0+256),w
  6093  0A5A  0732               	addwf	nokia_printchar@char_row^(0+256),w
  6094  0A5B  00A6               	movwf	??_nokia_printchar^(0+256)
  6095  0A5C  01A7               	clrf	(??_nokia_printchar^(0+256)+1)
  6096  0A5D  0DA7               	rlf	(??_nokia_printchar+1)^(0+256),f
  6097  0A5E  30F4               	movlw	low (_TABLA1| (0+32768))
  6098  0A5F  0726               	addwf	??_nokia_printchar^(0+256),w
  6099  0A60  0084               	movwf	4
  6100  0A61  3091               	movlw	high (_TABLA1| (0+32768))
  6101  0A62  3D27               	addwfc	(??_nokia_printchar+1)^(0+256),w
  6102  0A63  0085               	movwf	5
  6103  0A64  0800               	movf	0,w	;code access
  6104  0A65  00A8               	movwf	(??_nokia_printchar+2)^(0+256)
  6105  0A66  0828               	movf	(??_nokia_printchar+2)^(0+256),w
  6106  0A67  00B0               	movwf	nokia_printchar@char_data^(0+256)
  6107  0A68                     l3600:	
  6108                           
  6109                           ;Nokia_5110.c: 473: }
  6110                           ;Nokia_5110.c: 474: if (c>0x4f){
  6111  0A68  3050               	movlw	80
  6112  0A69  0233               	subwf	nokia_printchar@c^(0+256),w
  6113  0A6A  1C03               	skipc
  6114  0A6B  2A88               	goto	l3606
  6115                           
  6116                           ;Nokia_5110.c: 475: char_pos=((c-0x50)*5);
  6117  0A6C  3005               	movlw	5
  6118  0A6D  00A6               	movwf	??_nokia_printchar^(0+256)
  6119  0A6E  0826               	movf	??_nokia_printchar^(0+256),w
  6120  0A6F  00A0               	movwf	___bmul@multiplicand^(0+256)
  6121  0A70  0833               	movf	nokia_printchar@c^(0+256),w
  6122  0A71  3EB0               	addlw	176
  6123  0A72  3192  22E6  318A   	fcall	___bmul
  6124  0A75  0142               	movlb	2	; select bank2
  6125  0A76  00A7               	movwf	(??_nokia_printchar+1)^(0+256)
  6126  0A77  0827               	movf	(??_nokia_printchar+1)^(0+256),w
  6127  0A78  00B1               	movwf	nokia_printchar@char_pos^(0+256)
  6128                           
  6129                           ;Nokia_5110.c: 476: char_data=TABLA2[(char_pos+char_row)];
  6130  0A79  0831               	movf	nokia_printchar@char_pos^(0+256),w
  6131  0A7A  0732               	addwf	nokia_printchar@char_row^(0+256),w
  6132  0A7B  00A6               	movwf	??_nokia_printchar^(0+256)
  6133  0A7C  01A7               	clrf	(??_nokia_printchar^(0+256)+1)
  6134  0A7D  0DA7               	rlf	(??_nokia_printchar+1)^(0+256),f
  6135  0A7E  3004               	movlw	low (_TABLA2| (0+32768))
  6136  0A7F  0726               	addwf	??_nokia_printchar^(0+256),w
  6137  0A80  0084               	movwf	4
  6138  0A81  3091               	movlw	high (_TABLA2| (0+32768))
  6139  0A82  3D27               	addwfc	(??_nokia_printchar+1)^(0+256),w
  6140  0A83  0085               	movwf	5
  6141  0A84  0800               	movf	0,w	;code access
  6142  0A85  00A8               	movwf	(??_nokia_printchar+2)^(0+256)
  6143  0A86  0828               	movf	(??_nokia_printchar+2)^(0+256),w
  6144  0A87  00B0               	movwf	nokia_printchar@char_data^(0+256)
  6145  0A88                     l3606:	
  6146                           
  6147                           ;Nokia_5110.c: 477: }
  6148                           ;Nokia_5110.c: 478: buffer[idx][idy]=char_data;
  6149  0A88  0853               	movf	_idy^(0+256),w
  6150  0A89  00A6               	movwf	??_nokia_printchar^(0+256)
  6151  0A8A  01A7               	clrf	(??_nokia_printchar^(0+256)+1)
  6152  0A8B  0854               	movf	_idx^(0+256),w
  6153  0A8C  00A8               	movwf	(??_nokia_printchar+2)^(0+256)
  6154  0A8D  01A9               	clrf	((??_nokia_printchar+2)^(0+256)+1)
  6155  0A8E  0828               	movf	(??_nokia_printchar+2)^(0+256),w
  6156  0A8F  00A0               	movwf	___wmul@multiplier^(0+256)
  6157  0A90  0829               	movf	(??_nokia_printchar+3)^(0+256),w
  6158  0A91  00A1               	movwf	(___wmul@multiplier+1)^(0+256)
  6159  0A92  3006               	movlw	6
  6160  0A93  00A2               	movwf	___wmul@multiplicand^(0+256)
  6161  0A94  3000               	movlw	0
  6162  0A95  00A3               	movwf	(___wmul@multiplicand^(0+256)+1)
  6163  0A96  3193  23BA  318A   	fcall	___wmul
  6164  0A99  30F8               	movlw	248
  6165  0A9A  0142               	movlb	2	; select bank2
  6166  0A9B  00AA               	movwf	(??_nokia_printchar+4)^(0+256)
  6167  0A9C  3025               	movlw	37
  6168  0A9D  00AB               	movwf	((??_nokia_printchar+4)^(0+256)+1)
  6169  0A9E  0820               	movf	?___wmul^(0+256),w
  6170  0A9F  072A               	addwf	(??_nokia_printchar+4)^(0+256),w
  6171  0AA0  00AC               	movwf	(??_nokia_printchar+6)^(0+256)
  6172  0AA1  0821               	movf	(?___wmul+1)^(0+256),w
  6173  0AA2  3D2B               	addwfc	(??_nokia_printchar+5)^(0+256),w
  6174  0AA3  00AD               	movwf	(??_nokia_printchar+7)^(0+256)
  6175  0AA4  0826               	movf	??_nokia_printchar^(0+256),w
  6176  0AA5  072C               	addwf	(??_nokia_printchar+6)^(0+256),w
  6177  0AA6  00AE               	movwf	(??_nokia_printchar+8)^(0+256)
  6178  0AA7  0827               	movf	(??_nokia_printchar+1)^(0+256),w
  6179  0AA8  3D2D               	addwfc	(??_nokia_printchar+7)^(0+256),w
  6180  0AA9  00AF               	movwf	(??_nokia_printchar+9)^(0+256)
  6181  0AAA  082E               	movf	(??_nokia_printchar+8)^(0+256),w
  6182  0AAB  0086               	movwf	6
  6183  0AAC  082F               	movf	(??_nokia_printchar+9)^(0+256),w
  6184  0AAD  0087               	movwf	7
  6185  0AAE  0830               	movf	nokia_printchar@char_data^(0+256),w
  6186  0AAF  0081               	movwf	1
  6187                           
  6188                           ;Nokia_5110.c: 479: idx++;
  6189  0AB0  3001               	movlw	1
  6190  0AB1  00A6               	movwf	??_nokia_printchar^(0+256)
  6191  0AB2  0826               	movf	??_nokia_printchar^(0+256),w
  6192  0AB3  07D4               	addwf	_idx^(0+256),f
  6193  0AB4  3001               	movlw	1
  6194  0AB5  00A6               	movwf	??_nokia_printchar^(0+256)
  6195  0AB6  0826               	movf	??_nokia_printchar^(0+256),w
  6196  0AB7  07B2               	addwf	nokia_printchar@char_row^(0+256),f
  6197  0AB8  3005               	movlw	5
  6198  0AB9  0232               	subwf	nokia_printchar@char_row^(0+256),w
  6199  0ABA  1C03               	skipc
  6200  0ABB  2A3B               	goto	l3584
  6201  0ABC                     l3614:	
  6202                           
  6203                           ;Nokia_5110.c: 480: }
  6204                           ;Nokia_5110.c: 481: buffer[idx][idy]=0x00;
  6205  0ABC  0853               	movf	_idy^(0+256),w
  6206  0ABD  00A6               	movwf	??_nokia_printchar^(0+256)
  6207  0ABE  01A7               	clrf	(??_nokia_printchar^(0+256)+1)
  6208  0ABF  0854               	movf	_idx^(0+256),w
  6209  0AC0  00A8               	movwf	(??_nokia_printchar+2)^(0+256)
  6210  0AC1  01A9               	clrf	((??_nokia_printchar+2)^(0+256)+1)
  6211  0AC2  0828               	movf	(??_nokia_printchar+2)^(0+256),w
  6212  0AC3  00A0               	movwf	___wmul@multiplier^(0+256)
  6213  0AC4  0829               	movf	(??_nokia_printchar+3)^(0+256),w
  6214  0AC5  00A1               	movwf	(___wmul@multiplier+1)^(0+256)
  6215  0AC6  3006               	movlw	6
  6216  0AC7  00A2               	movwf	___wmul@multiplicand^(0+256)
  6217  0AC8  3000               	movlw	0
  6218  0AC9  00A3               	movwf	(___wmul@multiplicand^(0+256)+1)
  6219  0ACA  3193  23BA         	fcall	___wmul
  6220  0ACC  30F8               	movlw	248
  6221  0ACD  0142               	movlb	2	; select bank2
  6222  0ACE  00AA               	movwf	(??_nokia_printchar+4)^(0+256)
  6223  0ACF  3025               	movlw	37
  6224  0AD0  00AB               	movwf	((??_nokia_printchar+4)^(0+256)+1)
  6225  0AD1  0820               	movf	?___wmul^(0+256),w
  6226  0AD2  072A               	addwf	(??_nokia_printchar+4)^(0+256),w
  6227  0AD3  00AC               	movwf	(??_nokia_printchar+6)^(0+256)
  6228  0AD4  0821               	movf	(?___wmul+1)^(0+256),w
  6229  0AD5  3D2B               	addwfc	(??_nokia_printchar+5)^(0+256),w
  6230  0AD6  00AD               	movwf	(??_nokia_printchar+7)^(0+256)
  6231  0AD7  0826               	movf	??_nokia_printchar^(0+256),w
  6232  0AD8  072C               	addwf	(??_nokia_printchar+6)^(0+256),w
  6233  0AD9  0086               	movwf	6
  6234  0ADA  0827               	movf	(??_nokia_printchar+1)^(0+256),w
  6235  0ADB  3D2D               	addwfc	(??_nokia_printchar+7)^(0+256),w
  6236  0ADC  0087               	movwf	7
  6237  0ADD  0181               	clrf	1
  6238                           
  6239                           ;Nokia_5110.c: 482: idx++;
  6240  0ADE  3001               	movlw	1
  6241  0ADF  00A6               	movwf	??_nokia_printchar^(0+256)
  6242  0AE0  0826               	movf	??_nokia_printchar^(0+256),w
  6243  0AE1  07D4               	addwf	_idx^(0+256),f
  6244  0AE2  0008               	return
  6245  0AE3                     __end_of_nokia_printchar:	
  6246                           
  6247                           	psect	text5
  6248  12E6                     __ptext5:	
  6249 ;; *************** function ___bmul *****************
  6250 ;; Defined at:
  6251 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  multiplier      1    wreg     unsigned char 
  6254 ;;  multiplicand    1    0[BANK2 ] unsigned char 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;  multiplier      1    3[BANK2 ] unsigned char 
  6257 ;;  product         1    2[BANK2 ] unsigned char 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1    wreg      unsigned char 
  6260 ;; Registers used:
  6261 ;;		wreg, status,2, status,0
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6267 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6268 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6269 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6270 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6271 ;;Total ram usage:        4 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    6
  6274 ;; This function calls:
  6275 ;;		Nothing
  6276 ;; This function is called by:
  6277 ;;		_nokia_printchar
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           
  6282                           ;psect for function ___bmul
  6283  12E6                     ___bmul:	
  6284                           
  6285                           ;incstack = 0
  6286                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6287                           ;___bmul@multiplier stored from wreg
  6288  12E6  0142               	movlb	2	; select bank2
  6289  12E7  00A3               	movwf	___bmul@multiplier^(0+256)
  6290  12E8  01A2               	clrf	___bmul@product^(0+256)
  6291  12E9                     l2994:	
  6292  12E9  1C23               	btfss	___bmul@multiplier^(0+256),0
  6293  12EA  2AEF               	goto	l2998
  6294  12EB  0820               	movf	___bmul@multiplicand^(0+256),w
  6295  12EC  00A1               	movwf	??___bmul^(0+256)
  6296  12ED  0821               	movf	??___bmul^(0+256),w
  6297  12EE  07A2               	addwf	___bmul@product^(0+256),f
  6298  12EF                     l2998:	
  6299  12EF  1003               	clrc
  6300  12F0  0DA0               	rlf	___bmul@multiplicand^(0+256),f
  6301  12F1  1003               	clrc
  6302  12F2  0CA3               	rrf	___bmul@multiplier^(0+256),f
  6303  12F3  0823               	movf	___bmul@multiplier^(0+256),w
  6304  12F4  1D03               	btfss	3,2
  6305  12F5  2AE9               	goto	l2994
  6306  12F6  0822               	movf	___bmul@product^(0+256),w
  6307  12F7  0008               	return
  6308  12F8                     __end_of___bmul:	
  6309                           
  6310                           	psect	text6
  6311  171C                     __ptext6:	
  6312 ;; *************** function _nokia_init *****************
  6313 ;; Defined at:
  6314 ;;		line 211 in file "Nokia_5110.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;		None
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0, pclath, cstack
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6332 ;;Total ram usage:        0 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    8
  6335 ;; This function calls:
  6336 ;;		_nokia_delay
  6337 ;;		_nokia_write_command
  6338 ;; This function is called by:
  6339 ;;		_main
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           
  6344                           ;psect for function _nokia_init
  6345  171C                     _nokia_init:	
  6346                           
  6347                           ;incstack = 0
  6348                           ; Regs used in _nokia_init: [wreg+status,2+status,0+pclath+cstack]
  6349                           ;Nokia_5110.c: 212: do { LATCbits.LATC2 = 1; } while(0);
  6350  171C  0140               	movlb	0	; select bank0
  6351  171D  151A               	bsf	26,2	;volatile
  6352                           
  6353                           ;Nokia_5110.c: 213: do { LATCbits.LATC1 = 1; } while(0);
  6354  171E  149A               	bsf	26,1	;volatile
  6355                           
  6356                           ;Nokia_5110.c: 214: do { LATCbits.LATC0 = 1; } while(0);
  6357  171F  141A               	bsf	26,0	;volatile
  6358                           
  6359                           ;Nokia_5110.c: 215: nokia_delay(1);
  6360  1720  3001               	movlw	1
  6361  1721  0142               	movlb	2	; select bank2
  6362  1722  00A0               	movwf	nokia_delay@count^(0+256)
  6363  1723  3000               	movlw	0
  6364  1724  00A1               	movwf	(nokia_delay@count^(0+256)+1)
  6365  1725  319F  2745  3197   	fcall	_nokia_delay
  6366                           
  6367                           ;Nokia_5110.c: 216: do { LATCbits.LATC0 = 0; } while(0);
  6368  1728  0140               	movlb	0	; select bank0
  6369  1729  101A               	bcf	26,0	;volatile
  6370                           
  6371                           ;Nokia_5110.c: 217: nokia_delay(10);
  6372  172A  300A               	movlw	10
  6373  172B  0142               	movlb	2	; select bank2
  6374  172C  00A0               	movwf	nokia_delay@count^(0+256)
  6375  172D  3000               	movlw	0
  6376  172E  00A1               	movwf	(nokia_delay@count^(0+256)+1)
  6377  172F  319F  2745  3197   	fcall	_nokia_delay
  6378                           
  6379                           ;Nokia_5110.c: 218: do { LATCbits.LATC0 = 1; } while(0);
  6380  1732  0140               	movlb	0	; select bank0
  6381  1733  141A               	bsf	26,0	;volatile
  6382                           
  6383                           ;Nokia_5110.c: 219: nokia_delay(1);
  6384  1734  3001               	movlw	1
  6385  1735  0142               	movlb	2	; select bank2
  6386  1736  00A0               	movwf	nokia_delay@count^(0+256)
  6387  1737  3000               	movlw	0
  6388  1738  00A1               	movwf	(nokia_delay@count^(0+256)+1)
  6389  1739  319F  2745  3197   	fcall	_nokia_delay
  6390                           
  6391                           ;Nokia_5110.c: 239: nokia_write_command(0x21);
  6392  173C  3021               	movlw	33
  6393  173D  319F  27A8  3197   	fcall	_nokia_write_command
  6394                           
  6395                           ;Nokia_5110.c: 241: nokia_delay(1);
  6396  1740  3001               	movlw	1
  6397  1741  0142               	movlb	2	; select bank2
  6398  1742  00A0               	movwf	nokia_delay@count^(0+256)
  6399  1743  3000               	movlw	0
  6400  1744  00A1               	movwf	(nokia_delay@count^(0+256)+1)
  6401  1745  319F  2745  3197   	fcall	_nokia_delay
  6402                           
  6403                           ;Nokia_5110.c: 242: nokia_write_command(0x04);
  6404  1748  3004               	movlw	4
  6405  1749  319F  27A8  3197   	fcall	_nokia_write_command
  6406                           
  6407                           ;Nokia_5110.c: 243: nokia_delay(1);
  6408  174C  3001               	movlw	1
  6409  174D  0142               	movlb	2	; select bank2
  6410  174E  00A0               	movwf	nokia_delay@count^(0+256)
  6411  174F  3000               	movlw	0
  6412  1750  00A1               	movwf	(nokia_delay@count^(0+256)+1)
  6413  1751  319F  2745  3197   	fcall	_nokia_delay
  6414                           
  6415                           ;Nokia_5110.c: 244: nokia_write_command(0x16);
  6416  1754  3016               	movlw	22
  6417  1755  319F  27A8  3197   	fcall	_nokia_write_command
  6418                           
  6419                           ;Nokia_5110.c: 245: nokia_delay(1);
  6420  1758  3001               	movlw	1
  6421  1759  0142               	movlb	2	; select bank2
  6422  175A  00A0               	movwf	nokia_delay@count^(0+256)
  6423  175B  3000               	movlw	0
  6424  175C  00A1               	movwf	(nokia_delay@count^(0+256)+1)
  6425  175D  319F  2745  3197   	fcall	_nokia_delay
  6426                           
  6427                           ;Nokia_5110.c: 246: nokia_write_command(0xA0);
  6428  1760  30A0               	movlw	160
  6429  1761  319F  27A8  3197   	fcall	_nokia_write_command
  6430                           
  6431                           ;Nokia_5110.c: 247: nokia_delay(1);
  6432  1764  3001               	movlw	1
  6433  1765  0142               	movlb	2	; select bank2
  6434  1766  00A0               	movwf	nokia_delay@count^(0+256)
  6435  1767  3000               	movlw	0
  6436  1768  00A1               	movwf	(nokia_delay@count^(0+256)+1)
  6437  1769  319F  2745  3197   	fcall	_nokia_delay
  6438                           
  6439                           ;Nokia_5110.c: 252: nokia_write_command(0x20);
  6440  176C  3020               	movlw	32
  6441  176D  319F  27A8  3197   	fcall	_nokia_write_command
  6442                           
  6443                           ;Nokia_5110.c: 254: nokia_delay(1);
  6444  1770  3001               	movlw	1
  6445  1771  0142               	movlb	2	; select bank2
  6446  1772  00A0               	movwf	nokia_delay@count^(0+256)
  6447  1773  3000               	movlw	0
  6448  1774  00A1               	movwf	(nokia_delay@count^(0+256)+1)
  6449  1775  319F  2745  3197   	fcall	_nokia_delay
  6450                           
  6451                           ;Nokia_5110.c: 262: nokia_write_command(0x0c);
  6452  1778  300C               	movlw	12
  6453  1779  319F  27A8  3197   	fcall	_nokia_write_command
  6454                           
  6455                           ;Nokia_5110.c: 264: nokia_delay(1);
  6456  177C  3001               	movlw	1
  6457  177D  0142               	movlb	2	; select bank2
  6458  177E  00A0               	movwf	nokia_delay@count^(0+256)
  6459  177F  3000               	movlw	0
  6460  1780  00A1               	movwf	(nokia_delay@count^(0+256)+1)
  6461  1781  319F  2745         	fcall	_nokia_delay
  6462  1783  0008               	return
  6463  1784                     __end_of_nokia_init:	
  6464                           
  6465                           	psect	text7
  6466  1FA8                     __ptext7:	
  6467 ;; *************** function _nokia_write_command *****************
  6468 ;; Defined at:
  6469 ;;		line 341 in file "Nokia_5110.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  comando         1    wreg     unsigned char 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  comando         1    4[BANK2 ] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  1    wreg      void 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0, pclath, cstack
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6484 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6486 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6487 ;;Total ram usage:        1 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    7
  6490 ;; This function calls:
  6491 ;;		_nokia_write_dorc
  6492 ;; This function is called by:
  6493 ;;		_nokia_init
  6494 ;;		_nokia_refresh
  6495 ;;		_nokia_contrast
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           
  6500                           ;psect for function _nokia_write_command
  6501  1FA8                     _nokia_write_command:	
  6502                           
  6503                           ;incstack = 0
  6504                           ; Regs used in _nokia_write_command: [wreg+status,2+status,0+pclath+cstack]
  6505                           ;nokia_write_command@comando stored from wreg
  6506  1FA8  0142               	movlb	2	; select bank2
  6507  1FA9  00A4               	movwf	nokia_write_command@comando^(0+256)
  6508                           
  6509                           ;Nokia_5110.c: 343: do { LATCbits.LATC2 = 0; } while(0);
  6510  1FAA  0140               	movlb	0	; select bank0
  6511  1FAB  111A               	bcf	26,2	;volatile
  6512                           
  6513                           ;Nokia_5110.c: 346: do { LATCbits.LATC1 = 0; } while(0);
  6514  1FAC  109A               	bcf	26,1	;volatile
  6515                           
  6516                           ;Nokia_5110.c: 349: nokia_write_dorc(comando);
  6517  1FAD  0142               	movlb	2	; select bank2
  6518  1FAE  0824               	movf	nokia_write_command@comando^(0+256),w
  6519  1FAF  3194  2432         	fcall	_nokia_write_dorc
  6520                           
  6521                           ;Nokia_5110.c: 350: do { LATCbits.LATC1 = 1; } while(0);
  6522  1FB1  0140               	movlb	0	; select bank0
  6523  1FB2  149A               	bsf	26,1	;volatile
  6524                           
  6525                           ;Nokia_5110.c: 353: do { LATCbits.LATC3 = 1; } while(0);
  6526  1FB3  159A               	bsf	26,3	;volatile
  6527  1FB4  0008               	return
  6528  1FB5                     __end_of_nokia_write_command:	
  6529                           
  6530                           	psect	text8
  6531  1432                     __ptext8:	
  6532 ;; *************** function _nokia_write_dorc *****************
  6533 ;; Defined at:
  6534 ;;		line 388 in file "Nokia_5110.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  n_dato          1    wreg     unsigned char 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  n_dato          1    1[BANK2 ] unsigned char 
  6539 ;;  data            1    3[BANK2 ] unsigned char 
  6540 ;;  caa             1    2[BANK2 ] unsigned char 
  6541 ;; Return value:  Size  Location     Type
  6542 ;;                  1    wreg      void 
  6543 ;; Registers used:
  6544 ;;		wreg, status,2, status,0
  6545 ;; Tracked objects:
  6546 ;;		On entry : 0/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6551 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6552 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6553 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6554 ;;Total ram usage:        4 bytes
  6555 ;; Hardware stack levels used:    1
  6556 ;; Hardware stack levels required when called:    6
  6557 ;; This function calls:
  6558 ;;		Nothing
  6559 ;; This function is called by:
  6560 ;;		_nokia_write_command
  6561 ;;		_nokia_write_data
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           
  6566                           ;psect for function _nokia_write_dorc
  6567  1432                     _nokia_write_dorc:	
  6568                           
  6569                           ;incstack = 0
  6570                           ; Regs used in _nokia_write_dorc: [wreg+status,2+status,0]
  6571                           ;nokia_write_dorc@n_dato stored from wreg
  6572  1432  0142               	movlb	2	; select bank2
  6573  1433  00A1               	movwf	nokia_write_dorc@n_dato^(0+256)
  6574                           
  6575                           ;Nokia_5110.c: 391: char caa;
  6576                           ;Nokia_5110.c: 392: unsigned char data;
  6577                           ;Nokia_5110.c: 393: data=n_dato;
  6578  1434  0821               	movf	nokia_write_dorc@n_dato^(0+256),w
  6579  1435  00A0               	movwf	??_nokia_write_dorc^(0+256)
  6580  1436  0820               	movf	??_nokia_write_dorc^(0+256),w
  6581  1437  00A3               	movwf	nokia_write_dorc@data^(0+256)
  6582                           
  6583                           ;Nokia_5110.c: 394: for (caa=8;caa>0;caa--){
  6584  1438  3008               	movlw	8
  6585  1439  00A0               	movwf	??_nokia_write_dorc^(0+256)
  6586  143A  0820               	movf	??_nokia_write_dorc^(0+256),w
  6587  143B  00A2               	movwf	nokia_write_dorc@caa^(0+256)
  6588  143C  0822               	movf	nokia_write_dorc@caa^(0+256),w
  6589  143D  1903               	btfsc	3,2
  6590  143E  2C54               	goto	l458
  6591  143F                     l448:	
  6592                           ;Nokia_5110.c: 395: do { LATCbits.LATC3 = 0; } while(0);
  6593                           
  6594  143F  0140               	movlb	0	; select bank0
  6595  1440  119A               	bcf	26,3	;volatile
  6596                           
  6597                           ;Nokia_5110.c: 399: if ((data & 0x80)==0) {
  6598  1441  0142               	movlb	2	; select bank2
  6599  1442  1BA3               	btfsc	nokia_write_dorc@data^(0+256),7
  6600  1443  2C47               	goto	l454
  6601                           
  6602                           ;Nokia_5110.c: 400: do { LATCbits.LATC4 = 0; } while(0);
  6603  1444  0140               	movlb	0	; select bank0
  6604  1445  121A               	bcf	26,4	;volatile
  6605                           
  6606                           ;Nokia_5110.c: 403: }
  6607  1446  2C49               	goto	l456
  6608  1447                     l454:	
  6609                           ;Nokia_5110.c: 404: else {
  6610                           ;Nokia_5110.c: 405: do { LATCbits.LATC4 = 1; } while(0);
  6611                           
  6612  1447  0140               	movlb	0	; select bank0
  6613  1448  161A               	bsf	26,4	;volatile
  6614  1449                     l456:	
  6615                           ;Nokia_5110.c: 408: }
  6616                           ;Nokia_5110.c: 411: do { LATCbits.LATC3 = 1; } while(0);
  6617                           
  6618  1449  159A               	bsf	26,3	;volatile
  6619                           
  6620                           ;Nokia_5110.c: 415: data = data << 1;
  6621  144A  0142               	movlb	2	; select bank2
  6622  144B  3523               	lslf	nokia_write_dorc@data^(0+256),w
  6623  144C  00A0               	movwf	??_nokia_write_dorc^(0+256)
  6624  144D  0820               	movf	??_nokia_write_dorc^(0+256),w
  6625  144E  00A3               	movwf	nokia_write_dorc@data^(0+256)
  6626  144F  3001               	movlw	1
  6627  1450  02A2               	subwf	nokia_write_dorc@caa^(0+256),f
  6628  1451  0822               	movf	nokia_write_dorc@caa^(0+256),w
  6629  1452  1D03               	btfss	3,2
  6630  1453  2C3F               	goto	l448
  6631  1454                     l458:	
  6632                           ;Nokia_5110.c: 416: }
  6633                           ;Nokia_5110.c: 417: do { LATCbits.LATC3 = 0; } while(0);
  6634                           
  6635  1454  0140               	movlb	0	; select bank0
  6636  1455  119A               	bcf	26,3	;volatile
  6637  1456  0008               	return
  6638  1457                     __end_of_nokia_write_dorc:	
  6639                           
  6640                           	psect	text9
  6641  1F45                     __ptext9:	
  6642 ;; *************** function _nokia_delay *****************
  6643 ;; Defined at:
  6644 ;;		line 515 in file "Nokia_5110.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  count           2    0[BANK2 ] int 
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      void 
  6651 ;; Registers used:
  6652 ;;		wreg
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6658 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6661 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6662 ;;Total ram usage:        2 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:    6
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_nokia_init
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           
  6673                           ;psect for function _nokia_delay
  6674  1F45                     _nokia_delay:	
  6675                           
  6676                           ;Nokia_5110.c: 516: _delay((unsigned long)((1)*(1000000/4000.0)));
  6677                           
  6678                           ;incstack = 0
  6679                           ; Regs used in _nokia_delay: [wreg]
  6680  1F45  3053               	movlw	83
  6681  1F46                     u4857:	
  6682  1F46  0B89               	decfsz	9,f
  6683  1F47  2F46               	goto	u4857
  6684  1F48  0000               	nop
  6685  1F49  0008               	return
  6686  1F4A                     __end_of_nokia_delay:	
  6687                           
  6688                           	psect	text10
  6689  1383                     __ptext10:	
  6690 ;; *************** function _nokia_gotoxy *****************
  6691 ;; Defined at:
  6692 ;;		line 436 in file "Nokia_5110.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;  x               1    wreg     unsigned char 
  6695 ;;  y               1    0[BANK2 ] unsigned char 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  x               1    2[BANK2 ] unsigned char 
  6698 ;; Return value:  Size  Location     Type
  6699 ;;                  1    wreg      void 
  6700 ;; Registers used:
  6701 ;;		wreg
  6702 ;; Tracked objects:
  6703 ;;		On entry : 0/0
  6704 ;;		On exit  : 0/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6707 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6708 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6709 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6710 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6711 ;;Total ram usage:        3 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; Hardware stack levels required when called:    6
  6714 ;; This function calls:
  6715 ;;		Nothing
  6716 ;; This function is called by:
  6717 ;;		_main
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           
  6722                           ;psect for function _nokia_gotoxy
  6723  1383                     _nokia_gotoxy:	
  6724                           
  6725                           ;incstack = 0
  6726                           ; Regs used in _nokia_gotoxy: [wreg]
  6727                           ;nokia_gotoxy@x stored from wreg
  6728  1383  0142               	movlb	2	; select bank2
  6729  1384  00A2               	movwf	nokia_gotoxy@x^(0+256)
  6730                           
  6731                           ;Nokia_5110.c: 438: if(x>83)
  6732  1385  3054               	movlw	84
  6733  1386  0222               	subwf	nokia_gotoxy@x^(0+256),w
  6734  1387  1C03               	skipc
  6735  1388  2B8D               	goto	l463
  6736                           
  6737                           ;Nokia_5110.c: 439: x=83;
  6738  1389  3053               	movlw	83
  6739  138A  00A1               	movwf	??_nokia_gotoxy^(0+256)
  6740  138B  0821               	movf	??_nokia_gotoxy^(0+256),w
  6741  138C  00A2               	movwf	nokia_gotoxy@x^(0+256)
  6742  138D                     l463:	
  6743                           
  6744                           ;Nokia_5110.c: 440: if(y>5)
  6745  138D  3006               	movlw	6
  6746  138E  0220               	subwf	nokia_gotoxy@y^(0+256),w
  6747  138F  1C03               	skipc
  6748  1390  2B95               	goto	l464
  6749                           
  6750                           ;Nokia_5110.c: 441: y=5;
  6751  1391  3005               	movlw	5
  6752  1392  00A1               	movwf	??_nokia_gotoxy^(0+256)
  6753  1393  0821               	movf	??_nokia_gotoxy^(0+256),w
  6754  1394  00A0               	movwf	nokia_gotoxy@y^(0+256)
  6755  1395                     l464:	
  6756                           
  6757                           ;Nokia_5110.c: 442: idx=x;
  6758  1395  0822               	movf	nokia_gotoxy@x^(0+256),w
  6759  1396  00A1               	movwf	??_nokia_gotoxy^(0+256)
  6760  1397  0821               	movf	??_nokia_gotoxy^(0+256),w
  6761  1398  00D4               	movwf	_idx^(0+256)
  6762                           
  6763                           ;Nokia_5110.c: 443: idy=y;
  6764  1399  0820               	movf	nokia_gotoxy@y^(0+256),w
  6765  139A  00A1               	movwf	??_nokia_gotoxy^(0+256)
  6766  139B  0821               	movf	??_nokia_gotoxy^(0+256),w
  6767  139C  00D3               	movwf	_idy^(0+256)
  6768  139D  0008               	return
  6769  139E                     __end_of_nokia_gotoxy:	
  6770                           
  6771                           	psect	text11
  6772  0800                     __ptext11:	
  6773 ;; *************** function _nokia_clean_buffer *****************
  6774 ;; Defined at:
  6775 ;;		line 293 in file "Nokia_5110.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;		None
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  j               1   15[BANK2 ] unsigned char 
  6780 ;;  i               1   14[BANK2 ] unsigned char 
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1    wreg      void 
  6783 ;; Registers used:
  6784 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6791 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6792 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6793 ;;      Totals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6794 ;;Total ram usage:       10 bytes
  6795 ;; Hardware stack levels used:    1
  6796 ;; Hardware stack levels required when called:    7
  6797 ;; This function calls:
  6798 ;;		___wmul
  6799 ;; This function is called by:
  6800 ;;		_main
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           
  6805                           ;psect for function _nokia_clean_buffer
  6806  0800                     _nokia_clean_buffer:	
  6807                           
  6808                           ;Nokia_5110.c: 294: char i,j;
  6809                           ;Nokia_5110.c: 295: for(j=0;j<6;j++){
  6810                           
  6811                           ;incstack = 0
  6812                           ; Regs used in _nokia_clean_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6813  0800  0142               	movlb	2	; select bank2
  6814  0801  01AF               	clrf	nokia_clean_buffer@j^(0+256)
  6815  0802                     L3:	
  6816  0802  3006               	movlw	6
  6817  0803  022F               	subwf	nokia_clean_buffer@j^(0+256),w
  6818  0804  1803               	btfsc	3,0
  6819  0805  0008               	return
  6820                           
  6821                           ;Nokia_5110.c: 296: for(i=0;i<84;i++){
  6822  0806  01AE               	clrf	nokia_clean_buffer@i^(0+256)
  6823  0807  3054               	movlw	84
  6824  0808  022E               	subwf	nokia_clean_buffer@i^(0+256),w
  6825  0809  1803               	btfsc	3,0
  6826  080A  2836               	goto	l3716
  6827  080B                     l3710:	
  6828                           
  6829                           ;Nokia_5110.c: 297: buffer[i][j]=0x00;
  6830  080B  082F               	movf	nokia_clean_buffer@j^(0+256),w
  6831  080C  00A6               	movwf	??_nokia_clean_buffer^(0+256)
  6832  080D  01A7               	clrf	(??_nokia_clean_buffer^(0+256)+1)
  6833  080E  082E               	movf	nokia_clean_buffer@i^(0+256),w
  6834  080F  00A8               	movwf	(??_nokia_clean_buffer+2)^(0+256)
  6835  0810  01A9               	clrf	((??_nokia_clean_buffer+2)^(0+256)+1)
  6836  0811  0828               	movf	(??_nokia_clean_buffer+2)^(0+256),w
  6837  0812  00A0               	movwf	___wmul@multiplier^(0+256)
  6838  0813  0829               	movf	(??_nokia_clean_buffer+3)^(0+256),w
  6839  0814  00A1               	movwf	(___wmul@multiplier+1)^(0+256)
  6840  0815  3006               	movlw	6
  6841  0816  00A2               	movwf	___wmul@multiplicand^(0+256)
  6842  0817  3000               	movlw	0
  6843  0818  00A3               	movwf	(___wmul@multiplicand^(0+256)+1)
  6844  0819  3193  23BA  3188   	fcall	___wmul
  6845  081C  30F8               	movlw	248
  6846  081D  0142               	movlb	2	; select bank2
  6847  081E  00AA               	movwf	(??_nokia_clean_buffer+4)^(0+256)
  6848  081F  3025               	movlw	37
  6849  0820  00AB               	movwf	((??_nokia_clean_buffer+4)^(0+256)+1)
  6850  0821  0820               	movf	?___wmul^(0+256),w
  6851  0822  072A               	addwf	(??_nokia_clean_buffer+4)^(0+256),w
  6852  0823  00AC               	movwf	(??_nokia_clean_buffer+6)^(0+256)
  6853  0824  0821               	movf	(?___wmul+1)^(0+256),w
  6854  0825  3D2B               	addwfc	(??_nokia_clean_buffer+5)^(0+256),w
  6855  0826  00AD               	movwf	(??_nokia_clean_buffer+7)^(0+256)
  6856  0827  0826               	movf	??_nokia_clean_buffer^(0+256),w
  6857  0828  072C               	addwf	(??_nokia_clean_buffer+6)^(0+256),w
  6858  0829  0086               	movwf	6
  6859  082A  0827               	movf	(??_nokia_clean_buffer+1)^(0+256),w
  6860  082B  3D2D               	addwfc	(??_nokia_clean_buffer+7)^(0+256),w
  6861  082C  0087               	movwf	7
  6862  082D  0181               	clrf	1
  6863  082E  3001               	movlw	1
  6864  082F  00A6               	movwf	??_nokia_clean_buffer^(0+256)
  6865  0830  0826               	movf	??_nokia_clean_buffer^(0+256),w
  6866  0831  07AE               	addwf	nokia_clean_buffer@i^(0+256),f
  6867  0832  3054               	movlw	84
  6868  0833  022E               	subwf	nokia_clean_buffer@i^(0+256),w
  6869  0834  1C03               	skipc
  6870  0835  280B               	goto	l3710
  6871  0836                     l3716:	
  6872  0836  3001               	movlw	1
  6873  0837  00A6               	movwf	??_nokia_clean_buffer^(0+256)
  6874  0838  0826               	movf	??_nokia_clean_buffer^(0+256),w
  6875  0839  07AF               	addwf	nokia_clean_buffer@j^(0+256),f
  6876  083A  2802               	goto	L3
  6877  083B                     __end_of_nokia_clean_buffer:	
  6878                           
  6879                           	psect	text12
  6880  13BA                     __ptext12:	
  6881 ;; *************** function ___wmul *****************
  6882 ;; Defined at:
  6883 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  6884 ;; Parameters:    Size  Location     Type
  6885 ;;  multiplier      2    0[BANK2 ] unsigned int 
  6886 ;;  multiplicand    2    2[BANK2 ] unsigned int 
  6887 ;; Auto vars:     Size  Location     Type
  6888 ;;  product         2    4[BANK2 ] unsigned int 
  6889 ;; Return value:  Size  Location     Type
  6890 ;;                  2    0[BANK2 ] unsigned int 
  6891 ;; Registers used:
  6892 ;;		wreg, status,2, status,0
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6898 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6899 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6901 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6902 ;;Total ram usage:        6 bytes
  6903 ;; Hardware stack levels used:    1
  6904 ;; Hardware stack levels required when called:    6
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_nokia_clean_buffer
  6909 ;;		_nokia_refresh
  6910 ;;		_nokia_printchar
  6911 ;;		_nokia_bigc
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           
  6916                           ;psect for function ___wmul
  6917  13BA                     ___wmul:	
  6918                           
  6919                           ;incstack = 0
  6920                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6921  13BA  0142               	movlb	2	; select bank2
  6922  13BB  01A4               	clrf	___wmul@product^(0+256)
  6923  13BC  01A5               	clrf	(___wmul@product+1)^(0+256)
  6924  13BD                     l2980:	
  6925  13BD  1C20               	btfss	___wmul@multiplier^(0+256),0
  6926  13BE  2BC3               	goto	l699
  6927  13BF  0822               	movf	___wmul@multiplicand^(0+256),w
  6928  13C0  07A4               	addwf	___wmul@product^(0+256),f
  6929  13C1  0823               	movf	(___wmul@multiplicand+1)^(0+256),w
  6930  13C2  3DA5               	addwfc	(___wmul@product+1)^(0+256),f
  6931  13C3                     l699:	
  6932  13C3  3001               	movlw	1
  6933  13C4                     u3525:	
  6934  13C4  35A2               	lslf	___wmul@multiplicand^(0+256),f
  6935  13C5  0DA3               	rlf	(___wmul@multiplicand+1)^(0+256),f
  6936  13C6  0B89               	decfsz	9,f
  6937  13C7  2BC4               	goto	u3525
  6938  13C8  3001               	movlw	1
  6939  13C9                     u3535:	
  6940  13C9  36A1               	lsrf	(___wmul@multiplier+1)^(0+256),f
  6941  13CA  0CA0               	rrf	___wmul@multiplier^(0+256),f
  6942  13CB  0B89               	decfsz	9,f
  6943  13CC  2BC9               	goto	u3535
  6944  13CD  0820               	movf	___wmul@multiplier^(0+256),w
  6945  13CE  0421               	iorwf	(___wmul@multiplier+1)^(0+256),w
  6946  13CF  1D03               	btfss	3,2
  6947  13D0  2BBD               	goto	l2980
  6948  13D1  0825               	movf	(___wmul@product+1)^(0+256),w
  6949  13D2  00A1               	movwf	(?___wmul+1)^(0+256)
  6950  13D3  0824               	movf	___wmul@product^(0+256),w
  6951  13D4  00A0               	movwf	?___wmul^(0+256)
  6952  13D5  0008               	return
  6953  13D6                     __end_of___wmul:	
  6954                           
  6955                           	psect	text13
  6956  1FEE                     __ptext13:	
  6957 ;; *************** function _SYSTEM_Initialize *****************
  6958 ;; Defined at:
  6959 ;;		line 90 in file "mcc_generated_files/mcc.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;		None
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;		None
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  1    wreg      void 
  6966 ;; Registers used:
  6967 ;;		wreg, status,2, status,0, pclath, cstack
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6977 ;;Total ram usage:        0 bytes
  6978 ;; Hardware stack levels used:    1
  6979 ;; Hardware stack levels required when called:    7
  6980 ;; This function calls:
  6981 ;;		_ADCC_Initialize
  6982 ;;		_FVR_Initialize
  6983 ;;		_OSCILLATOR_Initialize
  6984 ;;		_PIN_MANAGER_Initialize
  6985 ;;		_PMD_Initialize
  6986 ;;		_TMR0_Initialize
  6987 ;; This function is called by:
  6988 ;;		_main
  6989 ;; This function uses a non-reentrant model
  6990 ;;
  6991                           
  6992                           
  6993                           ;psect for function _SYSTEM_Initialize
  6994  1FEE                     _SYSTEM_Initialize:	
  6995                           
  6996                           ;mcc.c: 92: PMD_Initialize();
  6997                           
  6998                           ;incstack = 0
  6999                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7000  1FEE  319F  2767  319F   	fcall	_PMD_Initialize
  7001                           
  7002                           ;mcc.c: 93: PIN_MANAGER_Initialize();
  7003  1FF1  3193  23F4  319F   	fcall	_PIN_MANAGER_Initialize
  7004                           
  7005                           ;mcc.c: 94: OSCILLATOR_Initialize();
  7006  1FF4  319F  2785  319F   	fcall	_OSCILLATOR_Initialize
  7007                           
  7008                           ;mcc.c: 95: ADCC_Initialize();
  7009  1FF7  3193  2368  319F   	fcall	_ADCC_Initialize
  7010                           
  7011                           ;mcc.c: 96: FVR_Initialize();
  7012  1FFA  319F  2741  319F   	fcall	_FVR_Initialize
  7013                           
  7014                           ;mcc.c: 97: TMR0_Initialize();
  7015  1FFD  3193  230B         	fcall	_TMR0_Initialize
  7016  1FFF  0008               	return
  7017  2000                     __end_of_SYSTEM_Initialize:	
  7018                           
  7019                           	psect	text14
  7020  130B                     __ptext14:	
  7021 ;; *************** function _TMR0_Initialize *****************
  7022 ;; Defined at:
  7023 ;;		line 70 in file "mcc_generated_files/tmr0.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;		None
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;		None
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  1    wreg      void 
  7030 ;; Registers used:
  7031 ;;		wreg, status,2
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7041 ;;Total ram usage:        0 bytes
  7042 ;; Hardware stack levels used:    1
  7043 ;; Hardware stack levels required when called:    6
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_SYSTEM_Initialize
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           
  7052                           ;psect for function _TMR0_Initialize
  7053  130B                     _TMR0_Initialize:	
  7054                           
  7055                           ;tmr0.c: 75: T0CON1 = 0x72;
  7056                           
  7057                           ;incstack = 0
  7058                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  7059  130B  3072               	movlw	114
  7060  130C  014B               	movlb	11	; select bank11
  7061  130D  009F               	movwf	31	;volatile
  7062                           
  7063                           ;tmr0.c: 78: TMR0H = 0x79;
  7064  130E  3079               	movlw	121
  7065  130F  009D               	movwf	29	;volatile
  7066                           
  7067                           ;tmr0.c: 81: TMR0L = 0x00;
  7068  1310  019C               	clrf	28	;volatile
  7069                           
  7070                           ;tmr0.c: 84: timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
  7071  1311  081D               	movf	29,w	;volatile
  7072  1312  0141               	movlb	1	; select bank1
  7073  1313  00D3               	movwf	(_timer0ReloadVal16bit+1)^(0+128)	;volatile
  7074  1314  014B               	movlb	11	; select bank11
  7075  1315  081C               	movf	28,w	;volatile
  7076  1316  0141               	movlb	1	; select bank1
  7077  1317  00D2               	movwf	_timer0ReloadVal16bit^(0+128)	;volatile
  7078                           
  7079                           ;tmr0.c: 87: PIR0bits.TMR0IF = 0;
  7080  1318  014E               	movlb	14	; select bank14
  7081  1319  128C               	bcf	12,5	;volatile
  7082                           
  7083                           ;tmr0.c: 90: PIE0bits.TMR0IE = 1;
  7084  131A  1696               	bsf	22,5	;volatile
  7085                           
  7086                           ;tmr0.c: 94: T0CON0 = 0x97;
  7087  131B  3097               	movlw	151
  7088  131C  014B               	movlb	11	; select bank11
  7089  131D  009E               	movwf	30	;volatile
  7090  131E  0008               	return
  7091  131F                     __end_of_TMR0_Initialize:	
  7092                           
  7093                           	psect	text15
  7094  1F67                     __ptext15:	
  7095 ;; *************** function _PMD_Initialize *****************
  7096 ;; Defined at:
  7097 ;;		line 116 in file "mcc_generated_files/mcc.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;		None
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;		None
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1    wreg      void 
  7104 ;; Registers used:
  7105 ;;		status,2
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7115 ;;Total ram usage:        0 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; Hardware stack levels required when called:    6
  7118 ;; This function calls:
  7119 ;;		Nothing
  7120 ;; This function is called by:
  7121 ;;		_SYSTEM_Initialize
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           
  7126                           ;psect for function _PMD_Initialize
  7127  1F67                     _PMD_Initialize:	
  7128                           
  7129                           ;mcc.c: 119: PMD0 = 0x00;
  7130                           
  7131                           ;incstack = 0
  7132                           ; Regs used in _PMD_Initialize: [status,2]
  7133  1F67  014F               	movlb	15	; select bank15
  7134  1F68  0196               	clrf	22	;volatile
  7135                           
  7136                           ;mcc.c: 121: PMD1 = 0x00;
  7137  1F69  0197               	clrf	23	;volatile
  7138                           
  7139                           ;mcc.c: 123: PMD2 = 0x00;
  7140  1F6A  0198               	clrf	24	;volatile
  7141                           
  7142                           ;mcc.c: 125: PMD3 = 0x00;
  7143  1F6B  0199               	clrf	25	;volatile
  7144                           
  7145                           ;mcc.c: 127: PMD4 = 0x00;
  7146  1F6C  019A               	clrf	26	;volatile
  7147                           
  7148                           ;mcc.c: 129: PMD5 = 0x00;
  7149  1F6D  019B               	clrf	27	;volatile
  7150  1F6E  0008               	return
  7151  1F6F                     __end_of_PMD_Initialize:	
  7152                           
  7153                           	psect	text16
  7154  13F4                     __ptext16:	
  7155 ;; *************** function _PIN_MANAGER_Initialize *****************
  7156 ;; Defined at:
  7157 ;;		line 84 in file "mcc_generated_files/pin_manager.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;		None
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;		None
  7162 ;; Return value:  Size  Location     Type
  7163 ;;                  1    wreg      void 
  7164 ;; Registers used:
  7165 ;;		wreg, status,2, status,0
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/0
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7175 ;;Total ram usage:        0 bytes
  7176 ;; Hardware stack levels used:    1
  7177 ;; Hardware stack levels required when called:    6
  7178 ;; This function calls:
  7179 ;;		Nothing
  7180 ;; This function is called by:
  7181 ;;		_SYSTEM_Initialize
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           
  7186                           ;psect for function _PIN_MANAGER_Initialize
  7187  13F4                     _PIN_MANAGER_Initialize:	
  7188                           
  7189                           ;pin_manager.c: 89: LATA = 0x00;
  7190                           
  7191                           ;incstack = 0
  7192                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  7193  13F4  0140               	movlb	0	; select bank0
  7194  13F5  0198               	clrf	24	;volatile
  7195                           
  7196                           ;pin_manager.c: 90: LATB = 0x00;
  7197  13F6  0199               	clrf	25	;volatile
  7198                           
  7199                           ;pin_manager.c: 91: LATC = 0x00;
  7200  13F7  019A               	clrf	26	;volatile
  7201                           
  7202                           ;pin_manager.c: 96: TRISA = 0xDF;
  7203  13F8  30DF               	movlw	223
  7204  13F9  0092               	movwf	18	;volatile
  7205                           
  7206                           ;pin_manager.c: 97: TRISB = 0xFD;
  7207  13FA  30FD               	movlw	253
  7208  13FB  0093               	movwf	19	;volatile
  7209                           
  7210                           ;pin_manager.c: 98: TRISC = 0xC0;
  7211  13FC  30C0               	movlw	192
  7212  13FD  0094               	movwf	20	;volatile
  7213                           
  7214                           ;pin_manager.c: 103: ANSELC = 0xDC;
  7215  13FE  30DC               	movlw	220
  7216  13FF  017E               	movlb	62	; select bank62
  7217  1400  00CE               	movwf	78	;volatile
  7218                           
  7219                           ;pin_manager.c: 104: ANSELB = 0xFE;
  7220  1401  30FE               	movlw	254
  7221  1402  00C3               	movwf	67	;volatile
  7222                           
  7223                           ;pin_manager.c: 105: ANSELA = 0xC7;
  7224  1403  30C7               	movlw	199
  7225  1404  00B8               	movwf	56	;volatile
  7226                           
  7227                           ;pin_manager.c: 110: WPUE = 0x00;
  7228  1405  01E5               	clrf	101	;volatile
  7229                           
  7230                           ;pin_manager.c: 111: WPUB = 0x00;
  7231  1406  01C4               	clrf	68	;volatile
  7232                           
  7233                           ;pin_manager.c: 112: WPUA = 0x00;
  7234  1407  01B9               	clrf	57	;volatile
  7235                           
  7236                           ;pin_manager.c: 113: WPUC = 0x00;
  7237  1408  01CF               	clrf	79	;volatile
  7238                           
  7239                           ;pin_manager.c: 118: ODCONA = 0x00;
  7240  1409  01BA               	clrf	58	;volatile
  7241                           
  7242                           ;pin_manager.c: 119: ODCONB = 0x00;
  7243  140A  01C5               	clrf	69	;volatile
  7244                           
  7245                           ;pin_manager.c: 120: ODCONC = 0x00;
  7246  140B  01D0               	clrf	80	;volatile
  7247                           
  7248                           ;pin_manager.c: 127: ADCACTPPSbits.ADCACTPPS = 0x08;
  7249  140C  017D               	movlb	61	; select bank61
  7250  140D  0843               	movf	67,w	;volatile
  7251  140E  39E0               	andlw	-32
  7252  140F  3808               	iorlw	8
  7253  1410  00C3               	movwf	67	;volatile
  7254  1411  0008               	return
  7255  1412                     __end_of_PIN_MANAGER_Initialize:	
  7256                           
  7257                           	psect	text17
  7258  1F85                     __ptext17:	
  7259 ;; *************** function _OSCILLATOR_Initialize *****************
  7260 ;; Defined at:
  7261 ;;		line 100 in file "mcc_generated_files/mcc.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;		None
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;		None
  7266 ;; Return value:  Size  Location     Type
  7267 ;;                  1    wreg      void 
  7268 ;; Registers used:
  7269 ;;		wreg, status,2
  7270 ;; Tracked objects:
  7271 ;;		On entry : 0/0
  7272 ;;		On exit  : 0/0
  7273 ;;		Unchanged: 0/0
  7274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7279 ;;Total ram usage:        0 bytes
  7280 ;; Hardware stack levels used:    1
  7281 ;; Hardware stack levels required when called:    6
  7282 ;; This function calls:
  7283 ;;		Nothing
  7284 ;; This function is called by:
  7285 ;;		_SYSTEM_Initialize
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           
  7290                           ;psect for function _OSCILLATOR_Initialize
  7291  1F85                     _OSCILLATOR_Initialize:	
  7292                           
  7293                           ;mcc.c: 103: OSCCON1 = 0x62;
  7294                           
  7295                           ;incstack = 0
  7296                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7297  1F85  3062               	movlw	98
  7298  1F86  0151               	movlb	17	; select bank17
  7299  1F87  008D               	movwf	13	;volatile
  7300                           
  7301                           ;mcc.c: 105: OSCCON3 = 0x00;
  7302  1F88  018F               	clrf	15	;volatile
  7303                           
  7304                           ;mcc.c: 107: OSCEN = 0x00;
  7305  1F89  0191               	clrf	17	;volatile
  7306                           
  7307                           ;mcc.c: 109: OSCFRQ = 0x02;
  7308  1F8A  3002               	movlw	2
  7309  1F8B  0093               	movwf	19	;volatile
  7310                           
  7311                           ;mcc.c: 111: OSCSTAT = 0x00;
  7312  1F8C  0190               	clrf	16	;volatile
  7313                           
  7314                           ;mcc.c: 113: OSCTUNE = 0x20;
  7315  1F8D  3020               	movlw	32
  7316  1F8E  0092               	movwf	18	;volatile
  7317  1F8F  0008               	return
  7318  1F90                     __end_of_OSCILLATOR_Initialize:	
  7319                           
  7320                           	psect	text18
  7321  1F41                     __ptext18:	
  7322 ;; *************** function _FVR_Initialize *****************
  7323 ;; Defined at:
  7324 ;;		line 57 in file "mcc_generated_files/fvr.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;		None
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;		None
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		wreg
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7342 ;;Total ram usage:        0 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    6
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_SYSTEM_Initialize
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           
  7353                           ;psect for function _FVR_Initialize
  7354  1F41                     _FVR_Initialize:	
  7355                           
  7356                           ;fvr.c: 60: FVRCON = 0x85;
  7357                           
  7358                           ;incstack = 0
  7359                           ; Regs used in _FVR_Initialize: [wreg]
  7360  1F41  3085               	movlw	133
  7361  1F42  0152               	movlb	18	; select bank18
  7362  1F43  008C               	movwf	12	;volatile
  7363  1F44  0008               	return
  7364  1F45                     __end_of_FVR_Initialize:	
  7365                           
  7366                           	psect	text19
  7367  1368                     __ptext19:	
  7368 ;; *************** function _ADCC_Initialize *****************
  7369 ;; Defined at:
  7370 ;;		line 62 in file "mcc_generated_files/adcc.c"
  7371 ;; Parameters:    Size  Location     Type
  7372 ;;		None
  7373 ;; Auto vars:     Size  Location     Type
  7374 ;;		None
  7375 ;; Return value:  Size  Location     Type
  7376 ;;                  1    wreg      void 
  7377 ;; Registers used:
  7378 ;;		wreg, status,2
  7379 ;; Tracked objects:
  7380 ;;		On entry : 0/0
  7381 ;;		On exit  : 0/0
  7382 ;;		Unchanged: 0/0
  7383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7388 ;;Total ram usage:        0 bytes
  7389 ;; Hardware stack levels used:    1
  7390 ;; Hardware stack levels required when called:    6
  7391 ;; This function calls:
  7392 ;;		Nothing
  7393 ;; This function is called by:
  7394 ;;		_SYSTEM_Initialize
  7395 ;; This function uses a non-reentrant model
  7396 ;;
  7397                           
  7398                           
  7399                           ;psect for function _ADCC_Initialize
  7400  1368                     _ADCC_Initialize:	
  7401                           
  7402                           ;adcc.c: 66: ADLTHL = 0x00;
  7403                           
  7404                           ;incstack = 0
  7405                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  7406  1368  0141               	movlb	1	; select bank1
  7407  1369  018C               	clrf	12	;volatile
  7408                           
  7409                           ;adcc.c: 68: ADLTHH = 0x00;
  7410  136A  018D               	clrf	13	;volatile
  7411                           
  7412                           ;adcc.c: 70: ADUTHL = 0x00;
  7413  136B  018E               	clrf	14	;volatile
  7414                           
  7415                           ;adcc.c: 72: ADUTHH = 0x00;
  7416  136C  018F               	clrf	15	;volatile
  7417                           
  7418                           ;adcc.c: 74: ADSTPTL = 0x00;
  7419  136D  0192               	clrf	18	;volatile
  7420                           
  7421                           ;adcc.c: 76: ADSTPTH = 0x00;
  7422  136E  0193               	clrf	19	;volatile
  7423                           
  7424                           ;adcc.c: 78: ADACCU = 0x00;
  7425  136F  0198               	clrf	24	;volatile
  7426                           
  7427                           ;adcc.c: 80: ADRPT = 0x00;
  7428  1370  019A               	clrf	26	;volatile
  7429                           
  7430                           ;adcc.c: 82: ADPCH = 0x00;
  7431  1371  019F               	clrf	31	;volatile
  7432                           
  7433                           ;adcc.c: 84: ADACQL = 0x00;
  7434  1372  0142               	movlb	2	; select bank2
  7435  1373  018C               	clrf	12	;volatile
  7436                           
  7437                           ;adcc.c: 86: ADACQH = 0x00;
  7438  1374  018D               	clrf	13	;volatile
  7439                           
  7440                           ;adcc.c: 88: ADCAP = 0x00;
  7441  1375  018E               	clrf	14	;volatile
  7442                           
  7443                           ;adcc.c: 90: ADPREL = 0x00;
  7444  1376  018F               	clrf	15	;volatile
  7445                           
  7446                           ;adcc.c: 92: ADPREH = 0x00;
  7447  1377  0190               	clrf	16	;volatile
  7448                           
  7449                           ;adcc.c: 94: ADCON1 = 0x00;
  7450  1378  0192               	clrf	18	;volatile
  7451                           
  7452                           ;adcc.c: 96: ADCON2 = 0x00;
  7453  1379  0193               	clrf	19	;volatile
  7454                           
  7455                           ;adcc.c: 98: ADCON3 = 0x00;
  7456  137A  0194               	clrf	20	;volatile
  7457                           
  7458                           ;adcc.c: 100: ADSTAT = 0x00;
  7459  137B  0195               	clrf	21	;volatile
  7460                           
  7461                           ;adcc.c: 102: ADREF = 0x03;
  7462  137C  3003               	movlw	3
  7463  137D  0096               	movwf	22	;volatile
  7464                           
  7465                           ;adcc.c: 104: ADACT = 0x00;
  7466  137E  0197               	clrf	23	;volatile
  7467                           
  7468                           ;adcc.c: 106: ADCLK = 0x00;
  7469  137F  0198               	clrf	24	;volatile
  7470                           
  7471                           ;adcc.c: 108: ADCON0 = 0x84;
  7472  1380  3084               	movlw	132
  7473  1381  0091               	movwf	17	;volatile
  7474  1382  0008               	return
  7475  1383                     __end_of_ADCC_Initialize:	
  7476                           
  7477                           	psect	intentry
  7478  0004                     __pintentry:	
  7479 ;; *************** function _INTERRUPT_InterruptManager *****************
  7480 ;; Defined at:
  7481 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  7482 ;; Parameters:    Size  Location     Type
  7483 ;;		None
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;		None
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  1    wreg      void 
  7488 ;; Registers used:
  7489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7498 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7499 ;;Total ram usage:        1 bytes
  7500 ;; Hardware stack levels used:    1
  7501 ;; Hardware stack levels required when called:    5
  7502 ;; This function calls:
  7503 ;;		_TMR0_ISR
  7504 ;; This function is called by:
  7505 ;;		Interrupt level 1
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509  0004                     _INTERRUPT_InterruptManager:	
  7510                           
  7511                           ;incstack = 0
  7512  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7513                           
  7514                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7515  0005  3180               	pagesel	$
  7516  0006  0140               	movlb	0	; select bank0
  7517  0007  087F               	movf	127,w
  7518  0008  00E5               	movwf	??_INTERRUPT_InterruptManager
  7519                           
  7520                           ;interrupt_manager.c: 54: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
  7521  0009  014E               	movlb	14	; select bank14
  7522  000A  1A96               	btfsc	22,5	;volatile
  7523  000B  1E8C               	btfss	12,5	;volatile
  7524  000C  280F               	goto	i1l329
  7525                           
  7526                           ;interrupt_manager.c: 55: {
  7527                           ;interrupt_manager.c: 56: TMR0_ISR();
  7528  000D  3197  2784         	fcall	_TMR0_ISR
  7529  000F                     i1l329:	
  7530  000F  0140               	movlb	0	; select bank0
  7531  0010  0865               	movf	??_INTERRUPT_InterruptManager,w
  7532  0011  00FF               	movwf	127
  7533  0012  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7534  0013  0009               	retfie
  7535  0014                     __end_of_INTERRUPT_InterruptManager:	
  7536                           
  7537                           	psect	text21
  7538  1784                     __ptext21:	
  7539 ;; *************** function _TMR0_ISR *****************
  7540 ;; Defined at:
  7541 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;		None
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;  sbuf           20   25[BANK1 ] unsigned char [20]
  7546 ;;  convertedVal    2   48[BANK1 ] unsigned int 
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      void 
  7549 ;; Registers used:
  7550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7557 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7558 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7559 ;;      Totals:         0       1      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7560 ;;Total ram usage:       26 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; Hardware stack levels required when called:    4
  7563 ;; This function calls:
  7564 ;;		_ADCC_GetConversionResult
  7565 ;;		_ADCC_IsConversionDone
  7566 ;;		_ADCC_StartConversion
  7567 ;;		___ftmul
  7568 ;;		___lwtoft
  7569 ;;		_nokia_clean_line
  7570 ;;		_nokia_refresh_line
  7571 ;;		_sprintf
  7572 ;;		i1_nokia_gotoxy
  7573 ;;		i1_nokia_printstr
  7574 ;; This function is called by:
  7575 ;;		_INTERRUPT_InterruptManager
  7576 ;; This function uses a non-reentrant model
  7577 ;;
  7578                           
  7579                           
  7580                           ;psect for function _TMR0_ISR
  7581  1784                     _TMR0_ISR:	
  7582                           
  7583                           ;tmr0.c: 139: PIR0bits.TMR0IF = 0;
  7584                           
  7585                           ;incstack = 0
  7586                           ; Regs used in _TMR0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7587  1784  014E               	movlb	14	; select bank14
  7588  1785  128C               	bcf	12,5	;volatile
  7589                           
  7590                           ;tmr0.c: 141: TMR0H = timer0ReloadVal16bit >> 8;
  7591  1786  0141               	movlb	1	; select bank1
  7592  1787  0853               	movf	(_timer0ReloadVal16bit+1)^(0+128),w	;volatile
  7593  1788  014B               	movlb	11	; select bank11
  7594  1789  009D               	movwf	29	;volatile
  7595                           
  7596                           ;tmr0.c: 142: TMR0L = (uint8_t) timer0ReloadVal16bit;
  7597  178A  0141               	movlb	1	; select bank1
  7598  178B  0852               	movf	_timer0ReloadVal16bit^(0+128),w	;volatile
  7599  178C  014B               	movlb	11	; select bank11
  7600  178D  009C               	movwf	28	;volatile
  7601                           
  7602                           ;tmr0.c: 147: if (state==0) {
  7603  178E  0141               	movlb	1	; select bank1
  7604  178F  0854               	movf	_state^(0+128),w
  7605  1790  0455               	iorwf	(_state+1)^(0+128),w
  7606  1791  1D03               	btfss	3,2
  7607  1792  2FFC               	goto	i1l3842
  7608                           
  7609                           ;tmr0.c: 150: state=1;
  7610  1793  3001               	movlw	1
  7611  1794  00D4               	movwf	_state^(0+128)
  7612  1795  3000               	movlw	0
  7613  1796  00D5               	movwf	(_state^(0+128)+1)
  7614                           
  7615                           ;tmr0.c: 152: uint16_t convertedValue;
  7616                           ;tmr0.c: 154: ADCC_StartConversion(6);
  7617  1797  3006               	movlw	6
  7618  1798  319F  2757  3197   	fcall	_ADCC_StartConversion
  7619  179B                     i1l3826:	
  7620                           ;tmr0.c: 155: while(!ADCC_IsConversionDone());
  7621                           
  7622  179B  319F  2750  3197   	fcall	_ADCC_IsConversionDone
  7623  179E  3A00               	xorlw	0
  7624  179F  1903               	skipnz
  7625  17A0  2F9B               	goto	i1l3826
  7626                           
  7627                           ;tmr0.c: 156: convertedValue = ADCC_GetConversionResult();
  7628  17A1  319F  274A  3197   	fcall	_ADCC_GetConversionResult
  7629  17A4  0871               	movf	?_ADCC_GetConversionResult+1,w
  7630  17A5  0141               	movlb	1	; select bank1
  7631  17A6  00D1               	movwf	(TMR0_ISR@convertedValue+1)^(0+128)
  7632  17A7  0870               	movf	?_ADCC_GetConversionResult,w
  7633  17A8  00D0               	movwf	TMR0_ISR@convertedValue^(0+128)
  7634                           
  7635                           ;tmr0.c: 158: char sbuf[20];
  7636                           ;tmr0.c: 159: sprintf(&sbuf[0],"%#7.3f uV rms",convertedValue*0.025);
  7637  17A9  30CD               	movlw	205
  7638  17AA  0140               	movlb	0	; select bank0
  7639  17AB  00A8               	movwf	___ftmul@f1
  7640  17AC  30CC               	movlw	204
  7641  17AD  00A9               	movwf	___ftmul@f1+1
  7642  17AE  303C               	movlw	60
  7643  17AF  00AA               	movwf	___ftmul@f1+2
  7644  17B0  0141               	movlb	1	; select bank1
  7645  17B1  0851               	movf	(TMR0_ISR@convertedValue+1)^(0+128),w
  7646  17B2  00F9               	movwf	___lwtoft@c+1
  7647  17B3  0850               	movf	TMR0_ISR@convertedValue^(0+128),w
  7648  17B4  00F8               	movwf	___lwtoft@c
  7649  17B5  3192  22F8  3197   	fcall	___lwtoft
  7650  17B8  0878               	movf	?___lwtoft,w
  7651  17B9  0140               	movlb	0	; select bank0
  7652  17BA  00AB               	movwf	___ftmul@f2
  7653  17BB  0879               	movf	?___lwtoft+1,w
  7654  17BC  00AC               	movwf	___ftmul@f2+1
  7655  17BD  087A               	movf	?___lwtoft+2,w
  7656  17BE  00AD               	movwf	___ftmul@f2+2
  7657  17BF  3188  20C2  3197   	fcall	___ftmul
  7658  17C2  0140               	movlb	0	; select bank0
  7659  17C3  0828               	movf	?___ftmul,w
  7660  17C4  0141               	movlb	1	; select bank1
  7661  17C5  00CD               	movwf	_TMR0_ISR$1453^(0+128)
  7662  17C6  0140               	movlb	0	; select bank0
  7663  17C7  0829               	movf	?___ftmul+1,w
  7664  17C8  0141               	movlb	1	; select bank1
  7665  17C9  00CE               	movwf	(_TMR0_ISR$1453+1)^(0+128)
  7666  17CA  0140               	movlb	0	; select bank0
  7667  17CB  082A               	movf	?___ftmul+2,w
  7668  17CC  0141               	movlb	1	; select bank1
  7669  17CD  00CF               	movwf	(_TMR0_ISR$1453+2)^(0+128)
  7670                           
  7671                           ;tmr0.c: 158: char sbuf[20];
  7672                           ;tmr0.c: 159: sprintf(&sbuf[0],"%#7.3f uV rms",convertedValue*0.025);
  7673  17CE  3000               	movlw	low (STR_1| (0+32768))
  7674  17CF  0140               	movlb	0	; select bank0
  7675  17D0  00D9               	movwf	sprintf@f
  7676  17D1  30A0               	movlw	high (STR_1| (0+32768))
  7677  17D2  00DA               	movwf	sprintf@f+1
  7678  17D3  0141               	movlb	1	; select bank1
  7679  17D4  084D               	movf	_TMR0_ISR$1453^(0+128),w
  7680  17D5  0140               	movlb	0	; select bank0
  7681  17D6  00DB               	movwf	?_sprintf+2
  7682  17D7  0141               	movlb	1	; select bank1
  7683  17D8  084E               	movf	(_TMR0_ISR$1453+1)^(0+128),w
  7684  17D9  0140               	movlb	0	; select bank0
  7685  17DA  00DC               	movwf	?_sprintf+3
  7686  17DB  0141               	movlb	1	; select bank1
  7687  17DC  084F               	movf	(_TMR0_ISR$1453+2)^(0+128),w
  7688  17DD  0140               	movlb	0	; select bank0
  7689  17DE  00DD               	movwf	?_sprintf+4
  7690  17DF  30B9               	movlw	(low (TMR0_ISR@sbuf| 0))& (0+255)
  7691  17E0  3180  2039  3197   	fcall	_sprintf
  7692                           
  7693                           ;tmr0.c: 160: nokia_clean_line(2);
  7694  17E3  3002               	movlw	2
  7695  17E4  3194  247F  3197   	fcall	_nokia_clean_line
  7696                           
  7697                           ;tmr0.c: 161: nokia_gotoxy(0,2);
  7698  17E7  3002               	movlw	2
  7699  17E8  0140               	movlb	0	; select bank0
  7700  17E9  00E4               	movwf	??_TMR0_ISR
  7701  17EA  0864               	movf	??_TMR0_ISR,w
  7702  17EB  00F0               	movwf	i1nokia_gotoxy@y
  7703  17EC  3000               	movlw	0
  7704  17ED  3193  234D  3197   	fcall	i1_nokia_gotoxy
  7705                           
  7706                           ;tmr0.c: 162: nokia_printstr(&sbuf[0]);
  7707  17F0  30B9               	movlw	low TMR0_ISR@sbuf
  7708  17F1  0140               	movlb	0	; select bank0
  7709  17F2  00B6               	movwf	i1nokia_printstr@message
  7710  17F3  3000               	movlw	high TMR0_ISR@sbuf
  7711  17F4  00B7               	movwf	i1nokia_printstr@message+1
  7712  17F5  3193  231F  3197   	fcall	i1_nokia_printstr
  7713                           
  7714                           ;tmr0.c: 163: nokia_refresh_line(2);
  7715  17F8  3002               	movlw	2
  7716  17F9  3196  2661         	fcall	_nokia_refresh_line
  7717                           
  7718                           ;tmr0.c: 164: } else {
  7719  17FB  0008               	return
  7720  17FC                     i1l3842:	
  7721                           
  7722                           ;tmr0.c: 168: state=0;
  7723  17FC  0141               	movlb	1	; select bank1
  7724  17FD  01D4               	clrf	_state^(0+128)
  7725  17FE  01D5               	clrf	(_state+1)^(0+128)
  7726  17FF  0008               	return
  7727  1800                     __end_of_TMR0_ISR:	
  7728                           
  7729                           	psect	text22
  7730  131F                     __ptext22:	
  7731 ;; *************** function i1_nokia_printstr *****************
  7732 ;; Defined at:
  7733 ;;		line 486 in file "Nokia_5110.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;  message         2   22[BANK0 ] PTR unsigned char 
  7736 ;;		 -> main@str_greeting(13), TMR0_ISR@sbuf(20), 
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;		None
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1    wreg      void 
  7741 ;; Registers used:
  7742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7748 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7751 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7752 ;;Total ram usage:        2 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; Hardware stack levels required when called:    2
  7755 ;; This function calls:
  7756 ;;		i1_nokia_printchar
  7757 ;; This function is called by:
  7758 ;;		_TMR0_ISR
  7759 ;; This function uses a non-reentrant model
  7760 ;;
  7761                           
  7762                           
  7763                           ;psect for function i1_nokia_printstr
  7764  131F                     i1_nokia_printstr:	
  7765  131F                     i1l3812:	
  7766                           ;Nokia_5110.c: 488: for(; *message != '\0';message++){
  7767                           
  7768                           ;incstack = 0
  7769                           ; Regs used in i1_nokia_printstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7770                           
  7771  131F  0140               	movlb	0	; select bank0
  7772  1320  0836               	movf	i1nokia_printstr@message,w
  7773  1321  0086               	movwf	6
  7774  1322  0837               	movf	i1nokia_printstr@message+1,w
  7775  1323  0087               	movwf	7
  7776  1324  0801               	movf	1,w
  7777  1325  1903               	btfsc	3,2
  7778  1326  0008               	return
  7779                           
  7780                           ;Nokia_5110.c: 489: nokia_printchar(*message);
  7781  1327  0140               	movlb	0	; select bank0
  7782  1328  0836               	movf	i1nokia_printstr@message,w
  7783  1329  0086               	movwf	6
  7784  132A  0837               	movf	i1nokia_printstr@message+1,w
  7785  132B  0087               	movwf	7
  7786  132C  0801               	movf	1,w
  7787  132D  318A  22E3  3193   	fcall	i1_nokia_printchar
  7788  1330  3001               	movlw	1
  7789  1331  0140               	movlb	0	; select bank0
  7790  1332  07B6               	addwf	i1nokia_printstr@message,f
  7791  1333  3000               	movlw	0
  7792  1334  3DB7               	addwfc	i1nokia_printstr@message+1,f
  7793  1335  2B1F               	goto	i1l3812
  7794  1336                     __end_ofi1_nokia_printstr:	
  7795                           
  7796                           	psect	text23
  7797  0AE3                     __ptext23:	
  7798 ;; *************** function i1_nokia_printchar *****************
  7799 ;; Defined at:
  7800 ;;		line 455 in file "Nokia_5110.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;  c               1    wreg     unsigned char 
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;  c               1   21[BANK0 ] unsigned char 
  7805 ;;  nokia_printc    1   20[BANK0 ] unsigned char 
  7806 ;;  nokia_printc    1   19[BANK0 ] unsigned char 
  7807 ;;  nokia_printc    1   18[BANK0 ] unsigned char 
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  1    wreg      void 
  7810 ;; Registers used:
  7811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7818 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7819 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7820 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7821 ;;Total ram usage:       14 bytes
  7822 ;; Hardware stack levels used:    1
  7823 ;; Hardware stack levels required when called:    1
  7824 ;; This function calls:
  7825 ;;		i1___bmul
  7826 ;;		i1___wmul
  7827 ;; This function is called by:
  7828 ;;		i1_nokia_printstr
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           
  7833                           ;psect for function i1_nokia_printchar
  7834  0AE3                     i1_nokia_printchar:	
  7835                           
  7836                           ;incstack = 0
  7837                           ; Regs used in i1_nokia_printchar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7838                           ;i1nokia_printchar@c stored from wreg
  7839  0AE3  0140               	movlb	0	; select bank0
  7840  0AE4  00B5               	movwf	i1nokia_printchar@c
  7841                           
  7842                           ;Nokia_5110.c: 457: char char_row,char_pos,char_data;
  7843                           ;Nokia_5110.c: 459: if (c<0x20) return;
  7844  0AE5  3020               	movlw	32
  7845  0AE6  0235               	subwf	i1nokia_printchar@c,w
  7846  0AE7  1C03               	btfss	3,0
  7847  0AE8  0008               	return
  7848                           
  7849                           ;Nokia_5110.c: 460: if (c>0x7f) return;
  7850  0AE9  3080               	movlw	128
  7851  0AEA  0235               	subwf	i1nokia_printchar@c,w
  7852  0AEB  1803               	btfsc	3,0
  7853  0AEC  0008               	return
  7854                           
  7855                           ;Nokia_5110.c: 462: for (char_row=0;char_row<5;char_row++)
  7856  0AED  01B4               	clrf	i1nokia_printchar@char_row
  7857  0AEE  3005               	movlw	5
  7858  0AEF  0234               	subwf	i1nokia_printchar@char_row,w
  7859  0AF0  1803               	btfsc	3,0
  7860  0AF1  2B7D               	goto	i1l3194
  7861  0AF2                     i1l3164:	
  7862                           
  7863                           ;Nokia_5110.c: 463: {
  7864                           ;Nokia_5110.c: 464: if (idx>83){
  7865  0AF2  3054               	movlw	84
  7866  0AF3  0142               	movlb	2	; select bank2
  7867  0AF4  0254               	subwf	_idx^(0+256),w
  7868  0AF5  1C03               	skipc
  7869  0AF6  2B02               	goto	i1l3174
  7870                           
  7871                           ;Nokia_5110.c: 465: idx=0;
  7872  0AF7  01D4               	clrf	_idx^(0+256)
  7873                           
  7874                           ;Nokia_5110.c: 466: idy++;
  7875  0AF8  3001               	movlw	1
  7876  0AF9  0140               	movlb	0	; select bank0
  7877  0AFA  00A8               	movwf	??i1_nokia_printchar
  7878  0AFB  0828               	movf	??i1_nokia_printchar,w
  7879  0AFC  0142               	movlb	2	; select bank2
  7880  0AFD  07D3               	addwf	_idy^(0+256),f
  7881                           
  7882                           ;Nokia_5110.c: 467: if (idy>5)
  7883  0AFE  3006               	movlw	6
  7884  0AFF  0253               	subwf	_idy^(0+256),w
  7885  0B00  1803               	btfsc	3,0
  7886                           
  7887                           ;Nokia_5110.c: 468: idy=0;
  7888  0B01  01D3               	clrf	_idy^(0+256)
  7889  0B02                     i1l3174:	
  7890                           
  7891                           ;Nokia_5110.c: 469: }
  7892                           ;Nokia_5110.c: 470: if (c<0x50){
  7893  0B02  3050               	movlw	80
  7894  0B03  0140               	movlb	0	; select bank0
  7895  0B04  0235               	subwf	i1nokia_printchar@c,w
  7896  0B05  1803               	skipnc
  7897  0B06  2B23               	goto	i1l3180
  7898                           
  7899                           ;Nokia_5110.c: 471: char_pos=((c-0x20)*5);
  7900  0B07  3005               	movlw	5
  7901  0B08  00A8               	movwf	??i1_nokia_printchar
  7902  0B09  0828               	movf	??i1_nokia_printchar,w
  7903  0B0A  00F0               	movwf	i1___bmul@multiplicand
  7904  0B0B  0835               	movf	i1nokia_printchar@c,w
  7905  0B0C  3EE0               	addlw	224
  7906  0B0D  319F  27DD  318A   	fcall	i1___bmul
  7907  0B10  0140               	movlb	0	; select bank0
  7908  0B11  00A9               	movwf	??i1_nokia_printchar+1
  7909  0B12  0829               	movf	??i1_nokia_printchar+1,w
  7910  0B13  00B3               	movwf	i1nokia_printchar@char_pos
  7911                           
  7912                           ;Nokia_5110.c: 472: char_data=TABLA1[(char_pos+char_row)];
  7913  0B14  0833               	movf	i1nokia_printchar@char_pos,w
  7914  0B15  0734               	addwf	i1nokia_printchar@char_row,w
  7915  0B16  00A8               	movwf	??i1_nokia_printchar
  7916  0B17  01A9               	clrf	??i1_nokia_printchar+1
  7917  0B18  0DA9               	rlf	??i1_nokia_printchar+1,f
  7918  0B19  30F4               	movlw	low (_TABLA1| (0+32768))
  7919  0B1A  0728               	addwf	??i1_nokia_printchar,w
  7920  0B1B  0084               	movwf	4
  7921  0B1C  3091               	movlw	high (_TABLA1| (0+32768))
  7922  0B1D  3D29               	addwfc	??i1_nokia_printchar+1,w
  7923  0B1E  0085               	movwf	5
  7924  0B1F  0800               	movf	0,w	;code access
  7925  0B20  00AA               	movwf	??i1_nokia_printchar+2
  7926  0B21  082A               	movf	??i1_nokia_printchar+2,w
  7927  0B22  00B2               	movwf	i1nokia_printchar@char_data
  7928  0B23                     i1l3180:	
  7929                           
  7930                           ;Nokia_5110.c: 473: }
  7931                           ;Nokia_5110.c: 474: if (c>0x4f){
  7932  0B23  3050               	movlw	80
  7933  0B24  0235               	subwf	i1nokia_printchar@c,w
  7934  0B25  1C03               	skipc
  7935  0B26  2B43               	goto	i1l3186
  7936                           
  7937                           ;Nokia_5110.c: 475: char_pos=((c-0x50)*5);
  7938  0B27  3005               	movlw	5
  7939  0B28  00A8               	movwf	??i1_nokia_printchar
  7940  0B29  0828               	movf	??i1_nokia_printchar,w
  7941  0B2A  00F0               	movwf	i1___bmul@multiplicand
  7942  0B2B  0835               	movf	i1nokia_printchar@c,w
  7943  0B2C  3EB0               	addlw	176
  7944  0B2D  319F  27DD  318A   	fcall	i1___bmul
  7945  0B30  0140               	movlb	0	; select bank0
  7946  0B31  00A9               	movwf	??i1_nokia_printchar+1
  7947  0B32  0829               	movf	??i1_nokia_printchar+1,w
  7948  0B33  00B3               	movwf	i1nokia_printchar@char_pos
  7949                           
  7950                           ;Nokia_5110.c: 476: char_data=TABLA2[(char_pos+char_row)];
  7951  0B34  0833               	movf	i1nokia_printchar@char_pos,w
  7952  0B35  0734               	addwf	i1nokia_printchar@char_row,w
  7953  0B36  00A8               	movwf	??i1_nokia_printchar
  7954  0B37  01A9               	clrf	??i1_nokia_printchar+1
  7955  0B38  0DA9               	rlf	??i1_nokia_printchar+1,f
  7956  0B39  3004               	movlw	low (_TABLA2| (0+32768))
  7957  0B3A  0728               	addwf	??i1_nokia_printchar,w
  7958  0B3B  0084               	movwf	4
  7959  0B3C  3091               	movlw	high (_TABLA2| (0+32768))
  7960  0B3D  3D29               	addwfc	??i1_nokia_printchar+1,w
  7961  0B3E  0085               	movwf	5
  7962  0B3F  0800               	movf	0,w	;code access
  7963  0B40  00AA               	movwf	??i1_nokia_printchar+2
  7964  0B41  082A               	movf	??i1_nokia_printchar+2,w
  7965  0B42  00B2               	movwf	i1nokia_printchar@char_data
  7966  0B43                     i1l3186:	
  7967                           
  7968                           ;Nokia_5110.c: 477: }
  7969                           ;Nokia_5110.c: 478: buffer[idx][idy]=char_data;
  7970  0B43  0142               	movlb	2	; select bank2
  7971  0B44  0853               	movf	_idy^(0+256),w
  7972  0B45  0140               	movlb	0	; select bank0
  7973  0B46  00A8               	movwf	??i1_nokia_printchar
  7974  0B47  01A9               	clrf	??i1_nokia_printchar+1
  7975  0B48  0142               	movlb	2	; select bank2
  7976  0B49  0854               	movf	_idx^(0+256),w
  7977  0B4A  0140               	movlb	0	; select bank0
  7978  0B4B  00AA               	movwf	??i1_nokia_printchar+2
  7979  0B4C  01AB               	clrf	??i1_nokia_printchar+3
  7980  0B4D  082A               	movf	??i1_nokia_printchar+2,w
  7981  0B4E  00A4               	movwf	i1___wmul@multiplier
  7982  0B4F  082B               	movf	??i1_nokia_printchar+3,w
  7983  0B50  00A5               	movwf	i1___wmul@multiplier+1
  7984  0B51  3006               	movlw	6
  7985  0B52  00A6               	movwf	i1___wmul@multiplicand
  7986  0B53  3000               	movlw	0
  7987  0B54  00A7               	movwf	i1___wmul@multiplicand+1
  7988  0B55  3193  239E  318A   	fcall	i1___wmul
  7989  0B58  30F8               	movlw	248
  7990  0B59  0140               	movlb	0	; select bank0
  7991  0B5A  00AC               	movwf	??i1_nokia_printchar+4
  7992  0B5B  3025               	movlw	37
  7993  0B5C  00AD               	movwf	??i1_nokia_printchar+5
  7994  0B5D  0824               	movf	?i1___wmul,w
  7995  0B5E  072C               	addwf	??i1_nokia_printchar+4,w
  7996  0B5F  00AE               	movwf	??i1_nokia_printchar+6
  7997  0B60  0825               	movf	?i1___wmul+1,w
  7998  0B61  3D2D               	addwfc	??i1_nokia_printchar+5,w
  7999  0B62  00AF               	movwf	??i1_nokia_printchar+7
  8000  0B63  0828               	movf	??i1_nokia_printchar,w
  8001  0B64  072E               	addwf	??i1_nokia_printchar+6,w
  8002  0B65  00B0               	movwf	??i1_nokia_printchar+8
  8003  0B66  0829               	movf	??i1_nokia_printchar+1,w
  8004  0B67  3D2F               	addwfc	??i1_nokia_printchar+7,w
  8005  0B68  00B1               	movwf	??i1_nokia_printchar+9
  8006  0B69  0830               	movf	??i1_nokia_printchar+8,w
  8007  0B6A  0086               	movwf	6
  8008  0B6B  0831               	movf	??i1_nokia_printchar+9,w
  8009  0B6C  0087               	movwf	7
  8010  0B6D  0832               	movf	i1nokia_printchar@char_data,w
  8011  0B6E  0081               	movwf	1
  8012                           
  8013                           ;Nokia_5110.c: 479: idx++;
  8014  0B6F  3001               	movlw	1
  8015  0B70  00A8               	movwf	??i1_nokia_printchar
  8016  0B71  0828               	movf	??i1_nokia_printchar,w
  8017  0B72  0142               	movlb	2	; select bank2
  8018  0B73  07D4               	addwf	_idx^(0+256),f
  8019  0B74  3001               	movlw	1
  8020  0B75  0140               	movlb	0	; select bank0
  8021  0B76  00A8               	movwf	??i1_nokia_printchar
  8022  0B77  0828               	movf	??i1_nokia_printchar,w
  8023  0B78  07B4               	addwf	i1nokia_printchar@char_row,f
  8024  0B79  3005               	movlw	5
  8025  0B7A  0234               	subwf	i1nokia_printchar@char_row,w
  8026  0B7B  1C03               	skipc
  8027  0B7C  2AF2               	goto	i1l3164
  8028  0B7D                     i1l3194:	
  8029                           
  8030                           ;Nokia_5110.c: 480: }
  8031                           ;Nokia_5110.c: 481: buffer[idx][idy]=0x00;
  8032  0B7D  0142               	movlb	2	; select bank2
  8033  0B7E  0853               	movf	_idy^(0+256),w
  8034  0B7F  0140               	movlb	0	; select bank0
  8035  0B80  00A8               	movwf	??i1_nokia_printchar
  8036  0B81  01A9               	clrf	??i1_nokia_printchar+1
  8037  0B82  0142               	movlb	2	; select bank2
  8038  0B83  0854               	movf	_idx^(0+256),w
  8039  0B84  0140               	movlb	0	; select bank0
  8040  0B85  00AA               	movwf	??i1_nokia_printchar+2
  8041  0B86  01AB               	clrf	??i1_nokia_printchar+3
  8042  0B87  082A               	movf	??i1_nokia_printchar+2,w
  8043  0B88  00A4               	movwf	i1___wmul@multiplier
  8044  0B89  082B               	movf	??i1_nokia_printchar+3,w
  8045  0B8A  00A5               	movwf	i1___wmul@multiplier+1
  8046  0B8B  3006               	movlw	6
  8047  0B8C  00A6               	movwf	i1___wmul@multiplicand
  8048  0B8D  3000               	movlw	0
  8049  0B8E  00A7               	movwf	i1___wmul@multiplicand+1
  8050  0B8F  3193  239E         	fcall	i1___wmul
  8051  0B91  30F8               	movlw	248
  8052  0B92  0140               	movlb	0	; select bank0
  8053  0B93  00AC               	movwf	??i1_nokia_printchar+4
  8054  0B94  3025               	movlw	37
  8055  0B95  00AD               	movwf	??i1_nokia_printchar+5
  8056  0B96  0824               	movf	?i1___wmul,w
  8057  0B97  072C               	addwf	??i1_nokia_printchar+4,w
  8058  0B98  00AE               	movwf	??i1_nokia_printchar+6
  8059  0B99  0825               	movf	?i1___wmul+1,w
  8060  0B9A  3D2D               	addwfc	??i1_nokia_printchar+5,w
  8061  0B9B  00AF               	movwf	??i1_nokia_printchar+7
  8062  0B9C  0828               	movf	??i1_nokia_printchar,w
  8063  0B9D  072E               	addwf	??i1_nokia_printchar+6,w
  8064  0B9E  0086               	movwf	6
  8065  0B9F  0829               	movf	??i1_nokia_printchar+1,w
  8066  0BA0  3D2F               	addwfc	??i1_nokia_printchar+7,w
  8067  0BA1  0087               	movwf	7
  8068  0BA2  0181               	clrf	1
  8069                           
  8070                           ;Nokia_5110.c: 482: idx++;
  8071  0BA3  3001               	movlw	1
  8072  0BA4  00A8               	movwf	??i1_nokia_printchar
  8073  0BA5  0828               	movf	??i1_nokia_printchar,w
  8074  0BA6  0142               	movlb	2	; select bank2
  8075  0BA7  07D4               	addwf	_idx^(0+256),f
  8076  0BA8  0008               	return
  8077  0BA9                     __end_ofi1_nokia_printchar:	
  8078                           
  8079                           	psect	text24
  8080  1FDD                     __ptext24:	
  8081 ;; *************** function i1___bmul *****************
  8082 ;; Defined at:
  8083 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;  multiplier      1    wreg     unsigned char 
  8086 ;;  multiplicand    1    0[COMMON] unsigned char 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;  multiplier      1    3[COMMON] unsigned char 
  8089 ;;  __bmul          1    2[COMMON] unsigned char 
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  1    wreg      unsigned char 
  8092 ;; Registers used:
  8093 ;;		wreg, status,2, status,0
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8099 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8100 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8101 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8102 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8103 ;;Total ram usage:        4 bytes
  8104 ;; Hardware stack levels used:    1
  8105 ;; This function calls:
  8106 ;;		Nothing
  8107 ;; This function is called by:
  8108 ;;		i1_nokia_printchar
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112                           
  8113                           ;psect for function i1___bmul
  8114  1FDD                     i1___bmul:	
  8115                           
  8116                           ;incstack = 0
  8117                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  8118                           ;i1___bmul@multiplier stored from wreg
  8119  1FDD  00F3               	movwf	i1___bmul@multiplier
  8120  1FDE  01F2               	clrf	i1___bmul@product
  8121  1FDF                     i1l2778:	
  8122  1FDF  1C73               	btfss	i1___bmul@multiplier,0
  8123  1FE0  2FE5               	goto	i1l2782
  8124  1FE1  0870               	movf	i1___bmul@multiplicand,w
  8125  1FE2  00F1               	movwf	??i1___bmul
  8126  1FE3  0871               	movf	??i1___bmul,w
  8127  1FE4  07F2               	addwf	i1___bmul@product,f
  8128  1FE5                     i1l2782:	
  8129  1FE5  1003               	clrc
  8130  1FE6  0DF0               	rlf	i1___bmul@multiplicand,f
  8131  1FE7  1003               	clrc
  8132  1FE8  0CF3               	rrf	i1___bmul@multiplier,f
  8133  1FE9  0873               	movf	i1___bmul@multiplier,w
  8134  1FEA  1D03               	btfss	3,2
  8135  1FEB  2FDF               	goto	i1l2778
  8136  1FEC  0872               	movf	i1___bmul@product,w
  8137  1FED  0008               	return
  8138  1FEE                     __end_ofi1___bmul:	
  8139                           
  8140                           	psect	text25
  8141  134D                     __ptext25:	
  8142 ;; *************** function i1_nokia_gotoxy *****************
  8143 ;; Defined at:
  8144 ;;		line 436 in file "Nokia_5110.c"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;  x               1    wreg     unsigned char 
  8147 ;;  y               1    0[COMMON] unsigned char 
  8148 ;; Auto vars:     Size  Location     Type
  8149 ;;  x               1    2[COMMON] unsigned char 
  8150 ;; Return value:  Size  Location     Type
  8151 ;;                  1    wreg      void 
  8152 ;; Registers used:
  8153 ;;		wreg
  8154 ;; Tracked objects:
  8155 ;;		On entry : 0/0
  8156 ;;		On exit  : 0/0
  8157 ;;		Unchanged: 0/0
  8158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8159 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8162 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8163 ;;Total ram usage:        3 bytes
  8164 ;; Hardware stack levels used:    1
  8165 ;; This function calls:
  8166 ;;		Nothing
  8167 ;; This function is called by:
  8168 ;;		_TMR0_ISR
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           
  8173                           ;psect for function i1_nokia_gotoxy
  8174  134D                     i1_nokia_gotoxy:	
  8175                           
  8176                           ;incstack = 0
  8177                           ; Regs used in i1_nokia_gotoxy: [wreg]
  8178                           ;i1nokia_gotoxy@x stored from wreg
  8179  134D  00F2               	movwf	i1nokia_gotoxy@x
  8180                           
  8181                           ;Nokia_5110.c: 438: if(x>83)
  8182  134E  3054               	movlw	84
  8183  134F  0272               	subwf	i1nokia_gotoxy@x,w
  8184  1350  1C03               	skipc
  8185  1351  2B56               	goto	i1l463
  8186                           
  8187                           ;Nokia_5110.c: 439: x=83;
  8188  1352  3053               	movlw	83
  8189  1353  00F1               	movwf	??i1_nokia_gotoxy
  8190  1354  0871               	movf	??i1_nokia_gotoxy,w
  8191  1355  00F2               	movwf	i1nokia_gotoxy@x
  8192  1356                     i1l463:	
  8193                           
  8194                           ;Nokia_5110.c: 440: if(y>5)
  8195  1356  3006               	movlw	6
  8196  1357  0270               	subwf	i1nokia_gotoxy@y,w
  8197  1358  1C03               	skipc
  8198  1359  2B5E               	goto	i1l464
  8199                           
  8200                           ;Nokia_5110.c: 441: y=5;
  8201  135A  3005               	movlw	5
  8202  135B  00F1               	movwf	??i1_nokia_gotoxy
  8203  135C  0871               	movf	??i1_nokia_gotoxy,w
  8204  135D  00F0               	movwf	i1nokia_gotoxy@y
  8205  135E                     i1l464:	
  8206                           
  8207                           ;Nokia_5110.c: 442: idx=x;
  8208  135E  0872               	movf	i1nokia_gotoxy@x,w
  8209  135F  00F1               	movwf	??i1_nokia_gotoxy
  8210  1360  0871               	movf	??i1_nokia_gotoxy,w
  8211  1361  0142               	movlb	2	; select bank2
  8212  1362  00D4               	movwf	_idx^(0+256)
  8213                           
  8214                           ;Nokia_5110.c: 443: idy=y;
  8215  1363  0870               	movf	i1nokia_gotoxy@y,w
  8216  1364  00F1               	movwf	??i1_nokia_gotoxy
  8217  1365  0871               	movf	??i1_nokia_gotoxy,w
  8218  1366  00D3               	movwf	_idy^(0+256)
  8219  1367  0008               	return
  8220  1368                     __end_ofi1_nokia_gotoxy:	
  8221                           
  8222                           	psect	text26
  8223  0039                     __ptext26:	
  8224 ;; *************** function _sprintf *****************
  8225 ;; Defined at:
  8226 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;  sp              1    wreg     PTR unsigned char 
  8229 ;;		 -> TMR0_ISR@sbuf(20), 
  8230 ;;  f               2   57[BANK0 ] PTR const unsigned char 
  8231 ;;		 -> STR_1(14), 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;  sp              1   18[BANK1 ] PTR unsigned char 
  8234 ;;		 -> TMR0_ISR@sbuf(20), 
  8235 ;;  tmpval          4   12[BANK1 ] struct .
  8236 ;;  val             4    4[BANK1 ] unsigned long 
  8237 ;;  fval            3   19[BANK1 ] unsigned long 
  8238 ;;  prec            2   22[BANK1 ] int 
  8239 ;;  exp             2   16[BANK1 ] int 
  8240 ;;  flag            2   10[BANK1 ] unsigned short 
  8241 ;;  width           2    8[BANK1 ] int 
  8242 ;;  cp              2    0        PTR const unsigned char 
  8243 ;;  len             2    0        unsigned int 
  8244 ;;  c               1   24[BANK1 ] char 
  8245 ;;  ap              1    3[BANK1 ] PTR void [1]
  8246 ;;		 -> ?_sprintf(2), 
  8247 ;;  d               1    0        unsigned char 
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  2   57[BANK0 ] int 
  8250 ;; Registers used:
  8251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8257 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8258 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8259 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8260 ;;      Totals:         0      11      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8261 ;;Total ram usage:       36 bytes
  8262 ;; Hardware stack levels used:    1
  8263 ;; Hardware stack levels required when called:    3
  8264 ;; This function calls:
  8265 ;;		___awdiv
  8266 ;;		___ftadd
  8267 ;;		___ftge
  8268 ;;		___ftmul
  8269 ;;		___ftneg
  8270 ;;		___ftsub
  8271 ;;		___fttol
  8272 ;;		___lldiv
  8273 ;;		___llmod
  8274 ;;		___lltoft
  8275 ;;		__div_to_l_
  8276 ;;		__tdiv_to_l_
  8277 ;;		_fround
  8278 ;;		_isdigit
  8279 ;;		_scale
  8280 ;;		i1___wmul
  8281 ;; This function is called by:
  8282 ;;		_TMR0_ISR
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           
  8287                           ;psect for function _sprintf
  8288  0039                     _sprintf:	
  8289                           
  8290                           ;incstack = 0
  8291                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8292                           ;sprintf@sp stored from wreg
  8293  0039  0141               	movlb	1	; select bank1
  8294  003A  00B2               	movwf	sprintf@sp^(0+128)
  8295                           
  8296                           ;doprnt.c: 494: va_list ap;
  8297                           ;doprnt.c: 499: signed char c;
  8298                           ;doprnt.c: 501: int width;
  8299                           ;doprnt.c: 504: int prec;
  8300                           ;doprnt.c: 508: unsigned short flag;
  8301                           ;doprnt.c: 515: char d;
  8302                           ;doprnt.c: 516: double fval;
  8303                           ;doprnt.c: 517: int exp;
  8304                           ;doprnt.c: 523: union {
  8305                           ;doprnt.c: 524: unsigned long vd;
  8306                           ;doprnt.c: 525: double integ;
  8307                           ;doprnt.c: 526: } tmpval;
  8308                           ;doprnt.c: 528: unsigned long val;
  8309                           ;doprnt.c: 529: unsigned len;
  8310                           ;doprnt.c: 530: const char * cp;
  8311                           ;doprnt.c: 533: *ap = __va_start();
  8312  003B  305B               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  8313  003C  0140               	movlb	0	; select bank0
  8314  003D  00DE               	movwf	??_sprintf
  8315  003E  085E               	movf	??_sprintf,w
  8316  003F  0141               	movlb	1	; select bank1
  8317  0040  00A3               	movwf	sprintf@ap^(0+128)
  8318  0041                     i1l3524:	
  8319                           ;doprnt.c: 536: while(c = *f++) {
  8320                           
  8321  0041  0140               	movlb	0	; select bank0
  8322  0042  085A               	movf	sprintf@f+1,w
  8323  0043  00DF               	movwf	??_sprintf+1
  8324  0044  0859               	movf	sprintf@f,w
  8325  0045  00DE               	movwf	??_sprintf
  8326  0046  0AD9               	incf	sprintf@f,f
  8327  0047  1903               	skipnz
  8328  0048  0ADA               	incf	sprintf@f+1,f
  8329  0049  085E               	movf	??_sprintf,w
  8330  004A  0084               	movwf	4
  8331  004B  085F               	movf	??_sprintf+1,w
  8332  004C  0085               	movwf	5
  8333  004D  0800               	movf	0,w	;code access
  8334  004E  00E0               	movwf	??_sprintf+2
  8335  004F  0860               	movf	??_sprintf+2,w
  8336  0050  0141               	movlb	1	; select bank1
  8337  0051  00B8               	movwf	sprintf@c^(0+128)
  8338  0052  0838               	movf	sprintf@c^(0+128),w
  8339  0053  1903               	btfsc	3,2
  8340  0054  2E4F               	goto	i1l3526
  8341                           
  8342                           ;doprnt.c: 538: if(c != '%')
  8343  0055  3025               	movlw	37
  8344  0056  0638               	xorwf	sprintf@c^(0+128),w
  8345  0057  1903               	btfsc	3,2
  8346  0058  285C               	goto	i1l3272
  8347                           
  8348                           ;doprnt.c: 540: {
  8349                           ;doprnt.c: 541: ((*sp++ = (c)));
  8350  0059  0838               	movf	sprintf@c^(0+128),w
  8351  005A  0140               	movlb	0	; select bank0
  8352  005B  2E41               	goto	L10
  8353  005C                     i1l3272:	
  8354                           ;doprnt.c: 542: continue;
  8355                           
  8356                           
  8357                           ;doprnt.c: 543: }
  8358                           ;doprnt.c: 546: width = 0;
  8359  005C  01A8               	clrf	sprintf@width^(0+128)
  8360  005D  01A9               	clrf	(sprintf@width+1)^(0+128)
  8361                           
  8362                           ;doprnt.c: 548: flag = 0;
  8363  005E  01AA               	clrf	sprintf@flag^(0+128)
  8364  005F  01AB               	clrf	(sprintf@flag+1)^(0+128)
  8365                           
  8366                           ;doprnt.c: 551: switch(*f) {
  8367                           
  8368                           ;doprnt.c: 550: for(;;) {
  8369  0060  2868               	goto	i1l3278
  8370  0061                     i1l537:	
  8371                           ;doprnt.c: 573: case '#':
  8372                           
  8373                           
  8374                           ;doprnt.c: 574: flag |= 0x800;
  8375  0061  0141               	movlb	1	; select bank1
  8376  0062  15AB               	bsf	(sprintf@flag^(0+128)+1),3
  8377                           
  8378                           ;doprnt.c: 575: f++;
  8379  0063  3001               	movlw	1
  8380  0064  0140               	movlb	0	; select bank0
  8381  0065  07D9               	addwf	sprintf@f,f
  8382  0066  3000               	movlw	0
  8383  0067  3DDA               	addwfc	sprintf@f+1,f
  8384  0068                     i1l3278:	
  8385                           ;doprnt.c: 584: }
  8386                           
  8387                           ;doprnt.c: 576: continue;
  8388                           
  8389  0068  0140               	movlb	0	; select bank0
  8390  0069  0859               	movf	sprintf@f,w
  8391  006A  0084               	movwf	4
  8392  006B  085A               	movf	sprintf@f+1,w
  8393  006C  0085               	movwf	5
  8394  006D  0800               	movf	0,w	;code access
  8395                           
  8396                           ; Switch size 1, requested type "space"
  8397                           ; Number of cases is 1, Range of values is 35 to 35
  8398                           ; switch strategies available:
  8399                           ; Name         Instructions Cycles
  8400                           ; simple_byte            4     3 (average)
  8401                           ; direct_byte           11     9 (fixed)
  8402                           ; jumptable            263     9 (fixed)
  8403                           ;	Chosen strategy is simple_byte
  8404  006E  3A23               	xorlw	35	; case 35
  8405  006F  1903               	skipnz
  8406  0070  2861               	goto	i1l537
  8407  0071  2872               	goto	i1l3280
  8408  0072                     i1l3280:	
  8409                           ;doprnt.c: 586: }
  8410                           
  8411                           ;doprnt.c: 585: break;
  8412                           
  8413                           
  8414                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8415  0072  0859               	movf	sprintf@f,w
  8416  0073  0084               	movwf	4
  8417  0074  085A               	movf	sprintf@f+1,w
  8418  0075  0085               	movwf	5
  8419  0076  0800               	movf	0,w	;code access
  8420  0077  319F  27CF  3180   	fcall	_isdigit
  8421  007A  1C03               	btfss	3,0
  8422  007B  28B9               	goto	i1l3292
  8423                           
  8424                           ;doprnt.c: 598: width = 0;
  8425  007C  0141               	movlb	1	; select bank1
  8426  007D  01A8               	clrf	sprintf@width^(0+128)
  8427  007E  01A9               	clrf	(sprintf@width+1)^(0+128)
  8428  007F                     i1l3284:	
  8429                           ;doprnt.c: 599: do {
  8430                           
  8431                           
  8432                           ;doprnt.c: 600: width *= 10;
  8433  007F  300A               	movlw	10
  8434  0080  0140               	movlb	0	; select bank0
  8435  0081  00A4               	movwf	i1___wmul@multiplier
  8436  0082  3000               	movlw	0
  8437  0083  00A5               	movwf	i1___wmul@multiplier+1
  8438  0084  0141               	movlb	1	; select bank1
  8439  0085  0829               	movf	(sprintf@width+1)^(0+128),w
  8440  0086  0140               	movlb	0	; select bank0
  8441  0087  00A7               	movwf	i1___wmul@multiplicand+1
  8442  0088  0141               	movlb	1	; select bank1
  8443  0089  0828               	movf	sprintf@width^(0+128),w
  8444  008A  0140               	movlb	0	; select bank0
  8445  008B  00A6               	movwf	i1___wmul@multiplicand
  8446  008C  3193  239E  3180   	fcall	i1___wmul
  8447  008F  0140               	movlb	0	; select bank0
  8448  0090  0825               	movf	?i1___wmul+1,w
  8449  0091  0141               	movlb	1	; select bank1
  8450  0092  00A9               	movwf	(sprintf@width+1)^(0+128)
  8451  0093  0140               	movlb	0	; select bank0
  8452  0094  0824               	movf	?i1___wmul,w
  8453  0095  0141               	movlb	1	; select bank1
  8454  0096  00A8               	movwf	sprintf@width^(0+128)
  8455                           
  8456                           ;doprnt.c: 601: width += *f++ - '0';
  8457  0097  0140               	movlb	0	; select bank0
  8458  0098  0859               	movf	sprintf@f,w
  8459  0099  0084               	movwf	4
  8460  009A  085A               	movf	sprintf@f+1,w
  8461  009B  0085               	movwf	5
  8462  009C  0800               	movf	0,w	;code access
  8463  009D  3ED0               	addlw	208
  8464  009E  00DE               	movwf	??_sprintf
  8465  009F  30FF               	movlw	255
  8466  00A0  1803               	skipnc
  8467  00A1  3000               	movlw	0
  8468  00A2  00DF               	movwf	??_sprintf+1
  8469  00A3  085E               	movf	??_sprintf,w
  8470  00A4  0141               	movlb	1	; select bank1
  8471  00A5  07A8               	addwf	sprintf@width^(0+128),f
  8472  00A6  0140               	movlb	0	; select bank0
  8473  00A7  085F               	movf	??_sprintf+1,w
  8474  00A8  0141               	movlb	1	; select bank1
  8475  00A9  3DA9               	addwfc	(sprintf@width+1)^(0+128),f
  8476  00AA  3001               	movlw	1
  8477  00AB  0140               	movlb	0	; select bank0
  8478  00AC  07D9               	addwf	sprintf@f,f
  8479  00AD  3000               	movlw	0
  8480  00AE  3DDA               	addwfc	sprintf@f+1,f
  8481                           
  8482                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8483  00AF  0859               	movf	sprintf@f,w
  8484  00B0  0084               	movwf	4
  8485  00B1  085A               	movf	sprintf@f+1,w
  8486  00B2  0085               	movwf	5
  8487  00B3  0800               	movf	0,w	;code access
  8488  00B4  319F  27CF  3180   	fcall	_isdigit
  8489  00B7  1803               	btfsc	3,0
  8490  00B8  287F               	goto	i1l3284
  8491  00B9                     i1l3292:	
  8492                           
  8493                           ;doprnt.c: 608: }
  8494                           ;doprnt.c: 611: if(*f == '.') {
  8495  00B9  0140               	movlb	0	; select bank0
  8496  00BA  0859               	movf	sprintf@f,w
  8497  00BB  0084               	movwf	4
  8498  00BC  085A               	movf	sprintf@f+1,w
  8499  00BD  0085               	movwf	5
  8500  00BE  0012               	moviw fsr0++
  8501  00BF  3A2E               	xorlw	46
  8502  00C0  1D03               	btfss	3,2
  8503  00C1  2904               	goto	i1l3306
  8504                           
  8505                           ;doprnt.c: 612: flag |= 0x4000;
  8506  00C2  0141               	movlb	1	; select bank1
  8507  00C3  172B               	bsf	(sprintf@flag^(0+128)+1),6
  8508                           
  8509                           ;doprnt.c: 613: f++;
  8510  00C4  3001               	movlw	1
  8511  00C5  0140               	movlb	0	; select bank0
  8512  00C6  07D9               	addwf	sprintf@f,f
  8513  00C7  3000               	movlw	0
  8514  00C8  3DDA               	addwfc	sprintf@f+1,f
  8515                           
  8516                           ;doprnt.c: 620: {
  8517                           ;doprnt.c: 621: prec = 0;
  8518  00C9  0141               	movlb	1	; select bank1
  8519  00CA  01B6               	clrf	sprintf@prec^(0+128)
  8520  00CB  01B7               	clrf	(sprintf@prec+1)^(0+128)
  8521  00CC                     i1l3304:	
  8522                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  8523                           
  8524  00CC  0140               	movlb	0	; select bank0
  8525  00CD  0859               	movf	sprintf@f,w
  8526  00CE  0084               	movwf	4
  8527  00CF  085A               	movf	sprintf@f+1,w
  8528  00D0  0085               	movwf	5
  8529  00D1  0800               	movf	0,w	;code access
  8530  00D2  319F  27CF  3180   	fcall	_isdigit
  8531  00D5  1C03               	btfss	3,0
  8532  00D6  290B               	goto	i1l3312
  8533                           
  8534                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  8535  00D7  0140               	movlb	0	; select bank0
  8536  00D8  0859               	movf	sprintf@f,w
  8537  00D9  0084               	movwf	4
  8538  00DA  085A               	movf	sprintf@f+1,w
  8539  00DB  0085               	movwf	5
  8540  00DC  0800               	movf	0,w	;code access
  8541  00DD  00DE               	movwf	??_sprintf
  8542  00DE  01DF               	clrf	??_sprintf+1
  8543  00DF  0141               	movlb	1	; select bank1
  8544  00E0  0837               	movf	(sprintf@prec+1)^(0+128),w
  8545  00E1  0140               	movlb	0	; select bank0
  8546  00E2  00A5               	movwf	i1___wmul@multiplier+1
  8547  00E3  0141               	movlb	1	; select bank1
  8548  00E4  0836               	movf	sprintf@prec^(0+128),w
  8549  00E5  0140               	movlb	0	; select bank0
  8550  00E6  00A4               	movwf	i1___wmul@multiplier
  8551  00E7  300A               	movlw	10
  8552  00E8  00A6               	movwf	i1___wmul@multiplicand
  8553  00E9  3000               	movlw	0
  8554  00EA  00A7               	movwf	i1___wmul@multiplicand+1
  8555  00EB  3193  239E  3180   	fcall	i1___wmul
  8556  00EE  0140               	movlb	0	; select bank0
  8557  00EF  085E               	movf	??_sprintf,w
  8558  00F0  0724               	addwf	?i1___wmul,w
  8559  00F1  00E0               	movwf	??_sprintf+2
  8560  00F2  085F               	movf	??_sprintf+1,w
  8561  00F3  3D25               	addwfc	?i1___wmul+1,w
  8562  00F4  00E1               	movwf	??_sprintf+3
  8563  00F5  0860               	movf	??_sprintf+2,w
  8564  00F6  3ED0               	addlw	208
  8565  00F7  0141               	movlb	1	; select bank1
  8566  00F8  00B6               	movwf	sprintf@prec^(0+128)
  8567  00F9  30FF               	movlw	255
  8568  00FA  0140               	movlb	0	; select bank0
  8569  00FB  3D61               	addwfc	??_sprintf+3,w
  8570  00FC  0141               	movlb	1	; select bank1
  8571  00FD  00B7               	movwf	(sprintf@prec+1)^(0+128)
  8572  00FE  3001               	movlw	1
  8573  00FF  0140               	movlb	0	; select bank0
  8574  0100  07D9               	addwf	sprintf@f,f
  8575  0101  3000               	movlw	0
  8576  0102  3DDA               	addwfc	sprintf@f+1,f
  8577  0103  28CC               	goto	i1l3304
  8578  0104                     i1l3306:	
  8579                           ;doprnt.c: 624: }
  8580                           ;doprnt.c: 625: } else {
  8581                           
  8582                           
  8583                           ;doprnt.c: 626: prec = 0;
  8584  0104  0141               	movlb	1	; select bank1
  8585  0105  01B6               	clrf	sprintf@prec^(0+128)
  8586  0106  01B7               	clrf	(sprintf@prec+1)^(0+128)
  8587                           
  8588                           ;doprnt.c: 628: flag |= 0x1000;
  8589  0107  162B               	bsf	(sprintf@flag^(0+128)+1),4
  8590                           
  8591                           ;doprnt.c: 630: }
  8592                           ;doprnt.c: 635: switch(c = *f++) {
  8593  0108  290B               	goto	i1l3312
  8594  0109                     i1l552:	
  8595                           ;doprnt.c: 662: case 'f':
  8596                           
  8597                           ;doprnt.c: 638: goto alldone;
  8598                           
  8599                           ;doprnt.c: 637: case 0:
  8600                           
  8601                           
  8602                           ;doprnt.c: 663: flag |= 0x400;
  8603  0109  152B               	bsf	(sprintf@flag^(0+128)+1),2
  8604                           
  8605                           ;doprnt.c: 664: break;
  8606  010A  2921               	goto	i1l3314
  8607  010B                     i1l3312:	
  8608                           ;doprnt.c: 822: }
  8609                           
  8610                           ;doprnt.c: 813: continue;
  8611                           
  8612                           ;doprnt.c: 802: default:
  8613                           
  8614  010B  0140               	movlb	0	; select bank0
  8615  010C  085A               	movf	sprintf@f+1,w
  8616  010D  00DF               	movwf	??_sprintf+1
  8617  010E  0859               	movf	sprintf@f,w
  8618  010F  00DE               	movwf	??_sprintf
  8619  0110  0AD9               	incf	sprintf@f,f
  8620  0111  1903               	skipnz
  8621  0112  0ADA               	incf	sprintf@f+1,f
  8622  0113  085E               	movf	??_sprintf,w
  8623  0114  0084               	movwf	4
  8624  0115  085F               	movf	??_sprintf+1,w
  8625  0116  0085               	movwf	5
  8626  0117  0800               	movf	0,w	;code access
  8627  0118  0141               	movlb	1	; select bank1
  8628  0119  00B8               	movwf	sprintf@c^(0+128)
  8629                           
  8630                           ; Switch size 1, requested type "space"
  8631                           ; Number of cases is 2, Range of values is 0 to 102
  8632                           ; switch strategies available:
  8633                           ; Name         Instructions Cycles
  8634                           ; simple_byte            7     4 (average)
  8635                           ; direct_byte          212     6 (fixed)
  8636                           ; jumptable            260     6 (fixed)
  8637                           ;	Chosen strategy is simple_byte
  8638  011A  3A00               	xorlw	0	; case 0
  8639  011B  1903               	skipnz
  8640  011C  2E4F               	goto	i1l3526
  8641  011D  3A66               	xorlw	102	; case 102
  8642  011E  1903               	skipnz
  8643  011F  2909               	goto	i1l552
  8644  0120  2841               	goto	i1l3524
  8645  0121                     i1l3314:	
  8646                           
  8647                           ;doprnt.c: 825: if(flag & (0x700)) {
  8648  0121  3000               	movlw	0
  8649  0122  052A               	andwf	sprintf@flag^(0+128),w
  8650  0123  0140               	movlb	0	; select bank0
  8651  0124  00DE               	movwf	??_sprintf
  8652  0125  3007               	movlw	7
  8653  0126  0141               	movlb	1	; select bank1
  8654  0127  052B               	andwf	(sprintf@flag+1)^(0+128),w
  8655  0128  0140               	movlb	0	; select bank0
  8656  0129  00DF               	movwf	??_sprintf+1
  8657  012A  085E               	movf	??_sprintf,w
  8658  012B  045F               	iorwf	??_sprintf+1,w
  8659  012C  1903               	btfsc	3,2
  8660  012D  2D74               	goto	i1l3480
  8661                           
  8662                           ;doprnt.c: 827: if(flag & 0x1000)
  8663  012E  0141               	movlb	1	; select bank1
  8664  012F  1E2B               	btfss	(sprintf@flag+1)^(0+128),4
  8665  0130  2935               	goto	i1l3320
  8666                           
  8667                           ;doprnt.c: 829: prec = 6;
  8668  0131  3006               	movlw	6
  8669  0132  00B6               	movwf	sprintf@prec^(0+128)
  8670  0133  3000               	movlw	0
  8671  0134  00B7               	movwf	(sprintf@prec^(0+128)+1)
  8672  0135                     i1l3320:	
  8673                           
  8674                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  8675  0135  0823               	movf	sprintf@ap^(0+128),w
  8676  0136  0086               	movwf	6
  8677  0137  0187               	clrf	7
  8678  0138  3F40               	moviw [0]fsr1
  8679  0139  00B3               	movwf	sprintf@fval^(0+128)
  8680  013A  3F41               	moviw [1]fsr1
  8681  013B  00B4               	movwf	(sprintf@fval+1)^(0+128)
  8682  013C  3F42               	moviw [2]fsr1
  8683  013D  00B5               	movwf	(sprintf@fval+2)^(0+128)
  8684  013E  3003               	movlw	3
  8685  013F  0140               	movlb	0	; select bank0
  8686  0140  00DE               	movwf	??_sprintf
  8687  0141  085E               	movf	??_sprintf,w
  8688  0142  0141               	movlb	1	; select bank1
  8689  0143  07A3               	addwf	sprintf@ap^(0+128),f
  8690                           
  8691                           ;doprnt.c: 831: if(fval < 0.0) {
  8692  0144  0833               	movf	sprintf@fval^(0+128),w
  8693  0145  00F0               	movwf	___ftge@ff1
  8694  0146  0834               	movf	(sprintf@fval+1)^(0+128),w
  8695  0147  00F1               	movwf	___ftge@ff1+1
  8696  0148  0835               	movf	(sprintf@fval+2)^(0+128),w
  8697  0149  00F2               	movwf	___ftge@ff1+2
  8698  014A  3000               	movlw	0
  8699  014B  00F3               	movwf	___ftge@ff2
  8700  014C  3000               	movlw	0
  8701  014D  00F4               	movwf	___ftge@ff2+1
  8702  014E  3000               	movlw	0
  8703  014F  00F5               	movwf	___ftge@ff2+2
  8704  0150  3194  24BA  3180   	fcall	___ftge
  8705  0153  1803               	btfsc	3,0
  8706  0154  296A               	goto	i1l3330
  8707                           
  8708                           ;doprnt.c: 832: fval = -fval;
  8709  0155  0141               	movlb	1	; select bank1
  8710  0156  0833               	movf	sprintf@fval^(0+128),w
  8711  0157  00F0               	movwf	___ftneg@f1
  8712  0158  0834               	movf	(sprintf@fval+1)^(0+128),w
  8713  0159  00F1               	movwf	___ftneg@f1+1
  8714  015A  0835               	movf	(sprintf@fval+2)^(0+128),w
  8715  015B  00F2               	movwf	___ftneg@f1+2
  8716  015C  319F  275F  3180   	fcall	___ftneg
  8717  015F  0870               	movf	?___ftneg,w
  8718  0160  0141               	movlb	1	; select bank1
  8719  0161  00B3               	movwf	sprintf@fval^(0+128)
  8720  0162  0871               	movf	?___ftneg+1,w
  8721  0163  00B4               	movwf	(sprintf@fval+1)^(0+128)
  8722  0164  0872               	movf	?___ftneg+2,w
  8723  0165  00B5               	movwf	(sprintf@fval+2)^(0+128)
  8724                           
  8725                           ;doprnt.c: 833: flag |= 0x03;
  8726  0166  3003               	movlw	3
  8727  0167  04AA               	iorwf	sprintf@flag^(0+128),f
  8728  0168  3000               	movlw	0
  8729  0169  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  8730  016A                     i1l3330:	
  8731                           
  8732                           ;doprnt.c: 834: }
  8733                           ;doprnt.c: 835: exp = 0;
  8734  016A  0141               	movlb	1	; select bank1
  8735  016B  01B0               	clrf	sprintf@exp^(0+128)
  8736  016C  01B1               	clrf	(sprintf@exp+1)^(0+128)
  8737                           
  8738                           ;doprnt.c: 836: if( fval!=0) {
  8739  016D  0835               	movf	(sprintf@fval+2)^(0+128),w
  8740  016E  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  8741  016F  0433               	iorwf	sprintf@fval^(0+128),w
  8742  0170  1903               	skipnz
  8743  0171  2A2A               	goto	i1l558
  8744                           
  8745                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  8746  0172  30B3               	movlw	low (sprintf@fval| 0)
  8747  0173  0086               	movwf	6
  8748  0174  0187               	clrf	7
  8749  0175  3F40               	moviw [0]fsr1
  8750  0176  0140               	movlb	0	; select bank0
  8751  0177  00DE               	movwf	??_sprintf
  8752  0178  3F41               	moviw [1]fsr1
  8753  0179  00DF               	movwf	??_sprintf+1
  8754  017A  3F42               	moviw [2]fsr1
  8755  017B  00E0               	movwf	??_sprintf+2
  8756  017C  3F43               	moviw [3]fsr1
  8757  017D  00E1               	movwf	??_sprintf+3
  8758  017E  300F               	movlw	15
  8759  017F                     u404_25:	
  8760  017F  36E1               	lsrf	??_sprintf+3,f
  8761  0180  0CE0               	rrf	??_sprintf+2,f
  8762  0181  0CDF               	rrf	??_sprintf+1,f
  8763  0182  0CDE               	rrf	??_sprintf,f
  8764  0183  0B89               	decfsz	9,f
  8765  0184  297F               	goto	u404_25
  8766  0185  30FF               	movlw	255
  8767  0186  055E               	andwf	??_sprintf,w
  8768  0187  00E2               	movwf	??_sprintf+4
  8769  0188  3000               	movlw	0
  8770  0189  055F               	andwf	??_sprintf+1,w
  8771  018A  00E3               	movwf	??_sprintf+5
  8772  018B  0862               	movf	??_sprintf+4,w
  8773  018C  3E82               	addlw	130
  8774  018D  0141               	movlb	1	; select bank1
  8775  018E  00B0               	movwf	sprintf@exp^(0+128)
  8776  018F  30FF               	movlw	255
  8777  0190  0140               	movlb	0	; select bank0
  8778  0191  3D63               	addwfc	??_sprintf+5,w
  8779  0192  0141               	movlb	1	; select bank1
  8780  0193  00B1               	movwf	(sprintf@exp+1)^(0+128)
  8781                           
  8782                           ;doprnt.c: 838: exp--;
  8783  0194  30FF               	movlw	255
  8784  0195  07B0               	addwf	sprintf@exp^(0+128),f
  8785  0196  30FF               	movlw	255
  8786  0197  3DB1               	addwfc	(sprintf@exp+1)^(0+128),f
  8787                           
  8788                           ;doprnt.c: 839: exp *= 3;
  8789  0198  3003               	movlw	3
  8790  0199  0140               	movlb	0	; select bank0
  8791  019A  00A4               	movwf	i1___wmul@multiplier
  8792  019B  3000               	movlw	0
  8793  019C  00A5               	movwf	i1___wmul@multiplier+1
  8794  019D  0141               	movlb	1	; select bank1
  8795  019E  0831               	movf	(sprintf@exp+1)^(0+128),w
  8796  019F  0140               	movlb	0	; select bank0
  8797  01A0  00A7               	movwf	i1___wmul@multiplicand+1
  8798  01A1  0141               	movlb	1	; select bank1
  8799  01A2  0830               	movf	sprintf@exp^(0+128),w
  8800  01A3  0140               	movlb	0	; select bank0
  8801  01A4  00A6               	movwf	i1___wmul@multiplicand
  8802  01A5  3193  239E  3180   	fcall	i1___wmul
  8803  01A8  0140               	movlb	0	; select bank0
  8804  01A9  0825               	movf	?i1___wmul+1,w
  8805  01AA  0141               	movlb	1	; select bank1
  8806  01AB  00B1               	movwf	(sprintf@exp+1)^(0+128)
  8807  01AC  0140               	movlb	0	; select bank0
  8808  01AD  0824               	movf	?i1___wmul,w
  8809  01AE  0141               	movlb	1	; select bank1
  8810  01AF  00B0               	movwf	sprintf@exp^(0+128)
  8811                           
  8812                           ;doprnt.c: 840: exp /= 10;
  8813  01B0  300A               	movlw	10
  8814  01B1  00F7               	movwf	___awdiv@divisor
  8815  01B2  3000               	movlw	0
  8816  01B3  00F8               	movwf	___awdiv@divisor+1
  8817  01B4  0831               	movf	(sprintf@exp+1)^(0+128),w
  8818  01B5  00FA               	movwf	___awdiv@dividend+1
  8819  01B6  0830               	movf	sprintf@exp^(0+128),w
  8820  01B7  00F9               	movwf	___awdiv@dividend
  8821  01B8  3196  260F  3180   	fcall	___awdiv
  8822  01BB  0878               	movf	?___awdiv+1,w
  8823  01BC  0141               	movlb	1	; select bank1
  8824  01BD  00B1               	movwf	(sprintf@exp+1)^(0+128)
  8825  01BE  0877               	movf	?___awdiv,w
  8826  01BF  00B0               	movwf	sprintf@exp^(0+128)
  8827                           
  8828                           ;doprnt.c: 841: if(exp < 0)
  8829  01C0  1FB1               	btfss	(sprintf@exp+1)^(0+128),7
  8830  01C1  29C6               	goto	i1l3346
  8831                           
  8832                           ;doprnt.c: 842: exp--;
  8833  01C2  30FF               	movlw	255
  8834  01C3  07B0               	addwf	sprintf@exp^(0+128),f
  8835  01C4  30FF               	movlw	255
  8836  01C5  3DB1               	addwfc	(sprintf@exp+1)^(0+128),f
  8837  01C6                     i1l3346:	
  8838                           
  8839                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  8840  01C6  0330               	decf	sprintf@exp^(0+128),w
  8841  01C7  3AFF               	xorlw	255
  8842  01C8  318D  25BC  3180   	fcall	_scale
  8843  01CB  0140               	movlb	0	; select bank0
  8844  01CC  0838               	movf	?_scale,w
  8845  01CD  0141               	movlb	1	; select bank1
  8846  01CE  00AC               	movwf	sprintf@tmpval^(0+128)
  8847  01CF  0140               	movlb	0	; select bank0
  8848  01D0  0839               	movf	?_scale+1,w
  8849  01D1  0141               	movlb	1	; select bank1
  8850  01D2  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  8851  01D3  0140               	movlb	0	; select bank0
  8852  01D4  083A               	movf	?_scale+2,w
  8853  01D5  0141               	movlb	1	; select bank1
  8854  01D6  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  8855                           
  8856                           ;doprnt.c: 847: tmpval.integ *= fval;
  8857  01D7  0833               	movf	sprintf@fval^(0+128),w
  8858  01D8  0140               	movlb	0	; select bank0
  8859  01D9  00A8               	movwf	___ftmul@f1
  8860  01DA  0141               	movlb	1	; select bank1
  8861  01DB  0834               	movf	(sprintf@fval+1)^(0+128),w
  8862  01DC  0140               	movlb	0	; select bank0
  8863  01DD  00A9               	movwf	___ftmul@f1+1
  8864  01DE  0141               	movlb	1	; select bank1
  8865  01DF  0835               	movf	(sprintf@fval+2)^(0+128),w
  8866  01E0  0140               	movlb	0	; select bank0
  8867  01E1  00AA               	movwf	___ftmul@f1+2
  8868  01E2  0141               	movlb	1	; select bank1
  8869  01E3  082C               	movf	sprintf@tmpval^(0+128),w
  8870  01E4  0140               	movlb	0	; select bank0
  8871  01E5  00AB               	movwf	___ftmul@f2
  8872  01E6  0141               	movlb	1	; select bank1
  8873  01E7  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  8874  01E8  0140               	movlb	0	; select bank0
  8875  01E9  00AC               	movwf	___ftmul@f2+1
  8876  01EA  0141               	movlb	1	; select bank1
  8877  01EB  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  8878  01EC  0140               	movlb	0	; select bank0
  8879  01ED  00AD               	movwf	___ftmul@f2+2
  8880  01EE  3188  20C2  3180   	fcall	___ftmul
  8881  01F1  0140               	movlb	0	; select bank0
  8882  01F2  0828               	movf	?___ftmul,w
  8883  01F3  0141               	movlb	1	; select bank1
  8884  01F4  00AC               	movwf	sprintf@tmpval^(0+128)
  8885  01F5  0140               	movlb	0	; select bank0
  8886  01F6  0829               	movf	?___ftmul+1,w
  8887  01F7  0141               	movlb	1	; select bank1
  8888  01F8  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  8889  01F9  0140               	movlb	0	; select bank0
  8890  01FA  082A               	movf	?___ftmul+2,w
  8891  01FB  0141               	movlb	1	; select bank1
  8892  01FC  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  8893                           
  8894                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  8895  01FD  082C               	movf	sprintf@tmpval^(0+128),w
  8896  01FE  00F0               	movwf	___ftge@ff1
  8897  01FF  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  8898  0200  00F1               	movwf	___ftge@ff1+1
  8899  0201  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  8900  0202  00F2               	movwf	___ftge@ff1+2
  8901  0203  3000               	movlw	0
  8902  0204  00F3               	movwf	___ftge@ff2
  8903  0205  3080               	movlw	128
  8904  0206  00F4               	movwf	___ftge@ff2+1
  8905  0207  303F               	movlw	63
  8906  0208  00F5               	movwf	___ftge@ff2+2
  8907  0209  3194  24BA  3180   	fcall	___ftge
  8908  020C  1803               	btfsc	3,0
  8909  020D  2A13               	goto	i1l3354
  8910                           
  8911                           ;doprnt.c: 849: exp--;
  8912  020E  30FF               	movlw	255
  8913  020F  0141               	movlb	1	; select bank1
  8914  0210  07B0               	addwf	sprintf@exp^(0+128),f
  8915  0211  30FF               	movlw	255
  8916  0212  2A29               	goto	L5
  8917  0213                     i1l3354:	
  8918                           
  8919                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  8920  0213  0141               	movlb	1	; select bank1
  8921  0214  082C               	movf	sprintf@tmpval^(0+128),w
  8922  0215  00F0               	movwf	___ftge@ff1
  8923  0216  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  8924  0217  00F1               	movwf	___ftge@ff1+1
  8925  0218  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  8926  0219  00F2               	movwf	___ftge@ff1+2
  8927  021A  3000               	movlw	0
  8928  021B  00F3               	movwf	___ftge@ff2
  8929  021C  3020               	movlw	32
  8930  021D  00F4               	movwf	___ftge@ff2+1
  8931  021E  3041               	movlw	65
  8932  021F  00F5               	movwf	___ftge@ff2+2
  8933  0220  3194  24BA  3180   	fcall	___ftge
  8934  0223  1C03               	btfss	3,0
  8935  0224  2A2A               	goto	i1l558
  8936                           
  8937                           ;doprnt.c: 851: exp++;
  8938  0225  3001               	movlw	1
  8939  0226  0141               	movlb	1	; select bank1
  8940  0227  07B0               	addwf	sprintf@exp^(0+128),f
  8941  0228  3000               	movlw	0
  8942  0229                     L5:	
  8943  0229  3DB1               	addwfc	(sprintf@exp+1)^(0+128),f
  8944  022A                     i1l558:	
  8945                           
  8946                           ;doprnt.c: 852: }
  8947                           ;doprnt.c: 1112: if(prec <= 12)
  8948  022A  0141               	movlb	1	; select bank1
  8949  022B  0837               	movf	(sprintf@prec+1)^(0+128),w
  8950  022C  3A80               	xorlw	128
  8951  022D  0140               	movlb	0	; select bank0
  8952  022E  00DE               	movwf	??_sprintf
  8953  022F  3080               	movlw	128
  8954  0230  025E               	subwf	??_sprintf,w
  8955  0231  1D03               	skipz
  8956  0232  2A36               	goto	u408_25
  8957  0233  300D               	movlw	13
  8958  0234  0141               	movlb	1	; select bank1
  8959  0235  0236               	subwf	sprintf@prec^(0+128),w
  8960  0236                     u408_25:	
  8961  0236  1803               	skipnc
  8962  0237  2A5F               	goto	i1l3360
  8963                           
  8964                           ;doprnt.c: 1113: fval += fround(prec);
  8965  0238  0141               	movlb	1	; select bank1
  8966  0239  0836               	movf	sprintf@prec^(0+128),w
  8967  023A  3186  2654  3180   	fcall	_fround
  8968  023D  0140               	movlb	0	; select bank0
  8969  023E  0838               	movf	?_fround,w
  8970  023F  00C6               	movwf	___ftadd@f1
  8971  0240  0839               	movf	?_fround+1,w
  8972  0241  00C7               	movwf	___ftadd@f1+1
  8973  0242  083A               	movf	?_fround+2,w
  8974  0243  00C8               	movwf	___ftadd@f1+2
  8975  0244  0141               	movlb	1	; select bank1
  8976  0245  0833               	movf	sprintf@fval^(0+128),w
  8977  0246  0140               	movlb	0	; select bank0
  8978  0247  00C9               	movwf	___ftadd@f2
  8979  0248  0141               	movlb	1	; select bank1
  8980  0249  0834               	movf	(sprintf@fval+1)^(0+128),w
  8981  024A  0140               	movlb	0	; select bank0
  8982  024B  00CA               	movwf	___ftadd@f2+1
  8983  024C  0141               	movlb	1	; select bank1
  8984  024D  0835               	movf	(sprintf@fval+2)^(0+128),w
  8985  024E  0140               	movlb	0	; select bank0
  8986  024F  00CB               	movwf	___ftadd@f2+2
  8987  0250  318B  23A9  3180   	fcall	___ftadd
  8988  0253  0140               	movlb	0	; select bank0
  8989  0254  0846               	movf	?___ftadd,w
  8990  0255  0141               	movlb	1	; select bank1
  8991  0256  00B3               	movwf	sprintf@fval^(0+128)
  8992  0257  0140               	movlb	0	; select bank0
  8993  0258  0847               	movf	?___ftadd+1,w
  8994  0259  0141               	movlb	1	; select bank1
  8995  025A  00B4               	movwf	(sprintf@fval+1)^(0+128)
  8996  025B  0140               	movlb	0	; select bank0
  8997  025C  0848               	movf	?___ftadd+2,w
  8998  025D  0141               	movlb	1	; select bank1
  8999  025E  00B5               	movwf	(sprintf@fval+2)^(0+128)
  9000  025F                     i1l3360:	
  9001                           
  9002                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  9003  025F  0141               	movlb	1	; select bank1
  9004  0260  0831               	movf	(sprintf@exp+1)^(0+128),w
  9005  0261  3A80               	xorlw	128
  9006  0262  0140               	movlb	0	; select bank0
  9007  0263  00DE               	movwf	??_sprintf
  9008  0264  3080               	movlw	128
  9009  0265  025E               	subwf	??_sprintf,w
  9010  0266  1D03               	skipz
  9011  0267  2A6B               	goto	u409_25
  9012  0268  300A               	movlw	10
  9013  0269  0141               	movlb	1	; select bank1
  9014  026A  0230               	subwf	sprintf@exp^(0+128),w
  9015  026B                     u409_25:	
  9016  026B  1803               	skipnc
  9017  026C  2A96               	goto	i1l3368
  9018  026D  0141               	movlb	1	; select bank1
  9019  026E  0835               	movf	(sprintf@fval+2)^(0+128),w
  9020  026F  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  9021  0270  0433               	iorwf	sprintf@fval^(0+128),w
  9022  0271  1903               	skipnz
  9023  0272  2ADE               	goto	i1l3382
  9024  0273  0833               	movf	sprintf@fval^(0+128),w
  9025  0274  0140               	movlb	0	; select bank0
  9026  0275  00B8               	movwf	___fttol@f1
  9027  0276  0141               	movlb	1	; select bank1
  9028  0277  0834               	movf	(sprintf@fval+1)^(0+128),w
  9029  0278  0140               	movlb	0	; select bank0
  9030  0279  00B9               	movwf	___fttol@f1+1
  9031  027A  0141               	movlb	1	; select bank1
  9032  027B  0835               	movf	(sprintf@fval+2)^(0+128),w
  9033  027C  0140               	movlb	0	; select bank0
  9034  027D  00BA               	movwf	___fttol@f1+2
  9035  027E  3188  203B  3180   	fcall	___fttol
  9036  0281  0140               	movlb	0	; select bank0
  9037  0282  083B               	movf	?___fttol+3,w
  9038  0283  043A               	iorwf	?___fttol+2,w
  9039  0284  0439               	iorwf	?___fttol+1,w
  9040  0285  0438               	iorwf	?___fttol,w
  9041  0286  1D03               	skipz
  9042  0287  2ADE               	goto	i1l3382
  9043  0288  0141               	movlb	1	; select bank1
  9044  0289  0831               	movf	(sprintf@exp+1)^(0+128),w
  9045  028A  3A80               	xorlw	128
  9046  028B  0140               	movlb	0	; select bank0
  9047  028C  00DE               	movwf	??_sprintf
  9048  028D  3080               	movlw	128
  9049  028E  025E               	subwf	??_sprintf,w
  9050  028F  1D03               	skipz
  9051  0290  2A94               	goto	u412_25
  9052  0291  3002               	movlw	2
  9053  0292  0141               	movlb	1	; select bank1
  9054  0293  0230               	subwf	sprintf@exp^(0+128),w
  9055  0294                     u412_25:	
  9056  0294  1C03               	skipc
  9057  0295  2ADE               	goto	i1l3382
  9058  0296                     i1l3368:	
  9059                           
  9060                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  9061  0296  0141               	movlb	1	; select bank1
  9062  0297  082C               	movf	sprintf@tmpval^(0+128),w
  9063  0298  00F0               	movwf	___ftge@ff1
  9064  0299  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  9065  029A  00F1               	movwf	___ftge@ff1+1
  9066  029B  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  9067  029C  00F2               	movwf	___ftge@ff1+2
  9068  029D  3070               	movlw	112
  9069  029E  00F3               	movwf	___ftge@ff2
  9070  029F  3089               	movlw	137
  9071  02A0  00F4               	movwf	___ftge@ff2+1
  9072  02A1  3040               	movlw	64
  9073  02A2  00F5               	movwf	___ftge@ff2+2
  9074  02A3  3194  24BA  3180   	fcall	___ftge
  9075  02A6  1803               	btfsc	3,0
  9076  02A7  2AAA               	goto	i1l3372
  9077                           
  9078                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  9079  02A8  30F7               	movlw	247
  9080  02A9  2AAB               	goto	L6
  9081  02AA                     i1l3372:	
  9082                           ;doprnt.c: 1122: }else{
  9083                           
  9084                           
  9085                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  9086  02AA  30F8               	movlw	248
  9087  02AB                     L6:	
  9088  02AB  0141               	movlb	1	; select bank1
  9089  02AC  07B0               	addwf	sprintf@exp^(0+128),f
  9090  02AD  30FF               	movlw	255
  9091  02AE  3DB1               	addwfc	(sprintf@exp+1)^(0+128),f
  9092                           
  9093                           ;doprnt.c: 1124: }
  9094                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  9095  02AF  0830               	movf	sprintf@exp^(0+128),w
  9096  02B0  318D  25BC  3180   	fcall	_scale
  9097  02B3  0140               	movlb	0	; select bank0
  9098  02B4  0838               	movf	?_scale,w
  9099  02B5  0141               	movlb	1	; select bank1
  9100  02B6  00AC               	movwf	sprintf@tmpval^(0+128)
  9101  02B7  0140               	movlb	0	; select bank0
  9102  02B8  0839               	movf	?_scale+1,w
  9103  02B9  0141               	movlb	1	; select bank1
  9104  02BA  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9105  02BB  0140               	movlb	0	; select bank0
  9106  02BC  083A               	movf	?_scale+2,w
  9107  02BD  0141               	movlb	1	; select bank1
  9108  02BE  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9109                           
  9110                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  9111  02BF  0833               	movf	sprintf@fval^(0+128),w
  9112  02C0  00F0               	movwf	__tdiv_to_l_@f1
  9113  02C1  0834               	movf	(sprintf@fval+1)^(0+128),w
  9114  02C2  00F1               	movwf	__tdiv_to_l_@f1+1
  9115  02C3  0835               	movf	(sprintf@fval+2)^(0+128),w
  9116  02C4  00F2               	movwf	__tdiv_to_l_@f1+2
  9117  02C5  082C               	movf	sprintf@tmpval^(0+128),w
  9118  02C6  00F3               	movwf	__tdiv_to_l_@f2
  9119  02C7  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  9120  02C8  00F4               	movwf	__tdiv_to_l_@f2+1
  9121  02C9  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  9122  02CA  00F5               	movwf	__tdiv_to_l_@f2+2
  9123  02CB  3189  2176  3180   	fcall	__tdiv_to_l_
  9124  02CE  0873               	movf	?__tdiv_to_l_+3,w
  9125  02CF  0141               	movlb	1	; select bank1
  9126  02D0  00A7               	movwf	(sprintf@val+3)^(0+128)
  9127  02D1  0872               	movf	?__tdiv_to_l_+2,w
  9128  02D2  00A6               	movwf	(sprintf@val+2)^(0+128)
  9129  02D3  0871               	movf	?__tdiv_to_l_+1,w
  9130  02D4  00A5               	movwf	(sprintf@val+1)^(0+128)
  9131  02D5  0870               	movf	?__tdiv_to_l_,w
  9132  02D6  00A4               	movwf	sprintf@val^(0+128)
  9133                           
  9134                           ;doprnt.c: 1129: fval = 0.0;
  9135  02D7  3000               	movlw	0
  9136  02D8  00B3               	movwf	sprintf@fval^(0+128)
  9137  02D9  3000               	movlw	0
  9138  02DA  00B4               	movwf	(sprintf@fval+1)^(0+128)
  9139  02DB  3000               	movlw	0
  9140  02DC  00B5               	movwf	(sprintf@fval+2)^(0+128)
  9141                           
  9142                           ;doprnt.c: 1130: } else {
  9143  02DD  2B2C               	goto	i1l3386
  9144  02DE                     i1l3382:	
  9145                           
  9146                           ;doprnt.c: 1131: val = (unsigned long)fval;
  9147  02DE  0141               	movlb	1	; select bank1
  9148  02DF  0833               	movf	sprintf@fval^(0+128),w
  9149  02E0  0140               	movlb	0	; select bank0
  9150  02E1  00B8               	movwf	___fttol@f1
  9151  02E2  0141               	movlb	1	; select bank1
  9152  02E3  0834               	movf	(sprintf@fval+1)^(0+128),w
  9153  02E4  0140               	movlb	0	; select bank0
  9154  02E5  00B9               	movwf	___fttol@f1+1
  9155  02E6  0141               	movlb	1	; select bank1
  9156  02E7  0835               	movf	(sprintf@fval+2)^(0+128),w
  9157  02E8  0140               	movlb	0	; select bank0
  9158  02E9  00BA               	movwf	___fttol@f1+2
  9159  02EA  3188  203B  3180   	fcall	___fttol
  9160  02ED  0140               	movlb	0	; select bank0
  9161  02EE  083B               	movf	?___fttol+3,w
  9162  02EF  0141               	movlb	1	; select bank1
  9163  02F0  00A7               	movwf	(sprintf@val+3)^(0+128)
  9164  02F1  0140               	movlb	0	; select bank0
  9165  02F2  083A               	movf	?___fttol+2,w
  9166  02F3  0141               	movlb	1	; select bank1
  9167  02F4  00A6               	movwf	(sprintf@val+2)^(0+128)
  9168  02F5  0140               	movlb	0	; select bank0
  9169  02F6  0839               	movf	?___fttol+1,w
  9170  02F7  0141               	movlb	1	; select bank1
  9171  02F8  00A5               	movwf	(sprintf@val+1)^(0+128)
  9172  02F9  0140               	movlb	0	; select bank0
  9173  02FA  0838               	movf	?___fttol,w
  9174  02FB  0141               	movlb	1	; select bank1
  9175  02FC  00A4               	movwf	sprintf@val^(0+128)
  9176                           
  9177                           ;doprnt.c: 1132: fval -= (double)val;
  9178  02FD  0827               	movf	(sprintf@val+3)^(0+128),w
  9179  02FE  00FB               	movwf	___lltoft@c+3
  9180  02FF  0826               	movf	(sprintf@val+2)^(0+128),w
  9181  0300  00FA               	movwf	___lltoft@c+2
  9182  0301  0825               	movf	(sprintf@val+1)^(0+128),w
  9183  0302  00F9               	movwf	___lltoft@c+1
  9184  0303  0824               	movf	sprintf@val^(0+128),w
  9185  0304  00F8               	movwf	___lltoft@c
  9186  0305  3194  2457  3180   	fcall	___lltoft
  9187  0308  0878               	movf	?___lltoft,w
  9188  0309  0140               	movlb	0	; select bank0
  9189  030A  00D3               	movwf	___ftsub@f2
  9190  030B  0879               	movf	?___lltoft+1,w
  9191  030C  00D4               	movwf	___ftsub@f2+1
  9192  030D  087A               	movf	?___lltoft+2,w
  9193  030E  00D5               	movwf	___ftsub@f2+2
  9194  030F  0141               	movlb	1	; select bank1
  9195  0310  0833               	movf	sprintf@fval^(0+128),w
  9196  0311  0140               	movlb	0	; select bank0
  9197  0312  00D6               	movwf	___ftsub@f1
  9198  0313  0141               	movlb	1	; select bank1
  9199  0314  0834               	movf	(sprintf@fval+1)^(0+128),w
  9200  0315  0140               	movlb	0	; select bank0
  9201  0316  00D7               	movwf	___ftsub@f1+1
  9202  0317  0141               	movlb	1	; select bank1
  9203  0318  0835               	movf	(sprintf@fval+2)^(0+128),w
  9204  0319  0140               	movlb	0	; select bank0
  9205  031A  00D8               	movwf	___ftsub@f1+2
  9206  031B  3193  23D6  3180   	fcall	___ftsub
  9207  031E  0140               	movlb	0	; select bank0
  9208  031F  0853               	movf	?___ftsub,w
  9209  0320  0141               	movlb	1	; select bank1
  9210  0321  00B3               	movwf	sprintf@fval^(0+128)
  9211  0322  0140               	movlb	0	; select bank0
  9212  0323  0854               	movf	?___ftsub+1,w
  9213  0324  0141               	movlb	1	; select bank1
  9214  0325  00B4               	movwf	(sprintf@fval+1)^(0+128)
  9215  0326  0140               	movlb	0	; select bank0
  9216  0327  0855               	movf	?___ftsub+2,w
  9217  0328  0141               	movlb	1	; select bank1
  9218  0329  00B5               	movwf	(sprintf@fval+2)^(0+128)
  9219                           
  9220                           ;doprnt.c: 1133: exp = 0;
  9221  032A  01B0               	clrf	sprintf@exp^(0+128)
  9222  032B  01B1               	clrf	(sprintf@exp+1)^(0+128)
  9223  032C                     i1l3386:	
  9224                           
  9225                           ;doprnt.c: 1134: }
  9226                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9227  032C  01B8               	clrf	sprintf@c^(0+128)
  9228  032D  0AB8               	incf	sprintf@c^(0+128),f
  9229  032E  300A               	movlw	10
  9230  032F  0638               	xorwf	sprintf@c^(0+128),w
  9231  0330  1903               	btfsc	3,2
  9232  0331  2B69               	goto	i1l3398
  9233  0332                     i1l3392:	
  9234                           
  9235                           ;doprnt.c: 1137: if(val < dpowers[c])
  9236  0332  0838               	movf	sprintf@c^(0+128),w
  9237  0333  0140               	movlb	0	; select bank0
  9238  0334  00DE               	movwf	??_sprintf
  9239  0335  01DF               	clrf	??_sprintf+1
  9240  0336  35DE               	lslf	??_sprintf,f
  9241  0337  0DDF               	rlf	??_sprintf+1,f
  9242  0338  35DE               	lslf	??_sprintf,f
  9243  0339  0DDF               	rlf	??_sprintf+1,f
  9244  033A  3000               	movlw	low (_dpowers| (0+32768))
  9245  033B  075E               	addwf	??_sprintf,w
  9246  033C  0084               	movwf	4
  9247  033D  3098               	movlw	high (_dpowers| (0+32768))
  9248  033E  3D5F               	addwfc	??_sprintf+1,w
  9249  033F  0085               	movwf	5
  9250  0340  3F00               	moviw [0]fsr0
  9251  0341  00E0               	movwf	??_sprintf+2
  9252  0342  3F01               	moviw [1]fsr0
  9253  0343  00E1               	movwf	??_sprintf+3
  9254  0344  3F02               	moviw [2]fsr0
  9255  0345  00E2               	movwf	??_sprintf+4
  9256  0346  3F03               	moviw [3]fsr0
  9257  0347  00E3               	movwf	??_sprintf+5
  9258  0348  0863               	movf	??_sprintf+5,w
  9259  0349  0141               	movlb	1	; select bank1
  9260  034A  0227               	subwf	(sprintf@val+3)^(0+128),w
  9261  034B  1D03               	skipz
  9262  034C  2B5D               	goto	u415_25
  9263  034D  0140               	movlb	0	; select bank0
  9264  034E  0862               	movf	??_sprintf+4,w
  9265  034F  0141               	movlb	1	; select bank1
  9266  0350  0226               	subwf	(sprintf@val+2)^(0+128),w
  9267  0351  1D03               	skipz
  9268  0352  2B5D               	goto	u415_25
  9269  0353  0140               	movlb	0	; select bank0
  9270  0354  0861               	movf	??_sprintf+3,w
  9271  0355  0141               	movlb	1	; select bank1
  9272  0356  0225               	subwf	(sprintf@val+1)^(0+128),w
  9273  0357  1D03               	skipz
  9274  0358  2B5D               	goto	u415_25
  9275  0359  0140               	movlb	0	; select bank0
  9276  035A  0860               	movf	??_sprintf+2,w
  9277  035B  0141               	movlb	1	; select bank1
  9278  035C  0224               	subwf	sprintf@val^(0+128),w
  9279  035D                     u415_25:	
  9280  035D  1C03               	btfss	3,0
  9281  035E  2B69               	goto	i1l3398
  9282                           
  9283                           ;doprnt.c: 1138: break;
  9284  035F  3001               	movlw	1
  9285  0360  0140               	movlb	0	; select bank0
  9286  0361  00DE               	movwf	??_sprintf
  9287  0362  085E               	movf	??_sprintf,w
  9288  0363  0141               	movlb	1	; select bank1
  9289  0364  07B8               	addwf	sprintf@c^(0+128),f
  9290  0365  300A               	movlw	10
  9291  0366  0638               	xorwf	sprintf@c^(0+128),w
  9292  0367  1D03               	btfss	3,2
  9293  0368  2B32               	goto	i1l3392
  9294  0369                     i1l3398:	
  9295                           
  9296                           ;doprnt.c: 1142: width -= prec + c + exp;
  9297  0369  0838               	movf	sprintf@c^(0+128),w
  9298  036A  0140               	movlb	0	; select bank0
  9299  036B  00DE               	movwf	??_sprintf
  9300  036C  01DF               	clrf	??_sprintf+1
  9301  036D  1BDE               	btfsc	??_sprintf,7
  9302  036E  03DF               	decf	??_sprintf+1,f
  9303  036F  0141               	movlb	1	; select bank1
  9304  0370  0836               	movf	sprintf@prec^(0+128),w
  9305  0371  0140               	movlb	0	; select bank0
  9306  0372  075E               	addwf	??_sprintf,w
  9307  0373  00E0               	movwf	??_sprintf+2
  9308  0374  0141               	movlb	1	; select bank1
  9309  0375  0837               	movf	(sprintf@prec+1)^(0+128),w
  9310  0376  0140               	movlb	0	; select bank0
  9311  0377  3D5F               	addwfc	??_sprintf+1,w
  9312  0378  00E1               	movwf	??_sprintf+3
  9313  0379  0141               	movlb	1	; select bank1
  9314  037A  0830               	movf	sprintf@exp^(0+128),w
  9315  037B  0140               	movlb	0	; select bank0
  9316  037C  0760               	addwf	??_sprintf+2,w
  9317  037D  00E2               	movwf	??_sprintf+4
  9318  037E  0141               	movlb	1	; select bank1
  9319  037F  0831               	movf	(sprintf@exp+1)^(0+128),w
  9320  0380  0140               	movlb	0	; select bank0
  9321  0381  3D61               	addwfc	??_sprintf+3,w
  9322  0382  00E3               	movwf	??_sprintf+5
  9323  0383  0862               	movf	??_sprintf+4,w
  9324  0384  0141               	movlb	1	; select bank1
  9325  0385  02A8               	subwf	sprintf@width^(0+128),f
  9326  0386  0140               	movlb	0	; select bank0
  9327  0387  0863               	movf	??_sprintf+5,w
  9328  0388  0141               	movlb	1	; select bank1
  9329  0389  3BA9               	subwfb	(sprintf@width+1)^(0+128),f
  9330                           
  9331                           ;doprnt.c: 1143: if(
  9332                           ;doprnt.c: 1145: flag & 0x800 ||
  9333                           ;doprnt.c: 1147: prec)
  9334  038A  19AB               	btfsc	(sprintf@flag+1)^(0+128),3
  9335  038B  2B90               	goto	i1l3404
  9336  038C  0836               	movf	sprintf@prec^(0+128),w
  9337  038D  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9338  038E  1903               	btfsc	3,2
  9339  038F  2B94               	goto	i1l3406
  9340  0390                     i1l3404:	
  9341                           
  9342                           ;doprnt.c: 1148: width--;
  9343  0390  30FF               	movlw	255
  9344  0391  07A8               	addwf	sprintf@width^(0+128),f
  9345  0392  30FF               	movlw	255
  9346  0393  3DA9               	addwfc	(sprintf@width+1)^(0+128),f
  9347  0394                     i1l3406:	
  9348                           
  9349                           ;doprnt.c: 1149: if(flag & 0x03)
  9350  0394  3003               	movlw	3
  9351  0395  052A               	andwf	sprintf@flag^(0+128),w
  9352  0396  0140               	movlb	0	; select bank0
  9353  0397  00DE               	movwf	??_sprintf
  9354  0398  3000               	movlw	0
  9355  0399  0141               	movlb	1	; select bank1
  9356  039A  052B               	andwf	(sprintf@flag+1)^(0+128),w
  9357  039B  0140               	movlb	0	; select bank0
  9358  039C  00DF               	movwf	??_sprintf+1
  9359  039D  085E               	movf	??_sprintf,w
  9360  039E  045F               	iorwf	??_sprintf+1,w
  9361  039F  1903               	btfsc	3,2
  9362  03A0  2BA6               	goto	i1l3416
  9363                           
  9364                           ;doprnt.c: 1150: width--;
  9365  03A1  30FF               	movlw	255
  9366  03A2  0141               	movlb	1	; select bank1
  9367  03A3                     L7:	
  9368  03A3  07A8               	addwf	sprintf@width^(0+128),f
  9369  03A4  30FF               	movlw	255
  9370  03A5  3DA9               	addwfc	(sprintf@width+1)^(0+128),f
  9371  03A6                     i1l3416:	
  9372  03A6  0141               	movlb	1	; select bank1
  9373  03A7  0829               	movf	(sprintf@width+1)^(0+128),w
  9374  03A8  3A80               	xorlw	128
  9375  03A9  0140               	movlb	0	; select bank0
  9376  03AA  00DE               	movwf	??_sprintf
  9377  03AB  3080               	movlw	128
  9378  03AC  025E               	subwf	??_sprintf,w
  9379  03AD  1D03               	skipz
  9380  03AE  2BB2               	goto	u420_25
  9381  03AF  3001               	movlw	1
  9382  03B0  0141               	movlb	1	; select bank1
  9383  03B1  0228               	subwf	sprintf@width^(0+128),w
  9384  03B2                     u420_25:	
  9385  03B2  1C03               	btfss	3,0
  9386  03B3  2BC5               	goto	i1l3418
  9387                           
  9388                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  9389                           
  9390                           ;doprnt.c: 1175: {
  9391                           ;doprnt.c: 1180: while(width > 0) {
  9392  03B4  3020               	movlw	32
  9393  03B5  0140               	movlb	0	; select bank0
  9394  03B6  00DE               	movwf	??_sprintf
  9395  03B7  0141               	movlb	1	; select bank1
  9396  03B8  0832               	movf	sprintf@sp^(0+128),w
  9397  03B9  0086               	movwf	6
  9398  03BA  0187               	clrf	7
  9399  03BB  0140               	movlb	0	; select bank0
  9400  03BC  085E               	movf	??_sprintf,w
  9401  03BD  0081               	movwf	1
  9402  03BE  3001               	movlw	1
  9403  03BF  00DE               	movwf	??_sprintf
  9404  03C0  085E               	movf	??_sprintf,w
  9405  03C1  0141               	movlb	1	; select bank1
  9406  03C2  07B2               	addwf	sprintf@sp^(0+128),f
  9407                           
  9408                           ;doprnt.c: 1182: width--;
  9409  03C3  30FF               	movlw	255
  9410  03C4  2BA3               	goto	L7
  9411  03C5                     i1l3418:	
  9412                           
  9413                           ;doprnt.c: 1183: }
  9414                           ;doprnt.c: 1188: if(flag & 0x03)
  9415  03C5  3003               	movlw	3
  9416  03C6  0141               	movlb	1	; select bank1
  9417  03C7  052A               	andwf	sprintf@flag^(0+128),w
  9418  03C8  0140               	movlb	0	; select bank0
  9419  03C9  00DE               	movwf	??_sprintf
  9420  03CA  3000               	movlw	0
  9421  03CB  0141               	movlb	1	; select bank1
  9422  03CC  052B               	andwf	(sprintf@flag+1)^(0+128),w
  9423  03CD  0140               	movlb	0	; select bank0
  9424  03CE  00DF               	movwf	??_sprintf+1
  9425  03CF  085E               	movf	??_sprintf,w
  9426  03D0  045F               	iorwf	??_sprintf+1,w
  9427  03D1  1903               	btfsc	3,2
  9428  03D2  2BE1               	goto	i1l3432
  9429                           
  9430                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  9431  03D3  302D               	movlw	45
  9432  03D4                     L11:	
  9433  03D4  00DE               	movwf	??_sprintf
  9434  03D5  0141               	movlb	1	; select bank1
  9435  03D6  0832               	movf	sprintf@sp^(0+128),w
  9436  03D7  0086               	movwf	6
  9437  03D8  0187               	clrf	7
  9438  03D9  0140               	movlb	0	; select bank0
  9439  03DA  085E               	movf	??_sprintf,w
  9440  03DB  0081               	movwf	1
  9441  03DC  3001               	movlw	1
  9442  03DD  00DE               	movwf	??_sprintf
  9443  03DE  085E               	movf	??_sprintf,w
  9444  03DF  0141               	movlb	1	; select bank1
  9445  03E0  07B2               	addwf	sprintf@sp^(0+128),f
  9446  03E1                     i1l3432:	
  9447  03E1  30FF               	movlw	255
  9448  03E2  0140               	movlb	0	; select bank0
  9449  03E3  00DE               	movwf	??_sprintf
  9450  03E4  085E               	movf	??_sprintf,w
  9451  03E5  0141               	movlb	1	; select bank1
  9452  03E6  07B8               	addwf	sprintf@c^(0+128),f
  9453  03E7  0A38               	incf	sprintf@c^(0+128),w
  9454  03E8  1903               	btfsc	3,2
  9455  03E9  2C48               	goto	i1l3440
  9456                           
  9457                           ;doprnt.c: 1200: {
  9458                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  9459                           
  9460                           ;doprnt.c: 1195: }
  9461                           ;doprnt.c: 1196: while(c--) {
  9462  03EA  0838               	movf	sprintf@c^(0+128),w
  9463  03EB  0140               	movlb	0	; select bank0
  9464  03EC  00DE               	movwf	??_sprintf
  9465  03ED  01DF               	clrf	??_sprintf+1
  9466  03EE  35DE               	lslf	??_sprintf,f
  9467  03EF  0DDF               	rlf	??_sprintf+1,f
  9468  03F0  35DE               	lslf	??_sprintf,f
  9469  03F1  0DDF               	rlf	??_sprintf+1,f
  9470  03F2  3000               	movlw	low (_dpowers| (0+32768))
  9471  03F3  075E               	addwf	??_sprintf,w
  9472  03F4  0084               	movwf	4
  9473  03F5  3098               	movlw	high (_dpowers| (0+32768))
  9474  03F6  3D5F               	addwfc	??_sprintf+1,w
  9475  03F7  0085               	movwf	5
  9476  03F8  3F00               	moviw [0]fsr0
  9477  03F9  00F0               	movwf	___lldiv@divisor
  9478  03FA  3F01               	moviw [1]fsr0
  9479  03FB  00F1               	movwf	___lldiv@divisor+1
  9480  03FC  3F02               	moviw [2]fsr0
  9481  03FD  00F2               	movwf	___lldiv@divisor+2
  9482  03FE  3F03               	moviw [3]fsr0
  9483  03FF  00F3               	movwf	___lldiv@divisor+3
  9484  0400  0141               	movlb	1	; select bank1
  9485  0401  0827               	movf	(sprintf@val+3)^(0+128),w
  9486  0402  00F7               	movwf	___lldiv@dividend+3
  9487  0403  0826               	movf	(sprintf@val+2)^(0+128),w
  9488  0404  00F6               	movwf	___lldiv@dividend+2
  9489  0405  0825               	movf	(sprintf@val+1)^(0+128),w
  9490  0406  00F5               	movwf	___lldiv@dividend+1
  9491  0407  0824               	movf	sprintf@val^(0+128),w
  9492  0408  00F4               	movwf	___lldiv@dividend
  9493  0409  3195  25BD  3180   	fcall	___lldiv
  9494  040C  0873               	movf	?___lldiv+3,w
  9495  040D  0141               	movlb	1	; select bank1
  9496  040E  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  9497  040F  0872               	movf	?___lldiv+2,w
  9498  0410  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9499  0411  0871               	movf	?___lldiv+1,w
  9500  0412  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9501  0413  0870               	movf	?___lldiv,w
  9502  0414  00AC               	movwf	sprintf@tmpval^(0+128)
  9503                           
  9504                           ;doprnt.c: 1202: tmpval.vd %= 10;
  9505  0415  3000               	movlw	0
  9506  0416  00F3               	movwf	___llmod@divisor+3
  9507  0417  3000               	movlw	0
  9508  0418  00F2               	movwf	___llmod@divisor+2
  9509  0419  3000               	movlw	0
  9510  041A  00F1               	movwf	___llmod@divisor+1
  9511  041B  300A               	movlw	10
  9512  041C  00F0               	movwf	___llmod@divisor
  9513  041D  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  9514  041E  00F7               	movwf	___llmod@dividend+3
  9515  041F  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  9516  0420  00F6               	movwf	___llmod@dividend+2
  9517  0421  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  9518  0422  00F5               	movwf	___llmod@dividend+1
  9519  0423  082C               	movf	sprintf@tmpval^(0+128),w
  9520  0424  00F4               	movwf	___llmod@dividend
  9521  0425  3195  2536  3180   	fcall	___llmod
  9522  0428  0873               	movf	?___llmod+3,w
  9523  0429  0141               	movlb	1	; select bank1
  9524  042A  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  9525  042B  0872               	movf	?___llmod+2,w
  9526  042C  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9527  042D  0871               	movf	?___llmod+1,w
  9528  042E  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9529  042F  0870               	movf	?___llmod,w
  9530  0430  00AC               	movwf	sprintf@tmpval^(0+128)
  9531                           
  9532                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  9533  0431  082C               	movf	sprintf@tmpval^(0+128),w
  9534  0432  3E30               	addlw	48
  9535  0433  0140               	movlb	0	; select bank0
  9536  0434  2BD4               	goto	L11
  9537  0435                     i1l3434:	
  9538                           ;doprnt.c: 1204: }
  9539                           ;doprnt.c: 1206: }
  9540                           ;doprnt.c: 1207: while(exp > 0) {
  9541                           
  9542                           
  9543                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  9544  0435  3030               	movlw	48
  9545  0436  0140               	movlb	0	; select bank0
  9546  0437  00DE               	movwf	??_sprintf
  9547  0438  0141               	movlb	1	; select bank1
  9548  0439  0832               	movf	sprintf@sp^(0+128),w
  9549  043A  0086               	movwf	6
  9550  043B  0187               	clrf	7
  9551  043C  0140               	movlb	0	; select bank0
  9552  043D  085E               	movf	??_sprintf,w
  9553  043E  0081               	movwf	1
  9554  043F  3001               	movlw	1
  9555  0440  00DE               	movwf	??_sprintf
  9556  0441  085E               	movf	??_sprintf,w
  9557  0442  0141               	movlb	1	; select bank1
  9558  0443  07B2               	addwf	sprintf@sp^(0+128),f
  9559                           
  9560                           ;doprnt.c: 1209: exp--;
  9561  0444  30FF               	movlw	255
  9562  0445  07B0               	addwf	sprintf@exp^(0+128),f
  9563  0446  30FF               	movlw	255
  9564  0447  3DB1               	addwfc	(sprintf@exp+1)^(0+128),f
  9565  0448                     i1l3440:	
  9566  0448  0831               	movf	(sprintf@exp+1)^(0+128),w
  9567  0449  3A80               	xorlw	128
  9568  044A  0140               	movlb	0	; select bank0
  9569  044B  00DE               	movwf	??_sprintf
  9570  044C  3080               	movlw	128
  9571  044D  025E               	subwf	??_sprintf,w
  9572  044E  1D03               	skipz
  9573  044F  2C53               	goto	u423_25
  9574  0450  3001               	movlw	1
  9575  0451  0141               	movlb	1	; select bank1
  9576  0452  0230               	subwf	sprintf@exp^(0+128),w
  9577  0453                     u423_25:	
  9578  0453  1803               	skipnc
  9579  0454  2C35               	goto	i1l3434
  9580                           
  9581                           ;doprnt.c: 1210: }
  9582                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9583  0455  0141               	movlb	1	; select bank1
  9584  0456  0837               	movf	(sprintf@prec+1)^(0+128),w
  9585  0457  3A80               	xorlw	128
  9586  0458  0140               	movlb	0	; select bank0
  9587  0459  00DE               	movwf	??_sprintf
  9588  045A  3080               	movlw	128
  9589  045B  025E               	subwf	??_sprintf,w
  9590  045C  1D03               	skipz
  9591  045D  2C61               	goto	u424_25
  9592  045E  3009               	movlw	9
  9593  045F  0141               	movlb	1	; select bank1
  9594  0460  0236               	subwf	sprintf@prec^(0+128),w
  9595  0461                     u424_25:	
  9596  0461  1C03               	skipc
  9597  0462  2C65               	goto	i1l3446
  9598                           
  9599                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  9600  0463  3008               	movlw	8
  9601  0464  2C67               	goto	L8
  9602  0465                     i1l3446:	
  9603                           
  9604                           ;doprnt.c: 1213: else
  9605                           ;doprnt.c: 1214: c = prec;
  9606  0465  0141               	movlb	1	; select bank1
  9607  0466  0836               	movf	sprintf@prec^(0+128),w
  9608  0467                     L8:	
  9609  0467  0140               	movlb	0	; select bank0
  9610  0468  00DE               	movwf	??_sprintf
  9611  0469  085E               	movf	??_sprintf,w
  9612  046A  0141               	movlb	1	; select bank1
  9613  046B  00B8               	movwf	sprintf@c^(0+128)
  9614                           
  9615                           ;doprnt.c: 1215: prec -= c;
  9616  046C  0838               	movf	sprintf@c^(0+128),w
  9617  046D  0140               	movlb	0	; select bank0
  9618  046E  00DE               	movwf	??_sprintf
  9619  046F  01DF               	clrf	??_sprintf+1
  9620  0470  1BDE               	btfsc	??_sprintf,7
  9621  0471  03DF               	decf	??_sprintf+1,f
  9622  0472  085E               	movf	??_sprintf,w
  9623  0473  0141               	movlb	1	; select bank1
  9624  0474  02B6               	subwf	sprintf@prec^(0+128),f
  9625  0475  0140               	movlb	0	; select bank0
  9626  0476  085F               	movf	??_sprintf+1,w
  9627  0477  0141               	movlb	1	; select bank1
  9628  0478  3BB7               	subwfb	(sprintf@prec+1)^(0+128),f
  9629                           
  9630                           ;doprnt.c: 1217: if(c || flag & 0x800)
  9631  0479  0838               	movf	sprintf@c^(0+128),w
  9632  047A  1D03               	btfss	3,2
  9633  047B  2C7E               	goto	i1l3452
  9634  047C  1DAB               	btfss	(sprintf@flag+1)^(0+128),3
  9635  047D  2C8D               	goto	i1l3456
  9636  047E                     i1l3452:	
  9637                           
  9638                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  9639  047E  302E               	movlw	46
  9640  047F  0140               	movlb	0	; select bank0
  9641  0480  00DE               	movwf	??_sprintf
  9642  0481  0141               	movlb	1	; select bank1
  9643  0482  0832               	movf	sprintf@sp^(0+128),w
  9644  0483  0086               	movwf	6
  9645  0484  0187               	clrf	7
  9646  0485  0140               	movlb	0	; select bank0
  9647  0486  085E               	movf	??_sprintf,w
  9648  0487  0081               	movwf	1
  9649  0488  3001               	movlw	1
  9650  0489  00DE               	movwf	??_sprintf
  9651  048A  085E               	movf	??_sprintf,w
  9652  048B  0141               	movlb	1	; select bank1
  9653  048C  07B2               	addwf	sprintf@sp^(0+128),f
  9654  048D                     i1l3456:	
  9655                           
  9656                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9657  048D  0838               	movf	sprintf@c^(0+128),w
  9658  048E  318D  25BC  3180   	fcall	_scale
  9659  0491  0140               	movlb	0	; select bank0
  9660  0492  0838               	movf	?_scale,w
  9661  0493  0141               	movlb	1	; select bank1
  9662  0494  00A0               	movwf	_sprintf$1457^(0+128)
  9663  0495  0140               	movlb	0	; select bank0
  9664  0496  0839               	movf	?_scale+1,w
  9665  0497  0141               	movlb	1	; select bank1
  9666  0498  00A1               	movwf	(_sprintf$1457+1)^(0+128)
  9667  0499  0140               	movlb	0	; select bank0
  9668  049A  083A               	movf	?_scale+2,w
  9669  049B  0141               	movlb	1	; select bank1
  9670  049C  00A2               	movwf	(_sprintf$1457+2)^(0+128)
  9671                           
  9672                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9673  049D  0820               	movf	_sprintf$1457^(0+128),w
  9674  049E  0140               	movlb	0	; select bank0
  9675  049F  00AB               	movwf	___ftmul@f2
  9676  04A0  0141               	movlb	1	; select bank1
  9677  04A1  0821               	movf	(_sprintf$1457+1)^(0+128),w
  9678  04A2  0140               	movlb	0	; select bank0
  9679  04A3  00AC               	movwf	___ftmul@f2+1
  9680  04A4  0141               	movlb	1	; select bank1
  9681  04A5  0822               	movf	(_sprintf$1457+2)^(0+128),w
  9682  04A6  0140               	movlb	0	; select bank0
  9683  04A7  00AD               	movwf	___ftmul@f2+2
  9684  04A8  0141               	movlb	1	; select bank1
  9685  04A9  0833               	movf	sprintf@fval^(0+128),w
  9686  04AA  0140               	movlb	0	; select bank0
  9687  04AB  00A8               	movwf	___ftmul@f1
  9688  04AC  0141               	movlb	1	; select bank1
  9689  04AD  0834               	movf	(sprintf@fval+1)^(0+128),w
  9690  04AE  0140               	movlb	0	; select bank0
  9691  04AF  00A9               	movwf	___ftmul@f1+1
  9692  04B0  0141               	movlb	1	; select bank1
  9693  04B1  0835               	movf	(sprintf@fval+2)^(0+128),w
  9694  04B2  0140               	movlb	0	; select bank0
  9695  04B3  00AA               	movwf	___ftmul@f1+2
  9696  04B4  3188  20C2  3180   	fcall	___ftmul
  9697  04B7  0140               	movlb	0	; select bank0
  9698  04B8  0828               	movf	?___ftmul,w
  9699  04B9  00B8               	movwf	___fttol@f1
  9700  04BA  0829               	movf	?___ftmul+1,w
  9701  04BB  00B9               	movwf	___fttol@f1+1
  9702  04BC  082A               	movf	?___ftmul+2,w
  9703  04BD  00BA               	movwf	___fttol@f1+2
  9704  04BE  3188  203B  3180   	fcall	___fttol
  9705  04C1  0140               	movlb	0	; select bank0
  9706  04C2  083B               	movf	?___fttol+3,w
  9707  04C3  0141               	movlb	1	; select bank1
  9708  04C4  00A7               	movwf	(sprintf@val+3)^(0+128)
  9709  04C5  0140               	movlb	0	; select bank0
  9710  04C6  083A               	movf	?___fttol+2,w
  9711  04C7  0141               	movlb	1	; select bank1
  9712  04C8  00A6               	movwf	(sprintf@val+2)^(0+128)
  9713  04C9  0140               	movlb	0	; select bank0
  9714  04CA  0839               	movf	?___fttol+1,w
  9715  04CB  0141               	movlb	1	; select bank1
  9716  04CC  00A5               	movwf	(sprintf@val+1)^(0+128)
  9717  04CD  0140               	movlb	0	; select bank0
  9718  04CE  0838               	movf	?___fttol,w
  9719  04CF  0141               	movlb	1	; select bank1
  9720  04D0                     L9:	
  9721  04D0  00A4               	movwf	sprintf@val^(0+128)
  9722  04D1  30FF               	movlw	255
  9723  04D2  0140               	movlb	0	; select bank0
  9724  04D3  00DE               	movwf	??_sprintf
  9725  04D4  085E               	movf	??_sprintf,w
  9726  04D5  0141               	movlb	1	; select bank1
  9727  04D6  07B8               	addwf	sprintf@c^(0+128),f
  9728  04D7  0A38               	incf	sprintf@c^(0+128),w
  9729  04D8  1903               	btfsc	3,2
  9730  04D9  2D6F               	goto	i1l3478
  9731                           
  9732                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  9733                           
  9734                           ;doprnt.c: 1228: while(c--) {
  9735  04DA  0838               	movf	sprintf@c^(0+128),w
  9736  04DB  0140               	movlb	0	; select bank0
  9737  04DC  00DE               	movwf	??_sprintf
  9738  04DD  01DF               	clrf	??_sprintf+1
  9739  04DE  35DE               	lslf	??_sprintf,f
  9740  04DF  0DDF               	rlf	??_sprintf+1,f
  9741  04E0  35DE               	lslf	??_sprintf,f
  9742  04E1  0DDF               	rlf	??_sprintf+1,f
  9743  04E2  3000               	movlw	low (_dpowers| (0+32768))
  9744  04E3  075E               	addwf	??_sprintf,w
  9745  04E4  0084               	movwf	4
  9746  04E5  3098               	movlw	high (_dpowers| (0+32768))
  9747  04E6  3D5F               	addwfc	??_sprintf+1,w
  9748  04E7  0085               	movwf	5
  9749  04E8  3F00               	moviw [0]fsr0
  9750  04E9  00F0               	movwf	___lldiv@divisor
  9751  04EA  3F01               	moviw [1]fsr0
  9752  04EB  00F1               	movwf	___lldiv@divisor+1
  9753  04EC  3F02               	moviw [2]fsr0
  9754  04ED  00F2               	movwf	___lldiv@divisor+2
  9755  04EE  3F03               	moviw [3]fsr0
  9756  04EF  00F3               	movwf	___lldiv@divisor+3
  9757  04F0  0141               	movlb	1	; select bank1
  9758  04F1  0827               	movf	(sprintf@val+3)^(0+128),w
  9759  04F2  00F7               	movwf	___lldiv@dividend+3
  9760  04F3  0826               	movf	(sprintf@val+2)^(0+128),w
  9761  04F4  00F6               	movwf	___lldiv@dividend+2
  9762  04F5  0825               	movf	(sprintf@val+1)^(0+128),w
  9763  04F6  00F5               	movwf	___lldiv@dividend+1
  9764  04F7  0824               	movf	sprintf@val^(0+128),w
  9765  04F8  00F4               	movwf	___lldiv@dividend
  9766  04F9  3195  25BD  3180   	fcall	___lldiv
  9767  04FC  0873               	movf	?___lldiv+3,w
  9768  04FD  0141               	movlb	1	; select bank1
  9769  04FE  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  9770  04FF  0872               	movf	?___lldiv+2,w
  9771  0500  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9772  0501  0871               	movf	?___lldiv+1,w
  9773  0502  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9774  0503  0870               	movf	?___lldiv,w
  9775  0504  00AC               	movwf	sprintf@tmpval^(0+128)
  9776                           
  9777                           ;doprnt.c: 1230: tmpval.vd %= 10;
  9778  0505  3000               	movlw	0
  9779  0506  00F3               	movwf	___llmod@divisor+3
  9780  0507  3000               	movlw	0
  9781  0508  00F2               	movwf	___llmod@divisor+2
  9782  0509  3000               	movlw	0
  9783  050A  00F1               	movwf	___llmod@divisor+1
  9784  050B  300A               	movlw	10
  9785  050C  00F0               	movwf	___llmod@divisor
  9786  050D  082F               	movf	(sprintf@tmpval+3)^(0+128),w
  9787  050E  00F7               	movwf	___llmod@dividend+3
  9788  050F  082E               	movf	(sprintf@tmpval+2)^(0+128),w
  9789  0510  00F6               	movwf	___llmod@dividend+2
  9790  0511  082D               	movf	(sprintf@tmpval+1)^(0+128),w
  9791  0512  00F5               	movwf	___llmod@dividend+1
  9792  0513  082C               	movf	sprintf@tmpval^(0+128),w
  9793  0514  00F4               	movwf	___llmod@dividend
  9794  0515  3195  2536  3180   	fcall	___llmod
  9795  0518  0873               	movf	?___llmod+3,w
  9796  0519  0141               	movlb	1	; select bank1
  9797  051A  00AF               	movwf	(sprintf@tmpval+3)^(0+128)
  9798  051B  0872               	movf	?___llmod+2,w
  9799  051C  00AE               	movwf	(sprintf@tmpval+2)^(0+128)
  9800  051D  0871               	movf	?___llmod+1,w
  9801  051E  00AD               	movwf	(sprintf@tmpval+1)^(0+128)
  9802  051F  0870               	movf	?___llmod,w
  9803  0520  00AC               	movwf	sprintf@tmpval^(0+128)
  9804                           
  9805                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  9806  0521  082C               	movf	sprintf@tmpval^(0+128),w
  9807  0522  3E30               	addlw	48
  9808  0523  0140               	movlb	0	; select bank0
  9809  0524  00DE               	movwf	??_sprintf
  9810  0525  0141               	movlb	1	; select bank1
  9811  0526  0832               	movf	sprintf@sp^(0+128),w
  9812  0527  0086               	movwf	6
  9813  0528  0187               	clrf	7
  9814  0529  0140               	movlb	0	; select bank0
  9815  052A  085E               	movf	??_sprintf,w
  9816  052B  0081               	movwf	1
  9817  052C  3001               	movlw	1
  9818  052D  00DE               	movwf	??_sprintf
  9819  052E  085E               	movf	??_sprintf,w
  9820  052F  0141               	movlb	1	; select bank1
  9821  0530  07B2               	addwf	sprintf@sp^(0+128),f
  9822                           
  9823                           ;doprnt.c: 1232: val %= dpowers[c];
  9824  0531  0838               	movf	sprintf@c^(0+128),w
  9825  0532  0140               	movlb	0	; select bank0
  9826  0533  00DE               	movwf	??_sprintf
  9827  0534  01DF               	clrf	??_sprintf+1
  9828  0535  35DE               	lslf	??_sprintf,f
  9829  0536  0DDF               	rlf	??_sprintf+1,f
  9830  0537  35DE               	lslf	??_sprintf,f
  9831  0538  0DDF               	rlf	??_sprintf+1,f
  9832  0539  3000               	movlw	low (_dpowers| (0+32768))
  9833  053A  075E               	addwf	??_sprintf,w
  9834  053B  0084               	movwf	4
  9835  053C  3098               	movlw	high (_dpowers| (0+32768))
  9836  053D  3D5F               	addwfc	??_sprintf+1,w
  9837  053E  0085               	movwf	5
  9838  053F  3F00               	moviw [0]fsr0
  9839  0540  00F0               	movwf	___llmod@divisor
  9840  0541  3F01               	moviw [1]fsr0
  9841  0542  00F1               	movwf	___llmod@divisor+1
  9842  0543  3F02               	moviw [2]fsr0
  9843  0544  00F2               	movwf	___llmod@divisor+2
  9844  0545  3F03               	moviw [3]fsr0
  9845  0546  00F3               	movwf	___llmod@divisor+3
  9846  0547  0141               	movlb	1	; select bank1
  9847  0548  0827               	movf	(sprintf@val+3)^(0+128),w
  9848  0549  00F7               	movwf	___llmod@dividend+3
  9849  054A  0826               	movf	(sprintf@val+2)^(0+128),w
  9850  054B  00F6               	movwf	___llmod@dividend+2
  9851  054C  0825               	movf	(sprintf@val+1)^(0+128),w
  9852  054D  00F5               	movwf	___llmod@dividend+1
  9853  054E  0824               	movf	sprintf@val^(0+128),w
  9854  054F  00F4               	movwf	___llmod@dividend
  9855  0550  3195  2536  3180   	fcall	___llmod
  9856  0553  0873               	movf	?___llmod+3,w
  9857  0554  0141               	movlb	1	; select bank1
  9858  0555  00A7               	movwf	(sprintf@val+3)^(0+128)
  9859  0556  0872               	movf	?___llmod+2,w
  9860  0557  00A6               	movwf	(sprintf@val+2)^(0+128)
  9861  0558  0871               	movf	?___llmod+1,w
  9862  0559  00A5               	movwf	(sprintf@val+1)^(0+128)
  9863  055A  0870               	movf	?___llmod,w
  9864  055B  2CD0               	goto	L9
  9865  055C                     i1l3472:	
  9866                           ;doprnt.c: 1233: }
  9867                           ;doprnt.c: 1235: while(prec) {
  9868                           
  9869                           
  9870                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  9871  055C  3030               	movlw	48
  9872  055D  0140               	movlb	0	; select bank0
  9873  055E  00DE               	movwf	??_sprintf
  9874  055F  0141               	movlb	1	; select bank1
  9875  0560  0832               	movf	sprintf@sp^(0+128),w
  9876  0561  0086               	movwf	6
  9877  0562  0187               	clrf	7
  9878  0563  0140               	movlb	0	; select bank0
  9879  0564  085E               	movf	??_sprintf,w
  9880  0565  0081               	movwf	1
  9881  0566  3001               	movlw	1
  9882  0567  00DE               	movwf	??_sprintf
  9883  0568  085E               	movf	??_sprintf,w
  9884  0569  0141               	movlb	1	; select bank1
  9885  056A  07B2               	addwf	sprintf@sp^(0+128),f
  9886                           
  9887                           ;doprnt.c: 1237: prec--;
  9888  056B  30FF               	movlw	255
  9889  056C  07B6               	addwf	sprintf@prec^(0+128),f
  9890  056D  30FF               	movlw	255
  9891  056E  3DB7               	addwfc	(sprintf@prec+1)^(0+128),f
  9892  056F                     i1l3478:	
  9893  056F  0836               	movf	sprintf@prec^(0+128),w
  9894  0570  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9895  0571  1903               	btfsc	3,2
  9896  0572  2841               	goto	i1l3524
  9897  0573  2D5C               	goto	i1l3472
  9898  0574                     i1l3480:	
  9899                           ;doprnt.c: 1238: }
  9900                           ;doprnt.c: 1245: continue;
  9901                           
  9902                           
  9903                           ;doprnt.c: 1246: }
  9904                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  9905  0574  0141               	movlb	1	; select bank1
  9906  0575  0836               	movf	sprintf@prec^(0+128),w
  9907  0576  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  9908  0577  1D03               	btfss	3,2
  9909  0578  2D83               	goto	i1l602
  9910  0579  0827               	movf	(sprintf@val+3)^(0+128),w
  9911  057A  0426               	iorwf	(sprintf@val+2)^(0+128),w
  9912  057B  0425               	iorwf	(sprintf@val+1)^(0+128),w
  9913  057C  0424               	iorwf	sprintf@val^(0+128),w
  9914  057D  1D03               	skipz
  9915  057E  2D83               	goto	i1l602
  9916                           
  9917                           ;doprnt.c: 1291: prec++;
  9918  057F  3001               	movlw	1
  9919  0580  07B6               	addwf	sprintf@prec^(0+128),f
  9920  0581  3000               	movlw	0
  9921  0582  3DB7               	addwfc	(sprintf@prec+1)^(0+128),f
  9922  0583                     i1l602:	
  9923                           
  9924                           ;doprnt.c: 1339: if(c < prec)
  9925  0583  0838               	movf	sprintf@c^(0+128),w
  9926  0584  0140               	movlb	0	; select bank0
  9927  0585  00DE               	movwf	??_sprintf
  9928  0586  01DF               	clrf	??_sprintf+1
  9929  0587  1BDE               	btfsc	??_sprintf,7
  9930  0588  03DF               	decf	??_sprintf+1,f
  9931  0589  085F               	movf	??_sprintf+1,w
  9932  058A  3A80               	xorlw	128
  9933  058B  00E0               	movwf	??_sprintf+2
  9934  058C  0141               	movlb	1	; select bank1
  9935  058D  0837               	movf	(sprintf@prec+1)^(0+128),w
  9936  058E  3A80               	xorlw	128
  9937  058F  0140               	movlb	0	; select bank0
  9938  0590  0260               	subwf	??_sprintf+2,w
  9939  0591  1D03               	skipz
  9940  0592  2D97               	goto	u431_25
  9941  0593  0141               	movlb	1	; select bank1
  9942  0594  0836               	movf	sprintf@prec^(0+128),w
  9943  0595  0140               	movlb	0	; select bank0
  9944  0596  025E               	subwf	??_sprintf,w
  9945  0597                     u431_25:	
  9946  0597  1803               	skipnc
  9947  0598  2DA1               	goto	i1l3488
  9948                           
  9949                           ;doprnt.c: 1340: c = prec;
  9950  0599  0141               	movlb	1	; select bank1
  9951  059A  0836               	movf	sprintf@prec^(0+128),w
  9952  059B  0140               	movlb	0	; select bank0
  9953  059C  00DE               	movwf	??_sprintf
  9954  059D  085E               	movf	??_sprintf,w
  9955  059E  0141               	movlb	1	; select bank1
  9956  059F  00B8               	movwf	sprintf@c^(0+128)
  9957  05A0  2DBD               	goto	i1l604
  9958  05A1                     i1l3488:	
  9959                           
  9960                           ;doprnt.c: 1341: else if(prec < c)
  9961  05A1  0141               	movlb	1	; select bank1
  9962  05A2  0838               	movf	sprintf@c^(0+128),w
  9963  05A3  0140               	movlb	0	; select bank0
  9964  05A4  00DE               	movwf	??_sprintf
  9965  05A5  01DF               	clrf	??_sprintf+1
  9966  05A6  1BDE               	btfsc	??_sprintf,7
  9967  05A7  03DF               	decf	??_sprintf+1,f
  9968  05A8  0141               	movlb	1	; select bank1
  9969  05A9  0837               	movf	(sprintf@prec+1)^(0+128),w
  9970  05AA  3A80               	xorlw	128
  9971  05AB  0140               	movlb	0	; select bank0
  9972  05AC  00E0               	movwf	??_sprintf+2
  9973  05AD  085F               	movf	??_sprintf+1,w
  9974  05AE  3A80               	xorlw	128
  9975  05AF  0260               	subwf	??_sprintf+2,w
  9976  05B0  1D03               	skipz
  9977  05B1  2DB5               	goto	u432_25
  9978  05B2  085E               	movf	??_sprintf,w
  9979  05B3  0141               	movlb	1	; select bank1
  9980  05B4  0236               	subwf	sprintf@prec^(0+128),w
  9981  05B5                     u432_25:	
  9982  05B5  1803               	skipnc
  9983  05B6  2DBD               	goto	i1l604
  9984                           
  9985                           ;doprnt.c: 1342: prec = c;
  9986  05B7  0141               	movlb	1	; select bank1
  9987  05B8  0838               	movf	sprintf@c^(0+128),w
  9988  05B9  00B6               	movwf	sprintf@prec^(0+128)
  9989  05BA  01B7               	clrf	(sprintf@prec+1)^(0+128)
  9990  05BB  1BB6               	btfsc	sprintf@prec^(0+128),7
  9991  05BC  03B7               	decf	(sprintf@prec+1)^(0+128),f
  9992  05BD                     i1l604:	
  9993                           
  9994                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9995  05BD  0141               	movlb	1	; select bank1
  9996  05BE  0828               	movf	sprintf@width^(0+128),w
  9997  05BF  0429               	iorwf	(sprintf@width+1)^(0+128),w
  9998  05C0  1903               	btfsc	3,2
  9999  05C1  2DD4               	goto	i1l3496
 10000  05C2  3003               	movlw	3
 10001  05C3  052A               	andwf	sprintf@flag^(0+128),w
 10002  05C4  0140               	movlb	0	; select bank0
 10003  05C5  00DE               	movwf	??_sprintf
 10004  05C6  3000               	movlw	0
 10005  05C7  0141               	movlb	1	; select bank1
 10006  05C8  052B               	andwf	(sprintf@flag+1)^(0+128),w
 10007  05C9  0140               	movlb	0	; select bank0
 10008  05CA  00DF               	movwf	??_sprintf+1
 10009  05CB  085E               	movf	??_sprintf,w
 10010  05CC  045F               	iorwf	??_sprintf+1,w
 10011  05CD  1903               	btfsc	3,2
 10012  05CE  2DD4               	goto	i1l3496
 10013                           
 10014                           ;doprnt.c: 1346: width--;
 10015  05CF  30FF               	movlw	255
 10016  05D0  0141               	movlb	1	; select bank1
 10017  05D1  07A8               	addwf	sprintf@width^(0+128),f
 10018  05D2  30FF               	movlw	255
 10019  05D3  3DA9               	addwfc	(sprintf@width+1)^(0+128),f
 10020  05D4                     i1l3496:	
 10021                           
 10022                           ;doprnt.c: 1348: if(flag & 0x4000) {
 10023  05D4  0141               	movlb	1	; select bank1
 10024  05D5  1F2B               	btfss	(sprintf@flag+1)^(0+128),6
 10025  05D6  2DF0               	goto	i1l3504
 10026                           
 10027                           ;doprnt.c: 1349: if(width > prec)
 10028  05D7  0837               	movf	(sprintf@prec+1)^(0+128),w
 10029  05D8  3A80               	xorlw	128
 10030  05D9  0140               	movlb	0	; select bank0
 10031  05DA  00DE               	movwf	??_sprintf
 10032  05DB  0141               	movlb	1	; select bank1
 10033  05DC  0829               	movf	(sprintf@width+1)^(0+128),w
 10034  05DD  3A80               	xorlw	128
 10035  05DE  0140               	movlb	0	; select bank0
 10036  05DF  025E               	subwf	??_sprintf,w
 10037  05E0  1D03               	skipz
 10038  05E1  2DE5               	goto	u436_25
 10039  05E2  0141               	movlb	1	; select bank1
 10040  05E3  0828               	movf	sprintf@width^(0+128),w
 10041  05E4  0236               	subwf	sprintf@prec^(0+128),w
 10042  05E5                     u436_25:	
 10043  05E5  1803               	skipnc
 10044  05E6  2DED               	goto	i1l3502
 10045                           
 10046                           ;doprnt.c: 1350: width -= prec;
 10047  05E7  0141               	movlb	1	; select bank1
 10048  05E8  0836               	movf	sprintf@prec^(0+128),w
 10049  05E9  02A8               	subwf	sprintf@width^(0+128),f
 10050  05EA  0837               	movf	(sprintf@prec+1)^(0+128),w
 10051  05EB  3BA9               	subwfb	(sprintf@width+1)^(0+128),f
 10052  05EC  2DF0               	goto	i1l3504
 10053  05ED                     i1l3502:	
 10054                           
 10055                           ;doprnt.c: 1351: else
 10056                           ;doprnt.c: 1352: width = 0;
 10057  05ED  0141               	movlb	1	; select bank1
 10058  05EE  01A8               	clrf	sprintf@width^(0+128)
 10059  05EF  01A9               	clrf	(sprintf@width+1)^(0+128)
 10060  05F0                     i1l3504:	
 10061                           
 10062                           ;doprnt.c: 1353: }
 10063                           ;doprnt.c: 1381: if(width > c)
 10064  05F0  0838               	movf	sprintf@c^(0+128),w
 10065  05F1  0140               	movlb	0	; select bank0
 10066  05F2  00DE               	movwf	??_sprintf
 10067  05F3  01DF               	clrf	??_sprintf+1
 10068  05F4  1BDE               	btfsc	??_sprintf,7
 10069  05F5  03DF               	decf	??_sprintf+1,f
 10070  05F6  085F               	movf	??_sprintf+1,w
 10071  05F7  3A80               	xorlw	128
 10072  05F8  00E0               	movwf	??_sprintf+2
 10073  05F9  0141               	movlb	1	; select bank1
 10074  05FA  0829               	movf	(sprintf@width+1)^(0+128),w
 10075  05FB  3A80               	xorlw	128
 10076  05FC  0140               	movlb	0	; select bank0
 10077  05FD  0260               	subwf	??_sprintf+2,w
 10078  05FE  1D03               	skipz
 10079  05FF  2E04               	goto	u437_25
 10080  0600  0141               	movlb	1	; select bank1
 10081  0601  0828               	movf	sprintf@width^(0+128),w
 10082  0602  0140               	movlb	0	; select bank0
 10083  0603  025E               	subwf	??_sprintf,w
 10084  0604                     u437_25:	
 10085  0604  1803               	skipnc
 10086  0605  2E15               	goto	i1l3508
 10087                           
 10088                           ;doprnt.c: 1382: width -= c;
 10089  0606  0141               	movlb	1	; select bank1
 10090  0607  0838               	movf	sprintf@c^(0+128),w
 10091  0608  0140               	movlb	0	; select bank0
 10092  0609  00DE               	movwf	??_sprintf
 10093  060A  01DF               	clrf	??_sprintf+1
 10094  060B  1BDE               	btfsc	??_sprintf,7
 10095  060C  03DF               	decf	??_sprintf+1,f
 10096  060D  085E               	movf	??_sprintf,w
 10097  060E  0141               	movlb	1	; select bank1
 10098  060F  02A8               	subwf	sprintf@width^(0+128),f
 10099  0610  0140               	movlb	0	; select bank0
 10100  0611  085F               	movf	??_sprintf+1,w
 10101  0612  0141               	movlb	1	; select bank1
 10102  0613  3BA9               	subwfb	(sprintf@width+1)^(0+128),f
 10103  0614  2E18               	goto	i1l3510
 10104  0615                     i1l3508:	
 10105                           
 10106                           ;doprnt.c: 1383: else
 10107                           ;doprnt.c: 1384: width = 0;
 10108  0615  0141               	movlb	1	; select bank1
 10109  0616  01A8               	clrf	sprintf@width^(0+128)
 10110  0617  01A9               	clrf	(sprintf@width+1)^(0+128)
 10111  0618                     i1l3510:	
 10112                           
 10113                           ;doprnt.c: 1422: {
 10114                           ;doprnt.c: 1424: if(width
 10115                           ;doprnt.c: 1428: )
 10116  0618  0828               	movf	sprintf@width^(0+128),w
 10117  0619  0429               	iorwf	(sprintf@width+1)^(0+128),w
 10118  061A  1903               	btfsc	3,2
 10119  061B  2E33               	goto	i1l3518
 10120  061C                     i1l3512:	
 10121                           ;doprnt.c: 1429: do
 10122                           
 10123                           
 10124                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 10125  061C  3020               	movlw	32
 10126  061D  0140               	movlb	0	; select bank0
 10127  061E  00DE               	movwf	??_sprintf
 10128  061F  0141               	movlb	1	; select bank1
 10129  0620  0832               	movf	sprintf@sp^(0+128),w
 10130  0621  0086               	movwf	6
 10131  0622  0187               	clrf	7
 10132  0623  0140               	movlb	0	; select bank0
 10133  0624  085E               	movf	??_sprintf,w
 10134  0625  0081               	movwf	1
 10135  0626  3001               	movlw	1
 10136  0627  00DE               	movwf	??_sprintf
 10137  0628  085E               	movf	??_sprintf,w
 10138  0629  0141               	movlb	1	; select bank1
 10139  062A  07B2               	addwf	sprintf@sp^(0+128),f
 10140                           
 10141                           ;doprnt.c: 1431: while(--width);
 10142  062B  30FF               	movlw	255
 10143  062C  07A8               	addwf	sprintf@width^(0+128),f
 10144  062D  30FF               	movlw	255
 10145  062E  3DA9               	addwfc	(sprintf@width+1)^(0+128),f
 10146  062F  0828               	movf	sprintf@width^(0+128),w
 10147  0630  0429               	iorwf	(sprintf@width+1)^(0+128),w
 10148  0631  1D03               	btfss	3,2
 10149  0632  2E1C               	goto	i1l3512
 10150  0633                     i1l3518:	
 10151                           
 10152                           ;doprnt.c: 1438: if(flag & 0x03)
 10153  0633  3003               	movlw	3
 10154  0634  052A               	andwf	sprintf@flag^(0+128),w
 10155  0635  0140               	movlb	0	; select bank0
 10156  0636  00DE               	movwf	??_sprintf
 10157  0637  3000               	movlw	0
 10158  0638  0141               	movlb	1	; select bank1
 10159  0639  052B               	andwf	(sprintf@flag+1)^(0+128),w
 10160  063A  0140               	movlb	0	; select bank0
 10161  063B  00DF               	movwf	??_sprintf+1
 10162  063C  085E               	movf	??_sprintf,w
 10163  063D  045F               	iorwf	??_sprintf+1,w
 10164  063E  1903               	btfsc	3,2
 10165  063F  2841               	goto	i1l3524
 10166                           
 10167                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 10168  0640  302D               	movlw	45
 10169  0641                     L10:	
 10170  0641  00DE               	movwf	??_sprintf
 10171  0642  0141               	movlb	1	; select bank1
 10172  0643  0832               	movf	sprintf@sp^(0+128),w
 10173  0644  0086               	movwf	6
 10174  0645  0187               	clrf	7
 10175  0646  0140               	movlb	0	; select bank0
 10176  0647  085E               	movf	??_sprintf,w
 10177  0648  0081               	movwf	1
 10178  0649  3001               	movlw	1
 10179  064A  00DE               	movwf	??_sprintf
 10180  064B  085E               	movf	??_sprintf,w
 10181  064C  0141               	movlb	1	; select bank1
 10182  064D  07B2               	addwf	sprintf@sp^(0+128),f
 10183  064E  2841               	goto	i1l3524
 10184  064F                     i1l3526:	
 10185                           ;doprnt.c: 1469: }
 10186                           ;doprnt.c: 1533: }
 10187                           ;doprnt.c: 1535: alldone:
 10188                           
 10189                           
 10190                           ;doprnt.c: 1538: *sp = 0;
 10191  064F  0832               	movf	sprintf@sp^(0+128),w
 10192  0650  0086               	movwf	6
 10193  0651  0187               	clrf	7
 10194  0652  0181               	clrf	1
 10195  0653  0008               	return
 10196  0654                     __end_of_sprintf:	
 10197                           ;doprnt.c: 1540: return 0;
 10198                           ;	Return value of _sprintf is never used
 10199                           
 10200                           
 10201                           	psect	text27
 10202  0DBC                     __ptext27:	
 10203 ;; *************** function _scale *****************
 10204 ;; Defined at:
 10205 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;  scl             1    wreg     char 
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;  scl             1   32[BANK0 ] char 
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  3   24[BANK0 ] char 
 10212 ;; Registers used:
 10213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10219 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10220 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10221 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10222 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10223 ;;Total ram usage:        9 bytes
 10224 ;; Hardware stack levels used:    1
 10225 ;; Hardware stack levels required when called:    2
 10226 ;; This function calls:
 10227 ;;		___awdiv
 10228 ;;		___awmod
 10229 ;;		___ftmul
 10230 ;;		i1___wmul
 10231 ;; This function is called by:
 10232 ;;		_sprintf
 10233 ;; This function uses a non-reentrant model
 10234 ;;
 10235                           
 10236                           
 10237                           ;psect for function _scale
 10238  0DBC                     _scale:	
 10239                           
 10240                           ;incstack = 0
 10241                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10242                           ;scale@scl stored from wreg
 10243  0DBC  0140               	movlb	0	; select bank0
 10244  0DBD  00C0               	movwf	scale@scl
 10245                           
 10246                           ;doprnt.c: 428: if(scl < 0) {
 10247  0DBE  1FC0               	btfss	scale@scl,7
 10248  0DBF  2EE1               	goto	i1l2842
 10249                           
 10250                           ;doprnt.c: 429: scl = -scl;
 10251  0DC0  09C0               	comf	scale@scl,f
 10252  0DC1  0AC0               	incf	scale@scl,f
 10253                           
 10254                           ;doprnt.c: 430: if(scl>=110)
 10255  0DC2  0840               	movf	scale@scl,w
 10256  0DC3  3A80               	xorlw	128
 10257  0DC4  3E12               	addlw	-238
 10258  0DC5  1C03               	skipc
 10259  0DC6  2E65               	goto	i1l2832
 10260                           
 10261                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10262  0DC7  300A               	movlw	10
 10263  0DC8  00F7               	movwf	___awdiv@divisor
 10264  0DC9  3000               	movlw	0
 10265  0DCA  00F8               	movwf	___awdiv@divisor+1
 10266  0DCB  0840               	movf	scale@scl,w
 10267  0DCC  00F2               	movwf	___awmod@dividend
 10268  0DCD  01F3               	clrf	___awmod@dividend+1
 10269  0DCE  1BF2               	btfsc	___awmod@dividend,7
 10270  0DCF  03F3               	decf	___awmod@dividend+1,f
 10271  0DD0  3064               	movlw	100
 10272  0DD1  00F0               	movwf	___awmod@divisor
 10273  0DD2  3000               	movlw	0
 10274  0DD3  00F1               	movwf	___awmod@divisor+1
 10275  0DD4  3195  2578  318D   	fcall	___awmod
 10276  0DD7  0871               	movf	?___awmod+1,w
 10277  0DD8  00FA               	movwf	___awdiv@dividend+1
 10278  0DD9  0870               	movf	?___awmod,w
 10279  0DDA  00F9               	movwf	___awdiv@dividend
 10280  0DDB  3196  260F  318D   	fcall	___awdiv
 10281  0DDE  0877               	movf	?___awdiv,w
 10282  0DDF  3E09               	addlw	9
 10283  0DE0  0140               	movlb	0	; select bank0
 10284  0DE1  00A4               	movwf	i1___wmul@multiplier
 10285  0DE2  3000               	movlw	0
 10286  0DE3  3D78               	addwfc	?___awdiv+1,w
 10287  0DE4  00A5               	movwf	i1___wmul@multiplier+1
 10288  0DE5  3003               	movlw	3
 10289  0DE6  00A6               	movwf	i1___wmul@multiplicand
 10290  0DE7  3000               	movlw	0
 10291  0DE8  00A7               	movwf	i1___wmul@multiplicand+1
 10292  0DE9  3193  239E  318D   	fcall	i1___wmul
 10293  0DEC  0140               	movlb	0	; select bank0
 10294  0DED  0825               	movf	?i1___wmul+1,w
 10295  0DEE  0085               	movwf	5
 10296  0DEF  0824               	movf	?i1___wmul,w
 10297  0DF0  0084               	movwf	4
 10298  0DF1  304F               	movlw	low (__npowers_| (0+32768))
 10299  0DF2  0784               	addwf	4,f
 10300  0DF3  3098               	movlw	high (__npowers_| (0+32768))
 10301  0DF4  3D85               	addwfc	5,f
 10302  0DF5  3F00               	moviw [0]fsr0
 10303  0DF6  00A8               	movwf	___ftmul@f1
 10304  0DF7  3F01               	moviw [1]fsr0
 10305  0DF8  00A9               	movwf	___ftmul@f1+1
 10306  0DF9  3F02               	moviw [2]fsr0
 10307  0DFA  00AA               	movwf	___ftmul@f1+2
 10308  0DFB  3064               	movlw	100
 10309  0DFC  00F7               	movwf	___awdiv@divisor
 10310  0DFD  3000               	movlw	0
 10311  0DFE  00F8               	movwf	___awdiv@divisor+1
 10312  0DFF  0840               	movf	scale@scl,w
 10313  0E00  00F9               	movwf	___awdiv@dividend
 10314  0E01  01FA               	clrf	___awdiv@dividend+1
 10315  0E02  1BF9               	btfsc	___awdiv@dividend,7
 10316  0E03  03FA               	decf	___awdiv@dividend+1,f
 10317  0E04  3196  260F  318D   	fcall	___awdiv
 10318  0E07  0877               	movf	?___awdiv,w
 10319  0E08  3E12               	addlw	18
 10320  0E09  0140               	movlb	0	; select bank0
 10321  0E0A  00A4               	movwf	i1___wmul@multiplier
 10322  0E0B  3000               	movlw	0
 10323  0E0C  3D78               	addwfc	?___awdiv+1,w
 10324  0E0D  00A5               	movwf	i1___wmul@multiplier+1
 10325  0E0E  3003               	movlw	3
 10326  0E0F  00A6               	movwf	i1___wmul@multiplicand
 10327  0E10  3000               	movlw	0
 10328  0E11  00A7               	movwf	i1___wmul@multiplicand+1
 10329  0E12  3193  239E  318D   	fcall	i1___wmul
 10330  0E15  0140               	movlb	0	; select bank0
 10331  0E16  0825               	movf	?i1___wmul+1,w
 10332  0E17  0085               	movwf	5
 10333  0E18  0824               	movf	?i1___wmul,w
 10334  0E19  0084               	movwf	4
 10335  0E1A  304F               	movlw	low (__npowers_| (0+32768))
 10336  0E1B  0784               	addwf	4,f
 10337  0E1C  3098               	movlw	high (__npowers_| (0+32768))
 10338  0E1D  3D85               	addwfc	5,f
 10339  0E1E  3F00               	moviw [0]fsr0
 10340  0E1F  00AB               	movwf	___ftmul@f2
 10341  0E20  3F01               	moviw [1]fsr0
 10342  0E21  00AC               	movwf	___ftmul@f2+1
 10343  0E22  3F02               	moviw [2]fsr0
 10344  0E23  00AD               	movwf	___ftmul@f2+2
 10345  0E24  3188  20C2  318D   	fcall	___ftmul
 10346  0E27  0140               	movlb	0	; select bank0
 10347  0E28  0828               	movf	?___ftmul,w
 10348  0E29  00BD               	movwf	_scale$1456
 10349  0E2A  0829               	movf	?___ftmul+1,w
 10350  0E2B  00BE               	movwf	_scale$1456+1
 10351  0E2C  082A               	movf	?___ftmul+2,w
 10352  0E2D  00BF               	movwf	_scale$1456+2
 10353                           
 10354                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10355  0E2E  0840               	movf	scale@scl,w
 10356  0E2F  00F2               	movwf	___awmod@dividend
 10357  0E30  01F3               	clrf	___awmod@dividend+1
 10358  0E31  1BF2               	btfsc	___awmod@dividend,7
 10359  0E32  03F3               	decf	___awmod@dividend+1,f
 10360  0E33  300A               	movlw	10
 10361  0E34  00F0               	movwf	___awmod@divisor
 10362  0E35  3000               	movlw	0
 10363  0E36  00F1               	movwf	___awmod@divisor+1
 10364  0E37  3195  2578  318D   	fcall	___awmod
 10365  0E3A  0871               	movf	?___awmod+1,w
 10366  0E3B  0140               	movlb	0	; select bank0
 10367  0E3C  00A5               	movwf	i1___wmul@multiplier+1
 10368  0E3D  0870               	movf	?___awmod,w
 10369  0E3E  00A4               	movwf	i1___wmul@multiplier
 10370  0E3F  3003               	movlw	3
 10371  0E40  00A6               	movwf	i1___wmul@multiplicand
 10372  0E41  3000               	movlw	0
 10373  0E42  00A7               	movwf	i1___wmul@multiplicand+1
 10374  0E43  3193  239E  318D   	fcall	i1___wmul
 10375  0E46  0140               	movlb	0	; select bank0
 10376  0E47  0825               	movf	?i1___wmul+1,w
 10377  0E48  0085               	movwf	5
 10378  0E49  0824               	movf	?i1___wmul,w
 10379  0E4A  0084               	movwf	4
 10380  0E4B  304F               	movlw	low (__npowers_| (0+32768))
 10381  0E4C  0784               	addwf	4,f
 10382  0E4D  3098               	movlw	high (__npowers_| (0+32768))
 10383  0E4E  3D85               	addwfc	5,f
 10384  0E4F  3F00               	moviw [0]fsr0
 10385  0E50  00A8               	movwf	___ftmul@f1
 10386  0E51  3F01               	moviw [1]fsr0
 10387  0E52  00A9               	movwf	___ftmul@f1+1
 10388  0E53  3F02               	moviw [2]fsr0
 10389  0E54  00AA               	movwf	___ftmul@f1+2
 10390  0E55  083D               	movf	_scale$1456,w
 10391  0E56  00AB               	movwf	___ftmul@f2
 10392  0E57  083E               	movf	_scale$1456+1,w
 10393  0E58  00AC               	movwf	___ftmul@f2+1
 10394  0E59  083F               	movf	_scale$1456+2,w
 10395  0E5A  00AD               	movwf	___ftmul@f2+2
 10396  0E5B  3188  20C2         	fcall	___ftmul
 10397  0E5D  0140               	movlb	0	; select bank0
 10398  0E5E  0828               	movf	?___ftmul,w
 10399  0E5F  00B8               	movwf	?_scale
 10400  0E60  0829               	movf	?___ftmul+1,w
 10401  0E61  00B9               	movwf	?_scale+1
 10402  0E62  082A               	movf	?___ftmul+2,w
 10403  0E63  00BA               	movwf	?_scale+2
 10404  0E64  0008               	return
 10405  0E65                     i1l2832:	
 10406                           
 10407                           ;doprnt.c: 432: else if(scl > 10)
 10408  0E65  0840               	movf	scale@scl,w
 10409  0E66  3A80               	xorlw	128
 10410  0E67  3E75               	addlw	-139
 10411  0E68  1C03               	skipc
 10412  0E69  2EC4               	goto	i1l2838
 10413                           
 10414                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 10415  0E6A  0840               	movf	scale@scl,w
 10416  0E6B  00F2               	movwf	___awmod@dividend
 10417  0E6C  01F3               	clrf	___awmod@dividend+1
 10418  0E6D  1BF2               	btfsc	___awmod@dividend,7
 10419  0E6E  03F3               	decf	___awmod@dividend+1,f
 10420  0E6F  300A               	movlw	10
 10421  0E70  00F0               	movwf	___awmod@divisor
 10422  0E71  3000               	movlw	0
 10423  0E72  00F1               	movwf	___awmod@divisor+1
 10424  0E73  3195  2578  318D   	fcall	___awmod
 10425  0E76  0871               	movf	?___awmod+1,w
 10426  0E77  0140               	movlb	0	; select bank0
 10427  0E78  00A5               	movwf	i1___wmul@multiplier+1
 10428  0E79  0870               	movf	?___awmod,w
 10429  0E7A  00A4               	movwf	i1___wmul@multiplier
 10430  0E7B  3003               	movlw	3
 10431  0E7C  00A6               	movwf	i1___wmul@multiplicand
 10432  0E7D  3000               	movlw	0
 10433  0E7E  00A7               	movwf	i1___wmul@multiplicand+1
 10434  0E7F  3193  239E  318D   	fcall	i1___wmul
 10435  0E82  0140               	movlb	0	; select bank0
 10436  0E83  0825               	movf	?i1___wmul+1,w
 10437  0E84  0085               	movwf	5
 10438  0E85  0824               	movf	?i1___wmul,w
 10439  0E86  0084               	movwf	4
 10440  0E87  304F               	movlw	low (__npowers_| (0+32768))
 10441  0E88  0784               	addwf	4,f
 10442  0E89  3098               	movlw	high (__npowers_| (0+32768))
 10443  0E8A  3D85               	addwfc	5,f
 10444  0E8B  3F00               	moviw [0]fsr0
 10445  0E8C  00A8               	movwf	___ftmul@f1
 10446  0E8D  3F01               	moviw [1]fsr0
 10447  0E8E  00A9               	movwf	___ftmul@f1+1
 10448  0E8F  3F02               	moviw [2]fsr0
 10449  0E90  00AA               	movwf	___ftmul@f1+2
 10450  0E91  300A               	movlw	10
 10451  0E92  00F7               	movwf	___awdiv@divisor
 10452  0E93  3000               	movlw	0
 10453  0E94  00F8               	movwf	___awdiv@divisor+1
 10454  0E95  0840               	movf	scale@scl,w
 10455  0E96  00F9               	movwf	___awdiv@dividend
 10456  0E97  01FA               	clrf	___awdiv@dividend+1
 10457  0E98  1BF9               	btfsc	___awdiv@dividend,7
 10458  0E99  03FA               	decf	___awdiv@dividend+1,f
 10459  0E9A  3196  260F  318D   	fcall	___awdiv
 10460  0E9D  0877               	movf	?___awdiv,w
 10461  0E9E  3E09               	addlw	9
 10462  0E9F  0140               	movlb	0	; select bank0
 10463  0EA0  00A4               	movwf	i1___wmul@multiplier
 10464  0EA1  3000               	movlw	0
 10465  0EA2  3D78               	addwfc	?___awdiv+1,w
 10466  0EA3  00A5               	movwf	i1___wmul@multiplier+1
 10467  0EA4  3003               	movlw	3
 10468  0EA5  00A6               	movwf	i1___wmul@multiplicand
 10469  0EA6  3000               	movlw	0
 10470  0EA7  00A7               	movwf	i1___wmul@multiplicand+1
 10471  0EA8  3193  239E  318D   	fcall	i1___wmul
 10472  0EAB  0140               	movlb	0	; select bank0
 10473  0EAC  0825               	movf	?i1___wmul+1,w
 10474  0EAD  0085               	movwf	5
 10475  0EAE  0824               	movf	?i1___wmul,w
 10476  0EAF  0084               	movwf	4
 10477  0EB0  304F               	movlw	low (__npowers_| (0+32768))
 10478  0EB1  0784               	addwf	4,f
 10479  0EB2  3098               	movlw	high (__npowers_| (0+32768))
 10480  0EB3  3D85               	addwfc	5,f
 10481  0EB4  3F00               	moviw [0]fsr0
 10482  0EB5  00AB               	movwf	___ftmul@f2
 10483  0EB6  3F01               	moviw [1]fsr0
 10484  0EB7  00AC               	movwf	___ftmul@f2+1
 10485  0EB8  3F02               	moviw [2]fsr0
 10486  0EB9  00AD               	movwf	___ftmul@f2+2
 10487  0EBA  3188  20C2         	fcall	___ftmul
 10488  0EBC  0140               	movlb	0	; select bank0
 10489  0EBD  0828               	movf	?___ftmul,w
 10490  0EBE  00B8               	movwf	?_scale
 10491  0EBF  0829               	movf	?___ftmul+1,w
 10492  0EC0  00B9               	movwf	?_scale+1
 10493  0EC1  082A               	movf	?___ftmul+2,w
 10494  0EC2  00BA               	movwf	?_scale+2
 10495  0EC3  0008               	return
 10496  0EC4                     i1l2838:	
 10497                           
 10498                           ;doprnt.c: 434: return _npowers_[scl];
 10499  0EC4  0840               	movf	scale@scl,w
 10500  0EC5  00BB               	movwf	??_scale
 10501  0EC6  01BC               	clrf	??_scale+1
 10502  0EC7  083B               	movf	??_scale,w
 10503  0EC8  00A4               	movwf	i1___wmul@multiplier
 10504  0EC9  083C               	movf	??_scale+1,w
 10505  0ECA  00A5               	movwf	i1___wmul@multiplier+1
 10506  0ECB  3003               	movlw	3
 10507  0ECC  00A6               	movwf	i1___wmul@multiplicand
 10508  0ECD  3000               	movlw	0
 10509  0ECE  00A7               	movwf	i1___wmul@multiplicand+1
 10510  0ECF  3193  239E         	fcall	i1___wmul
 10511  0ED1  0140               	movlb	0	; select bank0
 10512  0ED2  0825               	movf	?i1___wmul+1,w
 10513  0ED3  0085               	movwf	5
 10514  0ED4  0824               	movf	?i1___wmul,w
 10515  0ED5  0084               	movwf	4
 10516  0ED6  304F               	movlw	low (__npowers_| (0+32768))
 10517  0ED7  0784               	addwf	4,f
 10518  0ED8  3098               	movlw	high (__npowers_| (0+32768))
 10519  0ED9  3D85               	addwfc	5,f
 10520  0EDA  3F00               	moviw [0]fsr0
 10521  0EDB  00B8               	movwf	?_scale
 10522  0EDC  3F01               	moviw [1]fsr0
 10523  0EDD  00B9               	movwf	?_scale+1
 10524  0EDE  3F02               	moviw [2]fsr0
 10525  0EDF  00BA               	movwf	?_scale+2
 10526  0EE0  0008               	return
 10527  0EE1                     i1l2842:	
 10528                           
 10529                           ;doprnt.c: 435: }
 10530                           ;doprnt.c: 436: if(scl>=110)
 10531  0EE1  0840               	movf	scale@scl,w
 10532  0EE2  3A80               	xorlw	128
 10533  0EE3  3E12               	addlw	-238
 10534  0EE4  1C03               	skipc
 10535  0EE5  2F84               	goto	i1l2850
 10536                           
 10537                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10538  0EE6  300A               	movlw	10
 10539  0EE7  00F7               	movwf	___awdiv@divisor
 10540  0EE8  3000               	movlw	0
 10541  0EE9  00F8               	movwf	___awdiv@divisor+1
 10542  0EEA  0840               	movf	scale@scl,w
 10543  0EEB  00F2               	movwf	___awmod@dividend
 10544  0EEC  01F3               	clrf	___awmod@dividend+1
 10545  0EED  1BF2               	btfsc	___awmod@dividend,7
 10546  0EEE  03F3               	decf	___awmod@dividend+1,f
 10547  0EEF  3064               	movlw	100
 10548  0EF0  00F0               	movwf	___awmod@divisor
 10549  0EF1  3000               	movlw	0
 10550  0EF2  00F1               	movwf	___awmod@divisor+1
 10551  0EF3  3195  2578  318D   	fcall	___awmod
 10552  0EF6  0871               	movf	?___awmod+1,w
 10553  0EF7  00FA               	movwf	___awdiv@dividend+1
 10554  0EF8  0870               	movf	?___awmod,w
 10555  0EF9  00F9               	movwf	___awdiv@dividend
 10556  0EFA  3196  260F  318D   	fcall	___awdiv
 10557  0EFD  0877               	movf	?___awdiv,w
 10558  0EFE  3E09               	addlw	9
 10559  0EFF  0140               	movlb	0	; select bank0
 10560  0F00  00A4               	movwf	i1___wmul@multiplier
 10561  0F01  3000               	movlw	0
 10562  0F02  3D78               	addwfc	?___awdiv+1,w
 10563  0F03  00A5               	movwf	i1___wmul@multiplier+1
 10564  0F04  3003               	movlw	3
 10565  0F05  00A6               	movwf	i1___wmul@multiplicand
 10566  0F06  3000               	movlw	0
 10567  0F07  00A7               	movwf	i1___wmul@multiplicand+1
 10568  0F08  3193  239E  318D   	fcall	i1___wmul
 10569  0F0B  0140               	movlb	0	; select bank0
 10570  0F0C  0825               	movf	?i1___wmul+1,w
 10571  0F0D  0085               	movwf	5
 10572  0F0E  0824               	movf	?i1___wmul,w
 10573  0F0F  0084               	movwf	4
 10574  0F10  3028               	movlw	low (__powers_| (0+32768))
 10575  0F11  0784               	addwf	4,f
 10576  0F12  3098               	movlw	high (__powers_| (0+32768))
 10577  0F13  3D85               	addwfc	5,f
 10578  0F14  3F00               	moviw [0]fsr0
 10579  0F15  00A8               	movwf	___ftmul@f1
 10580  0F16  3F01               	moviw [1]fsr0
 10581  0F17  00A9               	movwf	___ftmul@f1+1
 10582  0F18  3F02               	moviw [2]fsr0
 10583  0F19  00AA               	movwf	___ftmul@f1+2
 10584  0F1A  3064               	movlw	100
 10585  0F1B  00F7               	movwf	___awdiv@divisor
 10586  0F1C  3000               	movlw	0
 10587  0F1D  00F8               	movwf	___awdiv@divisor+1
 10588  0F1E  0840               	movf	scale@scl,w
 10589  0F1F  00F9               	movwf	___awdiv@dividend
 10590  0F20  01FA               	clrf	___awdiv@dividend+1
 10591  0F21  1BF9               	btfsc	___awdiv@dividend,7
 10592  0F22  03FA               	decf	___awdiv@dividend+1,f
 10593  0F23  3196  260F  318D   	fcall	___awdiv
 10594  0F26  0877               	movf	?___awdiv,w
 10595  0F27  3E12               	addlw	18
 10596  0F28  0140               	movlb	0	; select bank0
 10597  0F29  00A4               	movwf	i1___wmul@multiplier
 10598  0F2A  3000               	movlw	0
 10599  0F2B  3D78               	addwfc	?___awdiv+1,w
 10600  0F2C  00A5               	movwf	i1___wmul@multiplier+1
 10601  0F2D  3003               	movlw	3
 10602  0F2E  00A6               	movwf	i1___wmul@multiplicand
 10603  0F2F  3000               	movlw	0
 10604  0F30  00A7               	movwf	i1___wmul@multiplicand+1
 10605  0F31  3193  239E  318D   	fcall	i1___wmul
 10606  0F34  0140               	movlb	0	; select bank0
 10607  0F35  0825               	movf	?i1___wmul+1,w
 10608  0F36  0085               	movwf	5
 10609  0F37  0824               	movf	?i1___wmul,w
 10610  0F38  0084               	movwf	4
 10611  0F39  3028               	movlw	low (__powers_| (0+32768))
 10612  0F3A  0784               	addwf	4,f
 10613  0F3B  3098               	movlw	high (__powers_| (0+32768))
 10614  0F3C  3D85               	addwfc	5,f
 10615  0F3D  3F00               	moviw [0]fsr0
 10616  0F3E  00AB               	movwf	___ftmul@f2
 10617  0F3F  3F01               	moviw [1]fsr0
 10618  0F40  00AC               	movwf	___ftmul@f2+1
 10619  0F41  3F02               	moviw [2]fsr0
 10620  0F42  00AD               	movwf	___ftmul@f2+2
 10621  0F43  3188  20C2  318D   	fcall	___ftmul
 10622  0F46  0140               	movlb	0	; select bank0
 10623  0F47  0828               	movf	?___ftmul,w
 10624  0F48  00BD               	movwf	_scale$1456
 10625  0F49  0829               	movf	?___ftmul+1,w
 10626  0F4A  00BE               	movwf	_scale$1456+1
 10627  0F4B  082A               	movf	?___ftmul+2,w
 10628  0F4C  00BF               	movwf	_scale$1456+2
 10629                           
 10630                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10631  0F4D  0840               	movf	scale@scl,w
 10632  0F4E  00F2               	movwf	___awmod@dividend
 10633  0F4F  01F3               	clrf	___awmod@dividend+1
 10634  0F50  1BF2               	btfsc	___awmod@dividend,7
 10635  0F51  03F3               	decf	___awmod@dividend+1,f
 10636  0F52  300A               	movlw	10
 10637  0F53  00F0               	movwf	___awmod@divisor
 10638  0F54  3000               	movlw	0
 10639  0F55  00F1               	movwf	___awmod@divisor+1
 10640  0F56  3195  2578  318D   	fcall	___awmod
 10641  0F59  0871               	movf	?___awmod+1,w
 10642  0F5A  0140               	movlb	0	; select bank0
 10643  0F5B  00A5               	movwf	i1___wmul@multiplier+1
 10644  0F5C  0870               	movf	?___awmod,w
 10645  0F5D  00A4               	movwf	i1___wmul@multiplier
 10646  0F5E  3003               	movlw	3
 10647  0F5F  00A6               	movwf	i1___wmul@multiplicand
 10648  0F60  3000               	movlw	0
 10649  0F61  00A7               	movwf	i1___wmul@multiplicand+1
 10650  0F62  3193  239E  318D   	fcall	i1___wmul
 10651  0F65  0140               	movlb	0	; select bank0
 10652  0F66  0825               	movf	?i1___wmul+1,w
 10653  0F67  0085               	movwf	5
 10654  0F68  0824               	movf	?i1___wmul,w
 10655  0F69  0084               	movwf	4
 10656  0F6A  3028               	movlw	low (__powers_| (0+32768))
 10657  0F6B  0784               	addwf	4,f
 10658  0F6C  3098               	movlw	high (__powers_| (0+32768))
 10659  0F6D  3D85               	addwfc	5,f
 10660  0F6E  3F00               	moviw [0]fsr0
 10661  0F6F  00A8               	movwf	___ftmul@f1
 10662  0F70  3F01               	moviw [1]fsr0
 10663  0F71  00A9               	movwf	___ftmul@f1+1
 10664  0F72  3F02               	moviw [2]fsr0
 10665  0F73  00AA               	movwf	___ftmul@f1+2
 10666  0F74  083D               	movf	_scale$1456,w
 10667  0F75  00AB               	movwf	___ftmul@f2
 10668  0F76  083E               	movf	_scale$1456+1,w
 10669  0F77  00AC               	movwf	___ftmul@f2+1
 10670  0F78  083F               	movf	_scale$1456+2,w
 10671  0F79  00AD               	movwf	___ftmul@f2+2
 10672  0F7A  3188  20C2         	fcall	___ftmul
 10673  0F7C  0140               	movlb	0	; select bank0
 10674  0F7D  0828               	movf	?___ftmul,w
 10675  0F7E  00B8               	movwf	?_scale
 10676  0F7F  0829               	movf	?___ftmul+1,w
 10677  0F80  00B9               	movwf	?_scale+1
 10678  0F81  082A               	movf	?___ftmul+2,w
 10679  0F82  00BA               	movwf	?_scale+2
 10680  0F83  0008               	return
 10681  0F84                     i1l2850:	
 10682                           
 10683                           ;doprnt.c: 438: else if(scl > 10)
 10684  0F84  0840               	movf	scale@scl,w
 10685  0F85  3A80               	xorlw	128
 10686  0F86  3E75               	addlw	-139
 10687  0F87  1C03               	skipc
 10688  0F88  2FE3               	goto	i1l2856
 10689                           
 10690                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 10691  0F89  0840               	movf	scale@scl,w
 10692  0F8A  00F2               	movwf	___awmod@dividend
 10693  0F8B  01F3               	clrf	___awmod@dividend+1
 10694  0F8C  1BF2               	btfsc	___awmod@dividend,7
 10695  0F8D  03F3               	decf	___awmod@dividend+1,f
 10696  0F8E  300A               	movlw	10
 10697  0F8F  00F0               	movwf	___awmod@divisor
 10698  0F90  3000               	movlw	0
 10699  0F91  00F1               	movwf	___awmod@divisor+1
 10700  0F92  3195  2578  318D   	fcall	___awmod
 10701  0F95  0871               	movf	?___awmod+1,w
 10702  0F96  0140               	movlb	0	; select bank0
 10703  0F97  00A5               	movwf	i1___wmul@multiplier+1
 10704  0F98  0870               	movf	?___awmod,w
 10705  0F99  00A4               	movwf	i1___wmul@multiplier
 10706  0F9A  3003               	movlw	3
 10707  0F9B  00A6               	movwf	i1___wmul@multiplicand
 10708  0F9C  3000               	movlw	0
 10709  0F9D  00A7               	movwf	i1___wmul@multiplicand+1
 10710  0F9E  3193  239E  318D   	fcall	i1___wmul
 10711  0FA1  0140               	movlb	0	; select bank0
 10712  0FA2  0825               	movf	?i1___wmul+1,w
 10713  0FA3  0085               	movwf	5
 10714  0FA4  0824               	movf	?i1___wmul,w
 10715  0FA5  0084               	movwf	4
 10716  0FA6  3028               	movlw	low (__powers_| (0+32768))
 10717  0FA7  0784               	addwf	4,f
 10718  0FA8  3098               	movlw	high (__powers_| (0+32768))
 10719  0FA9  3D85               	addwfc	5,f
 10720  0FAA  3F00               	moviw [0]fsr0
 10721  0FAB  00A8               	movwf	___ftmul@f1
 10722  0FAC  3F01               	moviw [1]fsr0
 10723  0FAD  00A9               	movwf	___ftmul@f1+1
 10724  0FAE  3F02               	moviw [2]fsr0
 10725  0FAF  00AA               	movwf	___ftmul@f1+2
 10726  0FB0  300A               	movlw	10
 10727  0FB1  00F7               	movwf	___awdiv@divisor
 10728  0FB2  3000               	movlw	0
 10729  0FB3  00F8               	movwf	___awdiv@divisor+1
 10730  0FB4  0840               	movf	scale@scl,w
 10731  0FB5  00F9               	movwf	___awdiv@dividend
 10732  0FB6  01FA               	clrf	___awdiv@dividend+1
 10733  0FB7  1BF9               	btfsc	___awdiv@dividend,7
 10734  0FB8  03FA               	decf	___awdiv@dividend+1,f
 10735  0FB9  3196  260F  318D   	fcall	___awdiv
 10736  0FBC  0877               	movf	?___awdiv,w
 10737  0FBD  3E09               	addlw	9
 10738  0FBE  0140               	movlb	0	; select bank0
 10739  0FBF  00A4               	movwf	i1___wmul@multiplier
 10740  0FC0  3000               	movlw	0
 10741  0FC1  3D78               	addwfc	?___awdiv+1,w
 10742  0FC2  00A5               	movwf	i1___wmul@multiplier+1
 10743  0FC3  3003               	movlw	3
 10744  0FC4  00A6               	movwf	i1___wmul@multiplicand
 10745  0FC5  3000               	movlw	0
 10746  0FC6  00A7               	movwf	i1___wmul@multiplicand+1
 10747  0FC7  3193  239E  318D   	fcall	i1___wmul
 10748  0FCA  0140               	movlb	0	; select bank0
 10749  0FCB  0825               	movf	?i1___wmul+1,w
 10750  0FCC  0085               	movwf	5
 10751  0FCD  0824               	movf	?i1___wmul,w
 10752  0FCE  0084               	movwf	4
 10753  0FCF  3028               	movlw	low (__powers_| (0+32768))
 10754  0FD0  0784               	addwf	4,f
 10755  0FD1  3098               	movlw	high (__powers_| (0+32768))
 10756  0FD2  3D85               	addwfc	5,f
 10757  0FD3  3F00               	moviw [0]fsr0
 10758  0FD4  00AB               	movwf	___ftmul@f2
 10759  0FD5  3F01               	moviw [1]fsr0
 10760  0FD6  00AC               	movwf	___ftmul@f2+1
 10761  0FD7  3F02               	moviw [2]fsr0
 10762  0FD8  00AD               	movwf	___ftmul@f2+2
 10763  0FD9  3188  20C2         	fcall	___ftmul
 10764  0FDB  0140               	movlb	0	; select bank0
 10765  0FDC  0828               	movf	?___ftmul,w
 10766  0FDD  00B8               	movwf	?_scale
 10767  0FDE  0829               	movf	?___ftmul+1,w
 10768  0FDF  00B9               	movwf	?_scale+1
 10769  0FE0  082A               	movf	?___ftmul+2,w
 10770  0FE1  00BA               	movwf	?_scale+2
 10771  0FE2  0008               	return
 10772  0FE3                     i1l2856:	
 10773                           
 10774                           ;doprnt.c: 440: return _powers_[scl];
 10775  0FE3  0840               	movf	scale@scl,w
 10776  0FE4  00BB               	movwf	??_scale
 10777  0FE5  01BC               	clrf	??_scale+1
 10778  0FE6  083B               	movf	??_scale,w
 10779  0FE7  00A4               	movwf	i1___wmul@multiplier
 10780  0FE8  083C               	movf	??_scale+1,w
 10781  0FE9  00A5               	movwf	i1___wmul@multiplier+1
 10782  0FEA  3003               	movlw	3
 10783  0FEB  00A6               	movwf	i1___wmul@multiplicand
 10784  0FEC  3000               	movlw	0
 10785  0FED  00A7               	movwf	i1___wmul@multiplicand+1
 10786  0FEE  3193  239E         	fcall	i1___wmul
 10787  0FF0  0140               	movlb	0	; select bank0
 10788  0FF1  0825               	movf	?i1___wmul+1,w
 10789  0FF2  0085               	movwf	5
 10790  0FF3  0824               	movf	?i1___wmul,w
 10791  0FF4  0084               	movwf	4
 10792  0FF5  3028               	movlw	low (__powers_| (0+32768))
 10793  0FF6  0784               	addwf	4,f
 10794  0FF7  3098               	movlw	high (__powers_| (0+32768))
 10795  0FF8  3D85               	addwfc	5,f
 10796  0FF9  3F00               	moviw [0]fsr0
 10797  0FFA  00B8               	movwf	?_scale
 10798  0FFB  3F01               	moviw [1]fsr0
 10799  0FFC  00B9               	movwf	?_scale+1
 10800  0FFD  3F02               	moviw [2]fsr0
 10801  0FFE  00BA               	movwf	?_scale+2
 10802  0FFF  0008               	return
 10803  1000                     __end_of_scale:	
 10804                           
 10805                           	psect	text28
 10806  1FCF                     __ptext28:	
 10807 ;; *************** function _isdigit *****************
 10808 ;; Defined at:
 10809 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 10810 ;; Parameters:    Size  Location     Type
 10811 ;;  c               1    wreg     unsigned char 
 10812 ;; Auto vars:     Size  Location     Type
 10813 ;;  c               1    1[COMMON] unsigned char 
 10814 ;; Return value:  Size  Location     Type
 10815 ;;		None               void
 10816 ;; Registers used:
 10817 ;;		wreg, status,2, status,0
 10818 ;; Tracked objects:
 10819 ;;		On entry : 0/0
 10820 ;;		On exit  : 0/0
 10821 ;;		Unchanged: 0/0
 10822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10826 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10827 ;;Total ram usage:        2 bytes
 10828 ;; Hardware stack levels used:    1
 10829 ;; This function calls:
 10830 ;;		Nothing
 10831 ;; This function is called by:
 10832 ;;		_sprintf
 10833 ;; This function uses a non-reentrant model
 10834 ;;
 10835                           
 10836                           
 10837                           ;psect for function _isdigit
 10838  1FCF                     _isdigit:	
 10839                           
 10840                           ;incstack = 0
 10841                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10842                           ;isdigit@c stored from wreg
 10843  1FCF  00F1               	movwf	isdigit@c
 10844  1FD0  01F0               	clrf	_isdigit$1138
 10845  1FD1  303A               	movlw	58
 10846  1FD2  0271               	subwf	isdigit@c,w
 10847  1FD3  1803               	skipnc
 10848  1FD4  2FDB               	goto	i1l2868
 10849  1FD5  3030               	movlw	48
 10850  1FD6  0271               	subwf	isdigit@c,w
 10851  1FD7  1C03               	skipc
 10852  1FD8  2FDB               	goto	i1l2868
 10853  1FD9  01F0               	clrf	_isdigit$1138
 10854  1FDA  0AF0               	incf	_isdigit$1138,f
 10855  1FDB                     i1l2868:	
 10856  1FDB  0C70               	rrf	_isdigit$1138,w
 10857  1FDC  0008               	return
 10858  1FDD                     __end_of_isdigit:	
 10859                           
 10860                           	psect	text29
 10861  0654                     __ptext29:	
 10862 ;; *************** function _fround *****************
 10863 ;; Defined at:
 10864 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10865 ;; Parameters:    Size  Location     Type
 10866 ;;  prec            1    wreg     unsigned char 
 10867 ;; Auto vars:     Size  Location     Type
 10868 ;;  prec            1   37[BANK0 ] unsigned char 
 10869 ;; Return value:  Size  Location     Type
 10870 ;;                  3   24[BANK0 ] unsigned char 
 10871 ;; Registers used:
 10872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10873 ;; Tracked objects:
 10874 ;;		On entry : 0/0
 10875 ;;		On exit  : 0/0
 10876 ;;		Unchanged: 0/0
 10877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10878 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10879 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10880 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10881 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10882 ;;Total ram usage:       14 bytes
 10883 ;; Hardware stack levels used:    1
 10884 ;; Hardware stack levels required when called:    2
 10885 ;; This function calls:
 10886 ;;		___awdiv
 10887 ;;		___awmod
 10888 ;;		___ftmul
 10889 ;;		i1___wmul
 10890 ;; This function is called by:
 10891 ;;		_sprintf
 10892 ;; This function uses a non-reentrant model
 10893 ;;
 10894                           
 10895                           
 10896                           ;psect for function _fround
 10897  0654                     _fround:	
 10898                           
 10899                           ;incstack = 0
 10900                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10901                           ;fround@prec stored from wreg
 10902  0654  0140               	movlb	0	; select bank0
 10903  0655  00C5               	movwf	fround@prec
 10904                           
 10905                           ;doprnt.c: 413: if(prec>=110)
 10906  0656  306E               	movlw	110
 10907  0657  0245               	subwf	fround@prec,w
 10908  0658  1C03               	skipc
 10909  0659  2F14               	goto	i1l2808
 10910                           
 10911                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10912  065A  300A               	movlw	10
 10913  065B  00F7               	movwf	___awdiv@divisor
 10914  065C  3000               	movlw	0
 10915  065D  00F8               	movwf	___awdiv@divisor+1
 10916  065E  0845               	movf	fround@prec,w
 10917  065F  00BB               	movwf	??_fround
 10918  0660  01BC               	clrf	??_fround+1
 10919  0661  083B               	movf	??_fround,w
 10920  0662  00F2               	movwf	___awmod@dividend
 10921  0663  083C               	movf	??_fround+1,w
 10922  0664  00F3               	movwf	___awmod@dividend+1
 10923  0665  3064               	movlw	100
 10924  0666  00F0               	movwf	___awmod@divisor
 10925  0667  3000               	movlw	0
 10926  0668  00F1               	movwf	___awmod@divisor+1
 10927  0669  3195  2578  3186   	fcall	___awmod
 10928  066C  0871               	movf	?___awmod+1,w
 10929  066D  00FA               	movwf	___awdiv@dividend+1
 10930  066E  0870               	movf	?___awmod,w
 10931  066F  00F9               	movwf	___awdiv@dividend
 10932  0670  3196  260F  3186   	fcall	___awdiv
 10933  0673  0877               	movf	?___awdiv,w
 10934  0674  3E09               	addlw	9
 10935  0675  0140               	movlb	0	; select bank0
 10936  0676  00A4               	movwf	i1___wmul@multiplier
 10937  0677  3000               	movlw	0
 10938  0678  3D78               	addwfc	?___awdiv+1,w
 10939  0679  00A5               	movwf	i1___wmul@multiplier+1
 10940  067A  3003               	movlw	3
 10941  067B  00A6               	movwf	i1___wmul@multiplicand
 10942  067C  3000               	movlw	0
 10943  067D  00A7               	movwf	i1___wmul@multiplicand+1
 10944  067E  3193  239E  3186   	fcall	i1___wmul
 10945  0681  0140               	movlb	0	; select bank0
 10946  0682  0825               	movf	?i1___wmul+1,w
 10947  0683  0085               	movwf	5
 10948  0684  0824               	movf	?i1___wmul,w
 10949  0685  0084               	movwf	4
 10950  0686  304F               	movlw	low (__npowers_| (0+32768))
 10951  0687  0784               	addwf	4,f
 10952  0688  3098               	movlw	high (__npowers_| (0+32768))
 10953  0689  3D85               	addwfc	5,f
 10954  068A  3F00               	moviw [0]fsr0
 10955  068B  00A8               	movwf	___ftmul@f1
 10956  068C  3F01               	moviw [1]fsr0
 10957  068D  00A9               	movwf	___ftmul@f1+1
 10958  068E  3F02               	moviw [2]fsr0
 10959  068F  00AA               	movwf	___ftmul@f1+2
 10960  0690  3064               	movlw	100
 10961  0691  00F7               	movwf	___awdiv@divisor
 10962  0692  3000               	movlw	0
 10963  0693  00F8               	movwf	___awdiv@divisor+1
 10964  0694  0845               	movf	fround@prec,w
 10965  0695  00BD               	movwf	??_fround+2
 10966  0696  01BE               	clrf	??_fround+3
 10967  0697  083D               	movf	??_fround+2,w
 10968  0698  00F9               	movwf	___awdiv@dividend
 10969  0699  083E               	movf	??_fround+3,w
 10970  069A  00FA               	movwf	___awdiv@dividend+1
 10971  069B  3196  260F  3186   	fcall	___awdiv
 10972  069E  0877               	movf	?___awdiv,w
 10973  069F  3E12               	addlw	18
 10974  06A0  0140               	movlb	0	; select bank0
 10975  06A1  00A4               	movwf	i1___wmul@multiplier
 10976  06A2  3000               	movlw	0
 10977  06A3  3D78               	addwfc	?___awdiv+1,w
 10978  06A4  00A5               	movwf	i1___wmul@multiplier+1
 10979  06A5  3003               	movlw	3
 10980  06A6  00A6               	movwf	i1___wmul@multiplicand
 10981  06A7  3000               	movlw	0
 10982  06A8  00A7               	movwf	i1___wmul@multiplicand+1
 10983  06A9  3193  239E  3186   	fcall	i1___wmul
 10984  06AC  0140               	movlb	0	; select bank0
 10985  06AD  0825               	movf	?i1___wmul+1,w
 10986  06AE  0085               	movwf	5
 10987  06AF  0824               	movf	?i1___wmul,w
 10988  06B0  0084               	movwf	4
 10989  06B1  304F               	movlw	low (__npowers_| (0+32768))
 10990  06B2  0784               	addwf	4,f
 10991  06B3  3098               	movlw	high (__npowers_| (0+32768))
 10992  06B4  3D85               	addwfc	5,f
 10993  06B5  3F00               	moviw [0]fsr0
 10994  06B6  00AB               	movwf	___ftmul@f2
 10995  06B7  3F01               	moviw [1]fsr0
 10996  06B8  00AC               	movwf	___ftmul@f2+1
 10997  06B9  3F02               	moviw [2]fsr0
 10998  06BA  00AD               	movwf	___ftmul@f2+2
 10999  06BB  3188  20C2  3186   	fcall	___ftmul
 11000  06BE  0140               	movlb	0	; select bank0
 11001  06BF  0828               	movf	?___ftmul,w
 11002  06C0  00C2               	movwf	_fround$1454
 11003  06C1  0829               	movf	?___ftmul+1,w
 11004  06C2  00C3               	movwf	_fround$1454+1
 11005  06C3  082A               	movf	?___ftmul+2,w
 11006  06C4  00C4               	movwf	_fround$1454+2
 11007                           
 11008                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11009  06C5  0845               	movf	fround@prec,w
 11010  06C6  00BB               	movwf	??_fround
 11011  06C7  01BC               	clrf	??_fround+1
 11012  06C8  083B               	movf	??_fround,w
 11013  06C9  00F2               	movwf	___awmod@dividend
 11014  06CA  083C               	movf	??_fround+1,w
 11015  06CB  00F3               	movwf	___awmod@dividend+1
 11016  06CC  300A               	movlw	10
 11017  06CD  00F0               	movwf	___awmod@divisor
 11018  06CE  3000               	movlw	0
 11019  06CF  00F1               	movwf	___awmod@divisor+1
 11020  06D0  3195  2578  3186   	fcall	___awmod
 11021  06D3  0871               	movf	?___awmod+1,w
 11022  06D4  0140               	movlb	0	; select bank0
 11023  06D5  00A5               	movwf	i1___wmul@multiplier+1
 11024  06D6  0870               	movf	?___awmod,w
 11025  06D7  00A4               	movwf	i1___wmul@multiplier
 11026  06D8  3003               	movlw	3
 11027  06D9  00A6               	movwf	i1___wmul@multiplicand
 11028  06DA  3000               	movlw	0
 11029  06DB  00A7               	movwf	i1___wmul@multiplicand+1
 11030  06DC  3193  239E  3186   	fcall	i1___wmul
 11031  06DF  0140               	movlb	0	; select bank0
 11032  06E0  0825               	movf	?i1___wmul+1,w
 11033  06E1  0085               	movwf	5
 11034  06E2  0824               	movf	?i1___wmul,w
 11035  06E3  0084               	movwf	4
 11036  06E4  304F               	movlw	low (__npowers_| (0+32768))
 11037  06E5  0784               	addwf	4,f
 11038  06E6  3098               	movlw	high (__npowers_| (0+32768))
 11039  06E7  3D85               	addwfc	5,f
 11040  06E8  3F00               	moviw [0]fsr0
 11041  06E9  00A8               	movwf	___ftmul@f1
 11042  06EA  3F01               	moviw [1]fsr0
 11043  06EB  00A9               	movwf	___ftmul@f1+1
 11044  06EC  3F02               	moviw [2]fsr0
 11045  06ED  00AA               	movwf	___ftmul@f1+2
 11046  06EE  0842               	movf	_fround$1454,w
 11047  06EF  00AB               	movwf	___ftmul@f2
 11048  06F0  0843               	movf	_fround$1454+1,w
 11049  06F1  00AC               	movwf	___ftmul@f2+1
 11050  06F2  0844               	movf	_fround$1454+2,w
 11051  06F3  00AD               	movwf	___ftmul@f2+2
 11052  06F4  3188  20C2  3186   	fcall	___ftmul
 11053  06F7  0140               	movlb	0	; select bank0
 11054  06F8  0828               	movf	?___ftmul,w
 11055  06F9  00BF               	movwf	_fround$1455
 11056  06FA  0829               	movf	?___ftmul+1,w
 11057  06FB  00C0               	movwf	_fround$1455+1
 11058  06FC  082A               	movf	?___ftmul+2,w
 11059  06FD  00C1               	movwf	_fround$1455+2
 11060                           
 11061                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11062  06FE  3000               	movlw	0
 11063  06FF  00A8               	movwf	___ftmul@f1
 11064  0700  3000               	movlw	0
 11065  0701  00A9               	movwf	___ftmul@f1+1
 11066  0702  303F               	movlw	63
 11067  0703  00AA               	movwf	___ftmul@f1+2
 11068  0704  083F               	movf	_fround$1455,w
 11069  0705  00AB               	movwf	___ftmul@f2
 11070  0706  0840               	movf	_fround$1455+1,w
 11071  0707  00AC               	movwf	___ftmul@f2+1
 11072  0708  0841               	movf	_fround$1455+2,w
 11073  0709  00AD               	movwf	___ftmul@f2+2
 11074  070A  3188  20C2         	fcall	___ftmul
 11075  070C  0140               	movlb	0	; select bank0
 11076  070D  0828               	movf	?___ftmul,w
 11077  070E  00B8               	movwf	?_fround
 11078  070F  0829               	movf	?___ftmul+1,w
 11079  0710  00B9               	movwf	?_fround+1
 11080  0711  082A               	movf	?___ftmul+2,w
 11081  0712  00BA               	movwf	?_fround+2
 11082  0713  0008               	return
 11083  0714                     i1l2808:	
 11084                           
 11085                           ;doprnt.c: 415: else if(prec > 10)
 11086  0714  300B               	movlw	11
 11087  0715  0245               	subwf	fround@prec,w
 11088  0716  1C03               	skipc
 11089  0717  2F8C               	goto	i1l2816
 11090                           
 11091                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11092  0718  0845               	movf	fround@prec,w
 11093  0719  00BB               	movwf	??_fround
 11094  071A  01BC               	clrf	??_fround+1
 11095  071B  083B               	movf	??_fround,w
 11096  071C  00F2               	movwf	___awmod@dividend
 11097  071D  083C               	movf	??_fround+1,w
 11098  071E  00F3               	movwf	___awmod@dividend+1
 11099  071F  300A               	movlw	10
 11100  0720  00F0               	movwf	___awmod@divisor
 11101  0721  3000               	movlw	0
 11102  0722  00F1               	movwf	___awmod@divisor+1
 11103  0723  3195  2578  3186   	fcall	___awmod
 11104  0726  0871               	movf	?___awmod+1,w
 11105  0727  0140               	movlb	0	; select bank0
 11106  0728  00A5               	movwf	i1___wmul@multiplier+1
 11107  0729  0870               	movf	?___awmod,w
 11108  072A  00A4               	movwf	i1___wmul@multiplier
 11109  072B  3003               	movlw	3
 11110  072C  00A6               	movwf	i1___wmul@multiplicand
 11111  072D  3000               	movlw	0
 11112  072E  00A7               	movwf	i1___wmul@multiplicand+1
 11113  072F  3193  239E  3186   	fcall	i1___wmul
 11114  0732  0140               	movlb	0	; select bank0
 11115  0733  0825               	movf	?i1___wmul+1,w
 11116  0734  0085               	movwf	5
 11117  0735  0824               	movf	?i1___wmul,w
 11118  0736  0084               	movwf	4
 11119  0737  304F               	movlw	low (__npowers_| (0+32768))
 11120  0738  0784               	addwf	4,f
 11121  0739  3098               	movlw	high (__npowers_| (0+32768))
 11122  073A  3D85               	addwfc	5,f
 11123  073B  3F00               	moviw [0]fsr0
 11124  073C  00A8               	movwf	___ftmul@f1
 11125  073D  3F01               	moviw [1]fsr0
 11126  073E  00A9               	movwf	___ftmul@f1+1
 11127  073F  3F02               	moviw [2]fsr0
 11128  0740  00AA               	movwf	___ftmul@f1+2
 11129  0741  300A               	movlw	10
 11130  0742  00F7               	movwf	___awdiv@divisor
 11131  0743  3000               	movlw	0
 11132  0744  00F8               	movwf	___awdiv@divisor+1
 11133  0745  0845               	movf	fround@prec,w
 11134  0746  00BD               	movwf	??_fround+2
 11135  0747  01BE               	clrf	??_fround+3
 11136  0748  083D               	movf	??_fround+2,w
 11137  0749  00F9               	movwf	___awdiv@dividend
 11138  074A  083E               	movf	??_fround+3,w
 11139  074B  00FA               	movwf	___awdiv@dividend+1
 11140  074C  3196  260F  3186   	fcall	___awdiv
 11141  074F  0877               	movf	?___awdiv,w
 11142  0750  3E09               	addlw	9
 11143  0751  0140               	movlb	0	; select bank0
 11144  0752  00A4               	movwf	i1___wmul@multiplier
 11145  0753  3000               	movlw	0
 11146  0754  3D78               	addwfc	?___awdiv+1,w
 11147  0755  00A5               	movwf	i1___wmul@multiplier+1
 11148  0756  3003               	movlw	3
 11149  0757  00A6               	movwf	i1___wmul@multiplicand
 11150  0758  3000               	movlw	0
 11151  0759  00A7               	movwf	i1___wmul@multiplicand+1
 11152  075A  3193  239E  3186   	fcall	i1___wmul
 11153  075D  0140               	movlb	0	; select bank0
 11154  075E  0825               	movf	?i1___wmul+1,w
 11155  075F  0085               	movwf	5
 11156  0760  0824               	movf	?i1___wmul,w
 11157  0761  0084               	movwf	4
 11158  0762  304F               	movlw	low (__npowers_| (0+32768))
 11159  0763  0784               	addwf	4,f
 11160  0764  3098               	movlw	high (__npowers_| (0+32768))
 11161  0765  3D85               	addwfc	5,f
 11162  0766  3F00               	moviw [0]fsr0
 11163  0767  00AB               	movwf	___ftmul@f2
 11164  0768  3F01               	moviw [1]fsr0
 11165  0769  00AC               	movwf	___ftmul@f2+1
 11166  076A  3F02               	moviw [2]fsr0
 11167  076B  00AD               	movwf	___ftmul@f2+2
 11168  076C  3188  20C2  3186   	fcall	___ftmul
 11169  076F  0140               	movlb	0	; select bank0
 11170  0770  0828               	movf	?___ftmul,w
 11171  0771  00C2               	movwf	_fround$1454
 11172  0772  0829               	movf	?___ftmul+1,w
 11173  0773  00C3               	movwf	_fround$1454+1
 11174  0774  082A               	movf	?___ftmul+2,w
 11175  0775  00C4               	movwf	_fround$1454+2
 11176                           
 11177                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11178  0776  3000               	movlw	0
 11179  0777  00A8               	movwf	___ftmul@f1
 11180  0778  3000               	movlw	0
 11181  0779  00A9               	movwf	___ftmul@f1+1
 11182  077A  303F               	movlw	63
 11183  077B  00AA               	movwf	___ftmul@f1+2
 11184  077C  0842               	movf	_fround$1454,w
 11185  077D  00AB               	movwf	___ftmul@f2
 11186  077E  0843               	movf	_fround$1454+1,w
 11187  077F  00AC               	movwf	___ftmul@f2+1
 11188  0780  0844               	movf	_fround$1454+2,w
 11189  0781  00AD               	movwf	___ftmul@f2+2
 11190  0782  3188  20C2         	fcall	___ftmul
 11191  0784  0140               	movlb	0	; select bank0
 11192  0785  0828               	movf	?___ftmul,w
 11193  0786  00B8               	movwf	?_fround
 11194  0787  0829               	movf	?___ftmul+1,w
 11195  0788  00B9               	movwf	?_fround+1
 11196  0789  082A               	movf	?___ftmul+2,w
 11197  078A  00BA               	movwf	?_fround+2
 11198  078B  0008               	return
 11199  078C                     i1l2816:	
 11200                           
 11201                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 11202  078C  3000               	movlw	0
 11203  078D  00A8               	movwf	___ftmul@f1
 11204  078E  3000               	movlw	0
 11205  078F  00A9               	movwf	___ftmul@f1+1
 11206  0790  303F               	movlw	63
 11207  0791  00AA               	movwf	___ftmul@f1+2
 11208  0792  0845               	movf	fround@prec,w
 11209  0793  00BB               	movwf	??_fround
 11210  0794  01BC               	clrf	??_fround+1
 11211  0795  083B               	movf	??_fround,w
 11212  0796  00A4               	movwf	i1___wmul@multiplier
 11213  0797  083C               	movf	??_fround+1,w
 11214  0798  00A5               	movwf	i1___wmul@multiplier+1
 11215  0799  3003               	movlw	3
 11216  079A  00A6               	movwf	i1___wmul@multiplicand
 11217  079B  3000               	movlw	0
 11218  079C  00A7               	movwf	i1___wmul@multiplicand+1
 11219  079D  3193  239E  3186   	fcall	i1___wmul
 11220  07A0  0140               	movlb	0	; select bank0
 11221  07A1  0825               	movf	?i1___wmul+1,w
 11222  07A2  0085               	movwf	5
 11223  07A3  0824               	movf	?i1___wmul,w
 11224  07A4  0084               	movwf	4
 11225  07A5  304F               	movlw	low (__npowers_| (0+32768))
 11226  07A6  0784               	addwf	4,f
 11227  07A7  3098               	movlw	high (__npowers_| (0+32768))
 11228  07A8  3D85               	addwfc	5,f
 11229  07A9  3F00               	moviw [0]fsr0
 11230  07AA  00AB               	movwf	___ftmul@f2
 11231  07AB  3F01               	moviw [1]fsr0
 11232  07AC  00AC               	movwf	___ftmul@f2+1
 11233  07AD  3F02               	moviw [2]fsr0
 11234  07AE  00AD               	movwf	___ftmul@f2+2
 11235  07AF  3188  20C2         	fcall	___ftmul
 11236  07B1  0140               	movlb	0	; select bank0
 11237  07B2  0828               	movf	?___ftmul,w
 11238  07B3  00B8               	movwf	?_fround
 11239  07B4  0829               	movf	?___ftmul+1,w
 11240  07B5  00B9               	movwf	?_fround+1
 11241  07B6  082A               	movf	?___ftmul+2,w
 11242  07B7  00BA               	movwf	?_fround+2
 11243  07B8  0008               	return
 11244  07B9                     __end_of_fround:	
 11245                           
 11246                           	psect	text30
 11247  08C2                     __ptext30:	
 11248 ;; *************** function ___ftmul *****************
 11249 ;; Defined at:
 11250 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 11251 ;; Parameters:    Size  Location     Type
 11252 ;;  f1              3    8[BANK0 ] float 
 11253 ;;  f2              3   11[BANK0 ] float 
 11254 ;; Auto vars:     Size  Location     Type
 11255 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
 11256 ;;  sign            1   23[BANK0 ] unsigned char 
 11257 ;;  cntr            1   22[BANK0 ] unsigned char 
 11258 ;;  exp             1   18[BANK0 ] unsigned char 
 11259 ;; Return value:  Size  Location     Type
 11260 ;;                  3    8[BANK0 ] float 
 11261 ;; Registers used:
 11262 ;;		wreg, status,2, status,0, pclath, cstack
 11263 ;; Tracked objects:
 11264 ;;		On entry : 0/0
 11265 ;;		On exit  : 0/0
 11266 ;;		Unchanged: 0/0
 11267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11268 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11269 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11270 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11271 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11272 ;;Total ram usage:       16 bytes
 11273 ;; Hardware stack levels used:    1
 11274 ;; Hardware stack levels required when called:    1
 11275 ;; This function calls:
 11276 ;;		___ftpack
 11277 ;; This function is called by:
 11278 ;;		_TMR0_ISR
 11279 ;;		_fround
 11280 ;;		_scale
 11281 ;;		_sprintf
 11282 ;; This function uses a non-reentrant model
 11283 ;;
 11284                           
 11285                           
 11286                           ;psect for function ___ftmul
 11287  08C2                     ___ftmul:	
 11288                           
 11289                           ;incstack = 0
 11290                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 11291  08C2  0140               	movlb	0	; select bank0
 11292  08C3  0828               	movf	___ftmul@f1,w
 11293  08C4  00AE               	movwf	??___ftmul
 11294  08C5  0829               	movf	___ftmul@f1+1,w
 11295  08C6  00AF               	movwf	??___ftmul+1
 11296  08C7  082A               	movf	___ftmul@f1+2,w
 11297  08C8  00B0               	movwf	??___ftmul+2
 11298  08C9  1003               	clrc
 11299  08CA  0D2F               	rlf	??___ftmul+1,w
 11300  08CB  0D30               	rlf	??___ftmul+2,w
 11301  08CC  00B1               	movwf	??___ftmul+3
 11302  08CD  0831               	movf	??___ftmul+3,w
 11303  08CE  00B2               	movwf	___ftmul@exp
 11304  08CF  0832               	movf	___ftmul@exp,w
 11305  08D0  1D03               	btfss	3,2
 11306  08D1  28D9               	goto	i1l2710
 11307  08D2  3000               	movlw	0
 11308  08D3  00A8               	movwf	?___ftmul
 11309  08D4  3000               	movlw	0
 11310  08D5  00A9               	movwf	?___ftmul+1
 11311  08D6  3000               	movlw	0
 11312  08D7  00AA               	movwf	?___ftmul+2
 11313  08D8  0008               	return
 11314  08D9                     i1l2710:	
 11315  08D9  082B               	movf	___ftmul@f2,w
 11316  08DA  00AE               	movwf	??___ftmul
 11317  08DB  082C               	movf	___ftmul@f2+1,w
 11318  08DC  00AF               	movwf	??___ftmul+1
 11319  08DD  082D               	movf	___ftmul@f2+2,w
 11320  08DE  00B0               	movwf	??___ftmul+2
 11321  08DF  1003               	clrc
 11322  08E0  0D2F               	rlf	??___ftmul+1,w
 11323  08E1  0D30               	rlf	??___ftmul+2,w
 11324  08E2  00B1               	movwf	??___ftmul+3
 11325  08E3  0831               	movf	??___ftmul+3,w
 11326  08E4  00B7               	movwf	___ftmul@sign
 11327  08E5  0837               	movf	___ftmul@sign,w
 11328  08E6  1D03               	btfss	3,2
 11329  08E7  28EF               	goto	i1l2716
 11330  08E8  3000               	movlw	0
 11331  08E9  00A8               	movwf	?___ftmul
 11332  08EA  3000               	movlw	0
 11333  08EB  00A9               	movwf	?___ftmul+1
 11334  08EC  3000               	movlw	0
 11335  08ED  00AA               	movwf	?___ftmul+2
 11336  08EE  0008               	return
 11337  08EF                     i1l2716:	
 11338  08EF  0837               	movf	___ftmul@sign,w
 11339  08F0  3E7B               	addlw	123
 11340  08F1  00AE               	movwf	??___ftmul
 11341  08F2  082E               	movf	??___ftmul,w
 11342  08F3  07B2               	addwf	___ftmul@exp,f
 11343  08F4  0828               	movf	___ftmul@f1,w
 11344  08F5  00AE               	movwf	??___ftmul
 11345  08F6  0829               	movf	___ftmul@f1+1,w
 11346  08F7  00AF               	movwf	??___ftmul+1
 11347  08F8  082A               	movf	___ftmul@f1+2,w
 11348  08F9  00B0               	movwf	??___ftmul+2
 11349  08FA  3010               	movlw	16
 11350  08FB                     u295_25:	
 11351  08FB  36B0               	lsrf	??___ftmul+2,f
 11352  08FC  0CAF               	rrf	??___ftmul+1,f
 11353  08FD  0CAE               	rrf	??___ftmul,f
 11354  08FE  0B89               	decfsz	9,f
 11355  08FF  28FB               	goto	u295_25
 11356  0900  082E               	movf	??___ftmul,w
 11357  0901  00B1               	movwf	??___ftmul+3
 11358  0902  0831               	movf	??___ftmul+3,w
 11359  0903  00B7               	movwf	___ftmul@sign
 11360  0904  082B               	movf	___ftmul@f2,w
 11361  0905  00AE               	movwf	??___ftmul
 11362  0906  082C               	movf	___ftmul@f2+1,w
 11363  0907  00AF               	movwf	??___ftmul+1
 11364  0908  082D               	movf	___ftmul@f2+2,w
 11365  0909  00B0               	movwf	??___ftmul+2
 11366  090A  3010               	movlw	16
 11367  090B                     u296_25:	
 11368  090B  36B0               	lsrf	??___ftmul+2,f
 11369  090C  0CAF               	rrf	??___ftmul+1,f
 11370  090D  0CAE               	rrf	??___ftmul,f
 11371  090E  0B89               	decfsz	9,f
 11372  090F  290B               	goto	u296_25
 11373  0910  082E               	movf	??___ftmul,w
 11374  0911  00B1               	movwf	??___ftmul+3
 11375  0912  0831               	movf	??___ftmul+3,w
 11376  0913  06B7               	xorwf	___ftmul@sign,f
 11377  0914  3080               	movlw	128
 11378  0915  00AE               	movwf	??___ftmul
 11379  0916  082E               	movf	??___ftmul,w
 11380  0917  05B7               	andwf	___ftmul@sign,f
 11381  0918  17A9               	bsf	___ftmul@f1+1,7
 11382  0919  17AC               	bsf	___ftmul@f2+1,7
 11383  091A  30FF               	movlw	255
 11384  091B  05AB               	andwf	___ftmul@f2,f
 11385  091C  30FF               	movlw	255
 11386  091D  05AC               	andwf	___ftmul@f2+1,f
 11387  091E  3000               	movlw	0
 11388  091F  05AD               	andwf	___ftmul@f2+2,f
 11389  0920  3000               	movlw	0
 11390  0921  00B3               	movwf	___ftmul@f3_as_product
 11391  0922  3000               	movlw	0
 11392  0923  00B4               	movwf	___ftmul@f3_as_product+1
 11393  0924  3000               	movlw	0
 11394  0925  00B5               	movwf	___ftmul@f3_as_product+2
 11395  0926  3007               	movlw	7
 11396  0927  00AE               	movwf	??___ftmul
 11397  0928  082E               	movf	??___ftmul,w
 11398  0929  00B6               	movwf	___ftmul@cntr
 11399  092A                     i1l2728:	
 11400  092A  1C28               	btfss	___ftmul@f1,0
 11401  092B  2932               	goto	i1l2732
 11402  092C  082B               	movf	___ftmul@f2,w
 11403  092D  07B3               	addwf	___ftmul@f3_as_product,f
 11404  092E  082C               	movf	___ftmul@f2+1,w
 11405  092F  3DB4               	addwfc	___ftmul@f3_as_product+1,f
 11406  0930  082D               	movf	___ftmul@f2+2,w
 11407  0931  3DB5               	addwfc	___ftmul@f3_as_product+2,f
 11408  0932                     i1l2732:	
 11409  0932  3001               	movlw	1
 11410  0933                     u298_25:	
 11411  0933  36AA               	lsrf	___ftmul@f1+2,f
 11412  0934  0CA9               	rrf	___ftmul@f1+1,f
 11413  0935  0CA8               	rrf	___ftmul@f1,f
 11414  0936  0B89               	decfsz	9,f
 11415  0937  2933               	goto	u298_25
 11416  0938  3001               	movlw	1
 11417  0939                     u299_25:	
 11418  0939  35AB               	lslf	___ftmul@f2,f
 11419  093A  0DAC               	rlf	___ftmul@f2+1,f
 11420  093B  0DAD               	rlf	___ftmul@f2+2,f
 11421  093C  0B89               	decfsz	9,f
 11422  093D  2939               	goto	u299_25
 11423  093E  3001               	movlw	1
 11424  093F  02B6               	subwf	___ftmul@cntr,f
 11425  0940  1D03               	btfss	3,2
 11426  0941  292A               	goto	i1l2728
 11427  0942  3009               	movlw	9
 11428  0943  00AE               	movwf	??___ftmul
 11429  0944  082E               	movf	??___ftmul,w
 11430  0945  00B6               	movwf	___ftmul@cntr
 11431  0946                     i1l2740:	
 11432  0946  1C28               	btfss	___ftmul@f1,0
 11433  0947  294E               	goto	i1l2744
 11434  0948  082B               	movf	___ftmul@f2,w
 11435  0949  07B3               	addwf	___ftmul@f3_as_product,f
 11436  094A  082C               	movf	___ftmul@f2+1,w
 11437  094B  3DB4               	addwfc	___ftmul@f3_as_product+1,f
 11438  094C  082D               	movf	___ftmul@f2+2,w
 11439  094D  3DB5               	addwfc	___ftmul@f3_as_product+2,f
 11440  094E                     i1l2744:	
 11441  094E  3001               	movlw	1
 11442  094F                     u302_25:	
 11443  094F  36AA               	lsrf	___ftmul@f1+2,f
 11444  0950  0CA9               	rrf	___ftmul@f1+1,f
 11445  0951  0CA8               	rrf	___ftmul@f1,f
 11446  0952  0B89               	decfsz	9,f
 11447  0953  294F               	goto	u302_25
 11448  0954  3001               	movlw	1
 11449  0955                     u303_25:	
 11450  0955  36B5               	lsrf	___ftmul@f3_as_product+2,f
 11451  0956  0CB4               	rrf	___ftmul@f3_as_product+1,f
 11452  0957  0CB3               	rrf	___ftmul@f3_as_product,f
 11453  0958  0B89               	decfsz	9,f
 11454  0959  2955               	goto	u303_25
 11455  095A  3001               	movlw	1
 11456  095B  02B6               	subwf	___ftmul@cntr,f
 11457  095C  1D03               	btfss	3,2
 11458  095D  2946               	goto	i1l2740
 11459  095E  0833               	movf	___ftmul@f3_as_product,w
 11460  095F  00F0               	movwf	___ftpack@arg
 11461  0960  0834               	movf	___ftmul@f3_as_product+1,w
 11462  0961  00F1               	movwf	___ftpack@arg+1
 11463  0962  0835               	movf	___ftmul@f3_as_product+2,w
 11464  0963  00F2               	movwf	___ftpack@arg+2
 11465  0964  0832               	movf	___ftmul@exp,w
 11466  0965  00AE               	movwf	??___ftmul
 11467  0966  082E               	movf	??___ftmul,w
 11468  0967  00F3               	movwf	___ftpack@exp
 11469  0968  0837               	movf	___ftmul@sign,w
 11470  0969  00AF               	movwf	??___ftmul+1
 11471  096A  082F               	movf	??___ftmul+1,w
 11472  096B  00F4               	movwf	___ftpack@sign
 11473  096C  3196  26B8         	fcall	___ftpack
 11474  096E  0870               	movf	?___ftpack,w
 11475  096F  0140               	movlb	0	; select bank0
 11476  0970  00A8               	movwf	?___ftmul
 11477  0971  0871               	movf	?___ftpack+1,w
 11478  0972  00A9               	movwf	?___ftmul+1
 11479  0973  0872               	movf	?___ftpack+2,w
 11480  0974  00AA               	movwf	?___ftmul+2
 11481  0975  0008               	return
 11482  0976                     __end_of___ftmul:	
 11483                           
 11484                           	psect	text31
 11485  160F                     __ptext31:	
 11486 ;; *************** function ___awdiv *****************
 11487 ;; Defined at:
 11488 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 11489 ;; Parameters:    Size  Location     Type
 11490 ;;  divisor         2    7[COMMON] int 
 11491 ;;  dividend        2    9[COMMON] int 
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;  quotient        2    2[BANK0 ] int 
 11494 ;;  sign            1    1[BANK0 ] unsigned char 
 11495 ;;  counter         1    0[BANK0 ] unsigned char 
 11496 ;; Return value:  Size  Location     Type
 11497 ;;                  2    7[COMMON] int 
 11498 ;; Registers used:
 11499 ;;		wreg, status,2, status,0
 11500 ;; Tracked objects:
 11501 ;;		On entry : 0/0
 11502 ;;		On exit  : 0/0
 11503 ;;		Unchanged: 0/0
 11504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11506 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11507 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11508 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11509 ;;Total ram usage:        9 bytes
 11510 ;; Hardware stack levels used:    1
 11511 ;; This function calls:
 11512 ;;		Nothing
 11513 ;; This function is called by:
 11514 ;;		_fround
 11515 ;;		_scale
 11516 ;;		_sprintf
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           
 11521                           ;psect for function ___awdiv
 11522  160F                     ___awdiv:	
 11523                           
 11524                           ;incstack = 0
 11525                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11526  160F  0140               	movlb	0	; select bank0
 11527  1610  01A1               	clrf	___awdiv@sign
 11528  1611  1FF8               	btfss	___awdiv@divisor+1,7
 11529  1612  2E1A               	goto	i1l2560
 11530  1613  09F7               	comf	___awdiv@divisor,f
 11531  1614  09F8               	comf	___awdiv@divisor+1,f
 11532  1615  0AF7               	incf	___awdiv@divisor,f
 11533  1616  1903               	skipnz
 11534  1617  0AF8               	incf	___awdiv@divisor+1,f
 11535  1618  01A1               	clrf	___awdiv@sign
 11536  1619  0AA1               	incf	___awdiv@sign,f
 11537  161A                     i1l2560:	
 11538  161A  1FFA               	btfss	___awdiv@dividend+1,7
 11539  161B  2E25               	goto	i1l2566
 11540  161C  09F9               	comf	___awdiv@dividend,f
 11541  161D  09FA               	comf	___awdiv@dividend+1,f
 11542  161E  0AF9               	incf	___awdiv@dividend,f
 11543  161F  1903               	skipnz
 11544  1620  0AFA               	incf	___awdiv@dividend+1,f
 11545  1621  3001               	movlw	1
 11546  1622  00FB               	movwf	??___awdiv
 11547  1623  087B               	movf	??___awdiv,w
 11548  1624  06A1               	xorwf	___awdiv@sign,f
 11549  1625                     i1l2566:	
 11550  1625  01A2               	clrf	___awdiv@quotient
 11551  1626  01A3               	clrf	___awdiv@quotient+1
 11552  1627  0877               	movf	___awdiv@divisor,w
 11553  1628  0478               	iorwf	___awdiv@divisor+1,w
 11554  1629  1903               	btfsc	3,2
 11555  162A  2E54               	goto	i1l2588
 11556  162B  01A0               	clrf	___awdiv@counter
 11557  162C  0AA0               	incf	___awdiv@counter,f
 11558  162D                     i1l2576:	
 11559  162D  1BF8               	btfsc	___awdiv@divisor+1,7
 11560  162E  2E39               	goto	i1l2578
 11561  162F  3001               	movlw	1
 11562  1630                     u254_25:	
 11563  1630  35F7               	lslf	___awdiv@divisor,f
 11564  1631  0DF8               	rlf	___awdiv@divisor+1,f
 11565  1632  0B89               	decfsz	9,f
 11566  1633  2E30               	goto	u254_25
 11567  1634  3001               	movlw	1
 11568  1635  00FB               	movwf	??___awdiv
 11569  1636  087B               	movf	??___awdiv,w
 11570  1637  07A0               	addwf	___awdiv@counter,f
 11571  1638  2E2D               	goto	i1l2576
 11572  1639                     i1l2578:	
 11573  1639  3001               	movlw	1
 11574  163A                     u256_25:	
 11575  163A  35A2               	lslf	___awdiv@quotient,f
 11576  163B  0DA3               	rlf	___awdiv@quotient+1,f
 11577  163C  0B89               	decfsz	9,f
 11578  163D  2E3A               	goto	u256_25
 11579  163E  0878               	movf	___awdiv@divisor+1,w
 11580  163F  027A               	subwf	___awdiv@dividend+1,w
 11581  1640  1D03               	skipz
 11582  1641  2E44               	goto	u257_25
 11583  1642  0877               	movf	___awdiv@divisor,w
 11584  1643  0279               	subwf	___awdiv@dividend,w
 11585  1644                     u257_25:	
 11586  1644  1C03               	skipc
 11587  1645  2E4B               	goto	i1l2584
 11588  1646  0877               	movf	___awdiv@divisor,w
 11589  1647  02F9               	subwf	___awdiv@dividend,f
 11590  1648  0878               	movf	___awdiv@divisor+1,w
 11591  1649  3BFA               	subwfb	___awdiv@dividend+1,f
 11592  164A  1422               	bsf	___awdiv@quotient,0
 11593  164B                     i1l2584:	
 11594  164B  3001               	movlw	1
 11595  164C                     u258_25:	
 11596  164C  36F8               	lsrf	___awdiv@divisor+1,f
 11597  164D  0CF7               	rrf	___awdiv@divisor,f
 11598  164E  0B89               	decfsz	9,f
 11599  164F  2E4C               	goto	u258_25
 11600  1650  3001               	movlw	1
 11601  1651  02A0               	subwf	___awdiv@counter,f
 11602  1652  1D03               	btfss	3,2
 11603  1653  2E39               	goto	i1l2578
 11604  1654                     i1l2588:	
 11605  1654  0821               	movf	___awdiv@sign,w
 11606  1655  1903               	btfsc	3,2
 11607  1656  2E5C               	goto	i1l2592
 11608  1657  09A2               	comf	___awdiv@quotient,f
 11609  1658  09A3               	comf	___awdiv@quotient+1,f
 11610  1659  0AA2               	incf	___awdiv@quotient,f
 11611  165A  1903               	skipnz
 11612  165B  0AA3               	incf	___awdiv@quotient+1,f
 11613  165C                     i1l2592:	
 11614  165C  0823               	movf	___awdiv@quotient+1,w
 11615  165D  00F8               	movwf	?___awdiv+1
 11616  165E  0822               	movf	___awdiv@quotient,w
 11617  165F  00F7               	movwf	?___awdiv
 11618  1660  0008               	return
 11619  1661                     __end_of___awdiv:	
 11620                           
 11621                           	psect	text32
 11622  0976                     __ptext32:	
 11623 ;; *************** function __tdiv_to_l_ *****************
 11624 ;; Defined at:
 11625 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 11626 ;; Parameters:    Size  Location     Type
 11627 ;;  f1              3    0[COMMON] float 
 11628 ;;  f2              3    3[COMMON] float 
 11629 ;; Auto vars:     Size  Location     Type
 11630 ;;  quot            4    0[BANK0 ] unsigned long 
 11631 ;;  exp1            1    5[BANK0 ] unsigned char 
 11632 ;;  cntr            1    4[BANK0 ] unsigned char 
 11633 ;; Return value:  Size  Location     Type
 11634 ;;                  4    0[COMMON] unsigned long 
 11635 ;; Registers used:
 11636 ;;		wreg, status,2, status,0
 11637 ;; Tracked objects:
 11638 ;;		On entry : 0/0
 11639 ;;		On exit  : 0/0
 11640 ;;		Unchanged: 0/0
 11641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11642 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11643 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11644 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11645 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11646 ;;Total ram usage:       16 bytes
 11647 ;; Hardware stack levels used:    1
 11648 ;; This function calls:
 11649 ;;		Nothing
 11650 ;; This function is called by:
 11651 ;;		_sprintf
 11652 ;; This function uses a non-reentrant model
 11653 ;;
 11654                           
 11655                           
 11656                           ;psect for function __tdiv_to_l_
 11657  0976                     __tdiv_to_l_:	
 11658                           
 11659                           ;incstack = 0
 11660                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
 11661  0976  0870               	movf	__tdiv_to_l_@f1,w
 11662  0977  00F6               	movwf	??__tdiv_to_l_
 11663  0978  0871               	movf	__tdiv_to_l_@f1+1,w
 11664  0979  00F7               	movwf	??__tdiv_to_l_+1
 11665  097A  0872               	movf	__tdiv_to_l_@f1+2,w
 11666  097B  00F8               	movwf	??__tdiv_to_l_+2
 11667  097C  1003               	clrc
 11668  097D  0D77               	rlf	??__tdiv_to_l_+1,w
 11669  097E  0D78               	rlf	??__tdiv_to_l_+2,w
 11670  097F  00F9               	movwf	??__tdiv_to_l_+3
 11671  0980  0879               	movf	??__tdiv_to_l_+3,w
 11672  0981  0140               	movlb	0	; select bank0
 11673  0982  00A5               	movwf	__tdiv_to_l_@exp1
 11674  0983  0825               	movf	__tdiv_to_l_@exp1,w
 11675  0984  1D03               	btfss	3,2
 11676  0985  298F               	goto	i1l2878
 11677  0986  3000               	movlw	0
 11678  0987  00F3               	movwf	?__tdiv_to_l_+3
 11679  0988  3000               	movlw	0
 11680  0989  00F2               	movwf	?__tdiv_to_l_+2
 11681  098A  3000               	movlw	0
 11682  098B  00F1               	movwf	?__tdiv_to_l_+1
 11683  098C  3000               	movlw	0
 11684  098D  00F0               	movwf	?__tdiv_to_l_
 11685  098E  0008               	return
 11686  098F                     i1l2878:	
 11687  098F  0873               	movf	__tdiv_to_l_@f2,w
 11688  0990  00F6               	movwf	??__tdiv_to_l_
 11689  0991  0874               	movf	__tdiv_to_l_@f2+1,w
 11690  0992  00F7               	movwf	??__tdiv_to_l_+1
 11691  0993  0875               	movf	__tdiv_to_l_@f2+2,w
 11692  0994  00F8               	movwf	??__tdiv_to_l_+2
 11693  0995  1003               	clrc
 11694  0996  0D77               	rlf	??__tdiv_to_l_+1,w
 11695  0997  0D78               	rlf	??__tdiv_to_l_+2,w
 11696  0998  00F9               	movwf	??__tdiv_to_l_+3
 11697  0999  0879               	movf	??__tdiv_to_l_+3,w
 11698  099A  00A4               	movwf	__tdiv_to_l_@cntr
 11699  099B  0824               	movf	__tdiv_to_l_@cntr,w
 11700  099C  1D03               	btfss	3,2
 11701  099D  29A7               	goto	i1l934
 11702  099E  3000               	movlw	0
 11703  099F  00F3               	movwf	?__tdiv_to_l_+3
 11704  09A0  3000               	movlw	0
 11705  09A1  00F2               	movwf	?__tdiv_to_l_+2
 11706  09A2  3000               	movlw	0
 11707  09A3  00F1               	movwf	?__tdiv_to_l_+1
 11708  09A4  3000               	movlw	0
 11709  09A5  00F0               	movwf	?__tdiv_to_l_
 11710  09A6  0008               	return
 11711  09A7                     i1l934:	
 11712  09A7  17F1               	bsf	__tdiv_to_l_@f1+1,7
 11713  09A8  30FF               	movlw	255
 11714  09A9  05F0               	andwf	__tdiv_to_l_@f1,f
 11715  09AA  30FF               	movlw	255
 11716  09AB  05F1               	andwf	__tdiv_to_l_@f1+1,f
 11717  09AC  3000               	movlw	0
 11718  09AD  05F2               	andwf	__tdiv_to_l_@f1+2,f
 11719  09AE  17F4               	bsf	__tdiv_to_l_@f2+1,7
 11720  09AF  30FF               	movlw	255
 11721  09B0  05F3               	andwf	__tdiv_to_l_@f2,f
 11722  09B1  30FF               	movlw	255
 11723  09B2  05F4               	andwf	__tdiv_to_l_@f2+1,f
 11724  09B3  3000               	movlw	0
 11725  09B4  05F5               	andwf	__tdiv_to_l_@f2+2,f
 11726  09B5  3000               	movlw	0
 11727  09B6  00A3               	movwf	__tdiv_to_l_@quot+3
 11728  09B7  3000               	movlw	0
 11729  09B8  00A2               	movwf	__tdiv_to_l_@quot+2
 11730  09B9  3000               	movlw	0
 11731  09BA  00A1               	movwf	__tdiv_to_l_@quot+1
 11732  09BB  3000               	movlw	0
 11733  09BC  00A0               	movwf	__tdiv_to_l_@quot
 11734  09BD  307F               	movlw	127
 11735  09BE  02A5               	subwf	__tdiv_to_l_@exp1,f
 11736  09BF  3098               	movlw	152
 11737  09C0  0724               	addwf	__tdiv_to_l_@cntr,w
 11738  09C1  00F6               	movwf	??__tdiv_to_l_
 11739  09C2  0876               	movf	??__tdiv_to_l_,w
 11740  09C3  02A5               	subwf	__tdiv_to_l_@exp1,f
 11741  09C4  3018               	movlw	24
 11742  09C5  00F6               	movwf	??__tdiv_to_l_
 11743  09C6  0876               	movf	??__tdiv_to_l_,w
 11744  09C7  00A4               	movwf	__tdiv_to_l_@cntr
 11745  09C8                     i1l2892:	
 11746  09C8  3001               	movlw	1
 11747  09C9                     u328_25:	
 11748  09C9  35A0               	lslf	__tdiv_to_l_@quot,f
 11749  09CA  0DA1               	rlf	__tdiv_to_l_@quot+1,f
 11750  09CB  0DA2               	rlf	__tdiv_to_l_@quot+2,f
 11751  09CC  0DA3               	rlf	__tdiv_to_l_@quot+3,f
 11752  09CD  0B89               	decfsz	9,f
 11753  09CE  29C9               	goto	u328_25
 11754  09CF  0875               	movf	__tdiv_to_l_@f2+2,w
 11755  09D0  0272               	subwf	__tdiv_to_l_@f1+2,w
 11756  09D1  1D03               	skipz
 11757  09D2  29D9               	goto	u329_25
 11758  09D3  0874               	movf	__tdiv_to_l_@f2+1,w
 11759  09D4  0271               	subwf	__tdiv_to_l_@f1+1,w
 11760  09D5  1D03               	skipz
 11761  09D6  29D9               	goto	u329_25
 11762  09D7  0873               	movf	__tdiv_to_l_@f2,w
 11763  09D8  0270               	subwf	__tdiv_to_l_@f1,w
 11764  09D9                     u329_25:	
 11765  09D9  1C03               	skipc
 11766  09DA  29E2               	goto	i1l2900
 11767  09DB  0873               	movf	__tdiv_to_l_@f2,w
 11768  09DC  02F0               	subwf	__tdiv_to_l_@f1,f
 11769  09DD  0874               	movf	__tdiv_to_l_@f2+1,w
 11770  09DE  3BF1               	subwfb	__tdiv_to_l_@f1+1,f
 11771  09DF  0875               	movf	__tdiv_to_l_@f2+2,w
 11772  09E0  3BF2               	subwfb	__tdiv_to_l_@f1+2,f
 11773  09E1  1420               	bsf	__tdiv_to_l_@quot,0
 11774  09E2                     i1l2900:	
 11775  09E2  3001               	movlw	1
 11776  09E3                     u330_25:	
 11777  09E3  35F0               	lslf	__tdiv_to_l_@f1,f
 11778  09E4  0DF1               	rlf	__tdiv_to_l_@f1+1,f
 11779  09E5  0DF2               	rlf	__tdiv_to_l_@f1+2,f
 11780  09E6  0B89               	decfsz	9,f
 11781  09E7  29E3               	goto	u330_25
 11782  09E8  3001               	movlw	1
 11783  09E9  02A4               	subwf	__tdiv_to_l_@cntr,f
 11784  09EA  1D03               	btfss	3,2
 11785  09EB  29C8               	goto	i1l2892
 11786  09EC  1FA5               	btfss	__tdiv_to_l_@exp1,7
 11787  09ED  2A0A               	goto	i1l2912
 11788  09EE  0825               	movf	__tdiv_to_l_@exp1,w
 11789  09EF  3A80               	xorlw	128
 11790  09F0  3E97               	addlw	151
 11791  09F1  1803               	skipnc
 11792  09F2  29FC               	goto	i1l2910
 11793  09F3  3000               	movlw	0
 11794  09F4  00F3               	movwf	?__tdiv_to_l_+3
 11795  09F5  3000               	movlw	0
 11796  09F6  00F2               	movwf	?__tdiv_to_l_+2
 11797  09F7  3000               	movlw	0
 11798  09F8  00F1               	movwf	?__tdiv_to_l_+1
 11799  09F9  3000               	movlw	0
 11800  09FA  00F0               	movwf	?__tdiv_to_l_
 11801  09FB  0008               	return
 11802  09FC                     i1l2910:	
 11803  09FC  3001               	movlw	1
 11804  09FD                     u334_25:	
 11805  09FD  36A3               	lsrf	__tdiv_to_l_@quot+3,f
 11806  09FE  0CA2               	rrf	__tdiv_to_l_@quot+2,f
 11807  09FF  0CA1               	rrf	__tdiv_to_l_@quot+1,f
 11808  0A00  0CA0               	rrf	__tdiv_to_l_@quot,f
 11809  0A01  0B89               	decfsz	9,f
 11810  0A02  29FD               	goto	u334_25
 11811  0A03  3001               	movlw	1
 11812  0A04  00F6               	movwf	??__tdiv_to_l_
 11813  0A05  0876               	movf	??__tdiv_to_l_,w
 11814  0A06  07A5               	addwf	__tdiv_to_l_@exp1,f
 11815  0A07  1903               	btfsc	3,2
 11816  0A08  2A23               	goto	i1l2920
 11817  0A09  29FC               	goto	i1l2910
 11818  0A0A                     i1l2912:	
 11819  0A0A  3018               	movlw	24
 11820  0A0B  0225               	subwf	__tdiv_to_l_@exp1,w
 11821  0A0C  1C03               	skipc
 11822  0A0D  2A20               	goto	i1l944
 11823  0A0E  3000               	movlw	0
 11824  0A0F  00F3               	movwf	?__tdiv_to_l_+3
 11825  0A10  3000               	movlw	0
 11826  0A11  00F2               	movwf	?__tdiv_to_l_+2
 11827  0A12  3000               	movlw	0
 11828  0A13  00F1               	movwf	?__tdiv_to_l_+1
 11829  0A14  3000               	movlw	0
 11830  0A15  00F0               	movwf	?__tdiv_to_l_
 11831  0A16  0008               	return
 11832  0A17                     i1l2918:	
 11833  0A17  3001               	movlw	1
 11834  0A18                     u337_25:	
 11835  0A18  35A0               	lslf	__tdiv_to_l_@quot,f
 11836  0A19  0DA1               	rlf	__tdiv_to_l_@quot+1,f
 11837  0A1A  0DA2               	rlf	__tdiv_to_l_@quot+2,f
 11838  0A1B  0DA3               	rlf	__tdiv_to_l_@quot+3,f
 11839  0A1C  0B89               	decfsz	9,f
 11840  0A1D  2A18               	goto	u337_25
 11841  0A1E  3001               	movlw	1
 11842  0A1F  02A5               	subwf	__tdiv_to_l_@exp1,f
 11843  0A20                     i1l944:	
 11844  0A20  0825               	movf	__tdiv_to_l_@exp1,w
 11845  0A21  1D03               	btfss	3,2
 11846  0A22  2A17               	goto	i1l2918
 11847  0A23                     i1l2920:	
 11848  0A23  0823               	movf	__tdiv_to_l_@quot+3,w
 11849  0A24  00F3               	movwf	?__tdiv_to_l_+3
 11850  0A25  0822               	movf	__tdiv_to_l_@quot+2,w
 11851  0A26  00F2               	movwf	?__tdiv_to_l_+2
 11852  0A27  0821               	movf	__tdiv_to_l_@quot+1,w
 11853  0A28  00F1               	movwf	?__tdiv_to_l_+1
 11854  0A29  0820               	movf	__tdiv_to_l_@quot,w
 11855  0A2A  00F0               	movwf	?__tdiv_to_l_
 11856  0A2B  0008               	return
 11857  0A2C                     __end_of__tdiv_to_l_:	
 11858                           
 11859                           	psect	text33
 11860  0C9F                     __ptext33:	
 11861 ;; *************** function __div_to_l_ *****************
 11862 ;; Defined at:
 11863 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 11864 ;; Parameters:    Size  Location     Type
 11865 ;;  f1              3    0[COMMON] unsigned long 
 11866 ;;  f2              3    3[COMMON] unsigned long 
 11867 ;; Auto vars:     Size  Location     Type
 11868 ;;  quot            4    0[BANK0 ] unsigned long 
 11869 ;;  exp1            1    5[BANK0 ] unsigned char 
 11870 ;;  cntr            1    4[BANK0 ] unsigned char 
 11871 ;; Return value:  Size  Location     Type
 11872 ;;                  4    0[COMMON] unsigned long 
 11873 ;; Registers used:
 11874 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11875 ;; Tracked objects:
 11876 ;;		On entry : 0/0
 11877 ;;		On exit  : 0/0
 11878 ;;		Unchanged: 0/0
 11879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11880 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11881 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11882 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11883 ;;      Totals:        14       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11884 ;;Total ram usage:       20 bytes
 11885 ;; Hardware stack levels used:    1
 11886 ;; This function calls:
 11887 ;;		Nothing
 11888 ;; This function is called by:
 11889 ;;		_sprintf
 11890 ;; This function uses a non-reentrant model
 11891 ;;
 11892                           
 11893                           
 11894                           ;psect for function __div_to_l_
 11895  0C9F                     __div_to_l_:	
 11896                           
 11897                           ;incstack = 0
 11898                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
 11899  0C9F  3070               	movlw	low (__div_to_l_@f1| 0)
 11900  0CA0  0086               	movwf	6
 11901  0CA1  0187               	clrf	7
 11902  0CA2  3F40               	moviw [0]fsr1
 11903  0CA3  00F6               	movwf	??__div_to_l_
 11904  0CA4  3F41               	moviw [1]fsr1
 11905  0CA5  00F7               	movwf	??__div_to_l_+1
 11906  0CA6  3F42               	moviw [2]fsr1
 11907  0CA7  00F8               	movwf	??__div_to_l_+2
 11908  0CA8  3F43               	moviw [3]fsr1
 11909  0CA9  00F9               	movwf	??__div_to_l_+3
 11910  0CAA  1003               	clrc
 11911  0CAB  0D78               	rlf	??__div_to_l_+2,w
 11912  0CAC  0D79               	rlf	??__div_to_l_+3,w
 11913  0CAD  00FA               	movwf	??__div_to_l_+4
 11914  0CAE  087A               	movf	??__div_to_l_+4,w
 11915  0CAF  0140               	movlb	0	; select bank0
 11916  0CB0  00A5               	movwf	__div_to_l_@exp1
 11917  0CB1  0825               	movf	__div_to_l_@exp1,w
 11918  0CB2  1D03               	btfss	3,2
 11919  0CB3  2CBD               	goto	i1l2930
 11920  0CB4  3000               	movlw	0
 11921  0CB5  00F3               	movwf	?__div_to_l_+3
 11922  0CB6  3000               	movlw	0
 11923  0CB7  00F2               	movwf	?__div_to_l_+2
 11924  0CB8  3000               	movlw	0
 11925  0CB9  00F1               	movwf	?__div_to_l_+1
 11926  0CBA  3000               	movlw	0
 11927  0CBB  00F0               	movwf	?__div_to_l_
 11928  0CBC  0008               	return
 11929  0CBD                     i1l2930:	
 11930  0CBD  3073               	movlw	low (__div_to_l_@f2| 0)
 11931  0CBE  0086               	movwf	6
 11932  0CBF  0187               	clrf	7
 11933  0CC0  3F40               	moviw [0]fsr1
 11934  0CC1  00F6               	movwf	??__div_to_l_
 11935  0CC2  3F41               	moviw [1]fsr1
 11936  0CC3  00F7               	movwf	??__div_to_l_+1
 11937  0CC4  3F42               	moviw [2]fsr1
 11938  0CC5  00F8               	movwf	??__div_to_l_+2
 11939  0CC6  3F43               	moviw [3]fsr1
 11940  0CC7  00F9               	movwf	??__div_to_l_+3
 11941  0CC8  1003               	clrc
 11942  0CC9  0D78               	rlf	??__div_to_l_+2,w
 11943  0CCA  0D79               	rlf	??__div_to_l_+3,w
 11944  0CCB  00FA               	movwf	??__div_to_l_+4
 11945  0CCC  087A               	movf	??__div_to_l_+4,w
 11946  0CCD  00A4               	movwf	__div_to_l_@cntr
 11947  0CCE  0824               	movf	__div_to_l_@cntr,w
 11948  0CCF  1D03               	btfss	3,2
 11949  0CD0  2CDA               	goto	i1l2936
 11950  0CD1  3000               	movlw	0
 11951  0CD2  00F3               	movwf	?__div_to_l_+3
 11952  0CD3  3000               	movlw	0
 11953  0CD4  00F2               	movwf	?__div_to_l_+2
 11954  0CD5  3000               	movlw	0
 11955  0CD6  00F1               	movwf	?__div_to_l_+1
 11956  0CD7  3000               	movlw	0
 11957  0CD8  00F0               	movwf	?__div_to_l_
 11958  0CD9  0008               	return
 11959  0CDA                     i1l2936:	
 11960  0CDA  3070               	movlw	low (__div_to_l_@f1| 0)
 11961  0CDB  0086               	movwf	6
 11962  0CDC  0187               	clrf	7
 11963  0CDD  3000               	movlw	0
 11964  0CDE  0481               	iorwf	1,f
 11965  0CDF  3141               	addfsr 1,1
 11966  0CE0  3000               	movlw	0
 11967  0CE1  0481               	iorwf	1,f
 11968  0CE2  3141               	addfsr 1,1
 11969  0CE3  3080               	movlw	128
 11970  0CE4  0481               	iorwf	1,f
 11971  0CE5  3141               	addfsr 1,1
 11972  0CE6  3000               	movlw	0
 11973  0CE7  0481               	iorwf	1,f
 11974  0CE8  3070               	movlw	low (__div_to_l_@f1| 0)
 11975  0CE9  0086               	movwf	6
 11976  0CEA  0187               	clrf	7
 11977  0CEB  30FF               	movlw	255
 11978  0CEC  0581               	andwf	1,f
 11979  0CED  3141               	addfsr 1,1
 11980  0CEE  30FF               	movlw	255
 11981  0CEF  0581               	andwf	1,f
 11982  0CF0  3141               	addfsr 1,1
 11983  0CF1  30FF               	movlw	255
 11984  0CF2  0581               	andwf	1,f
 11985  0CF3  3141               	addfsr 1,1
 11986  0CF4  3000               	movlw	0
 11987  0CF5  0581               	andwf	1,f
 11988  0CF6  3073               	movlw	low (__div_to_l_@f2| 0)
 11989  0CF7  0086               	movwf	6
 11990  0CF8  0187               	clrf	7
 11991  0CF9  3000               	movlw	0
 11992  0CFA  0481               	iorwf	1,f
 11993  0CFB  3141               	addfsr 1,1
 11994  0CFC  3000               	movlw	0
 11995  0CFD  0481               	iorwf	1,f
 11996  0CFE  3141               	addfsr 1,1
 11997  0CFF  3080               	movlw	128
 11998  0D00  0481               	iorwf	1,f
 11999  0D01  3141               	addfsr 1,1
 12000  0D02  3000               	movlw	0
 12001  0D03  0481               	iorwf	1,f
 12002  0D04  3073               	movlw	low (__div_to_l_@f2| 0)
 12003  0D05  0086               	movwf	6
 12004  0D06  0187               	clrf	7
 12005  0D07  30FF               	movlw	255
 12006  0D08  0581               	andwf	1,f
 12007  0D09  3141               	addfsr 1,1
 12008  0D0A  30FF               	movlw	255
 12009  0D0B  0581               	andwf	1,f
 12010  0D0C  3141               	addfsr 1,1
 12011  0D0D  30FF               	movlw	255
 12012  0D0E  0581               	andwf	1,f
 12013  0D0F  3141               	addfsr 1,1
 12014  0D10  3000               	movlw	0
 12015  0D11  0581               	andwf	1,f
 12016  0D12  3000               	movlw	0
 12017  0D13  00A3               	movwf	__div_to_l_@quot+3
 12018  0D14  3000               	movlw	0
 12019  0D15  00A2               	movwf	__div_to_l_@quot+2
 12020  0D16  3000               	movlw	0
 12021  0D17  00A1               	movwf	__div_to_l_@quot+1
 12022  0D18  3000               	movlw	0
 12023  0D19  00A0               	movwf	__div_to_l_@quot
 12024  0D1A  307F               	movlw	127
 12025  0D1B  02A5               	subwf	__div_to_l_@exp1,f
 12026  0D1C  30A0               	movlw	160
 12027  0D1D  0724               	addwf	__div_to_l_@cntr,w
 12028  0D1E  00F6               	movwf	??__div_to_l_
 12029  0D1F  0876               	movf	??__div_to_l_,w
 12030  0D20  02A5               	subwf	__div_to_l_@exp1,f
 12031  0D21  3020               	movlw	32
 12032  0D22  00F6               	movwf	??__div_to_l_
 12033  0D23  0876               	movf	??__div_to_l_,w
 12034  0D24  00A4               	movwf	__div_to_l_@cntr
 12035  0D25                     i1l2946:	
 12036  0D25  3001               	movlw	1
 12037  0D26                     u341_25:	
 12038  0D26  35A0               	lslf	__div_to_l_@quot,f
 12039  0D27  0DA1               	rlf	__div_to_l_@quot+1,f
 12040  0D28  0DA2               	rlf	__div_to_l_@quot+2,f
 12041  0D29  0DA3               	rlf	__div_to_l_@quot+3,f
 12042  0D2A  0B89               	decfsz	9,f
 12043  0D2B  2D26               	goto	u341_25
 12044  0D2C  3073               	movlw	low (__div_to_l_@f2| 0)
 12045  0D2D  0086               	movwf	6
 12046  0D2E  0187               	clrf	7
 12047  0D2F  3F40               	moviw [0]fsr1
 12048  0D30  00F6               	movwf	??__div_to_l_
 12049  0D31  3F41               	moviw [1]fsr1
 12050  0D32  00F7               	movwf	??__div_to_l_+1
 12051  0D33  3F42               	moviw [2]fsr1
 12052  0D34  00F8               	movwf	??__div_to_l_+2
 12053  0D35  3F43               	moviw [3]fsr1
 12054  0D36  00F9               	movwf	??__div_to_l_+3
 12055  0D37  3070               	movlw	low (__div_to_l_@f1| 0)
 12056  0D38  0086               	movwf	6
 12057  0D39  0187               	clrf	7
 12058  0D3A  3F40               	moviw [0]fsr1
 12059  0D3B  00FA               	movwf	??__div_to_l_+4
 12060  0D3C  3F41               	moviw [1]fsr1
 12061  0D3D  00FB               	movwf	??__div_to_l_+5
 12062  0D3E  3F42               	moviw [2]fsr1
 12063  0D3F  00FC               	movwf	??__div_to_l_+6
 12064  0D40  3F43               	moviw [3]fsr1
 12065  0D41  00FD               	movwf	??__div_to_l_+7
 12066  0D42  0879               	movf	??__div_to_l_+3,w
 12067  0D43  027D               	subwf	??__div_to_l_+7,w
 12068  0D44  1D03               	skipz
 12069  0D45  2D50               	goto	u342_25
 12070  0D46  0878               	movf	??__div_to_l_+2,w
 12071  0D47  027C               	subwf	??__div_to_l_+6,w
 12072  0D48  1D03               	skipz
 12073  0D49  2D50               	goto	u342_25
 12074  0D4A  0877               	movf	??__div_to_l_+1,w
 12075  0D4B  027B               	subwf	??__div_to_l_+5,w
 12076  0D4C  1D03               	skipz
 12077  0D4D  2D50               	goto	u342_25
 12078  0D4E  0876               	movf	??__div_to_l_,w
 12079  0D4F  027A               	subwf	??__div_to_l_+4,w
 12080  0D50                     u342_25:	
 12081  0D50  1C03               	skipc
 12082  0D51  2D6D               	goto	i1l2954
 12083  0D52  3073               	movlw	low (__div_to_l_@f2| 0)
 12084  0D53  0086               	movwf	6
 12085  0D54  0187               	clrf	7
 12086  0D55  3F40               	moviw [0]fsr1
 12087  0D56  00F6               	movwf	??__div_to_l_
 12088  0D57  3F41               	moviw [1]fsr1
 12089  0D58  00F7               	movwf	??__div_to_l_+1
 12090  0D59  3F42               	moviw [2]fsr1
 12091  0D5A  00F8               	movwf	??__div_to_l_+2
 12092  0D5B  3F43               	moviw [3]fsr1
 12093  0D5C  00F9               	movwf	??__div_to_l_+3
 12094  0D5D  3070               	movlw	low (__div_to_l_@f1| 0)
 12095  0D5E  0086               	movwf	6
 12096  0D5F  0187               	clrf	7
 12097  0D60  0876               	movf	??__div_to_l_,w
 12098  0D61  0281               	subwf	1,f
 12099  0D62  3141               	addfsr 1,1
 12100  0D63  0877               	movf	??__div_to_l_+1,w
 12101  0D64  3B81               	subwfb	1,f
 12102  0D65  3141               	addfsr 1,1
 12103  0D66  0878               	movf	??__div_to_l_+2,w
 12104  0D67  3B81               	subwfb	1,f
 12105  0D68  3141               	addfsr 1,1
 12106  0D69  0879               	movf	??__div_to_l_+3,w
 12107  0D6A  3B81               	subwfb	1,f
 12108  0D6B  317D               	addfsr 1,-3
 12109  0D6C  1420               	bsf	__div_to_l_@quot,0
 12110  0D6D                     i1l2954:	
 12111  0D6D  3070               	movlw	low (__div_to_l_@f1| 0)
 12112  0D6E  0086               	movwf	6
 12113  0D6F  0187               	clrf	7
 12114  0D70  3581               	lslf	1,f
 12115  0D71  3141               	addfsr 1,1
 12116  0D72  0D81               	rlf	1,f
 12117  0D73  3141               	addfsr 1,1
 12118  0D74  0D81               	rlf	1,f
 12119  0D75  3141               	addfsr 1,1
 12120  0D76  0D81               	rlf	1,f
 12121  0D77  317D               	addfsr 1,-3
 12122  0D78  3001               	movlw	1
 12123  0D79  02A4               	subwf	__div_to_l_@cntr,f
 12124  0D7A  1D03               	btfss	3,2
 12125  0D7B  2D25               	goto	i1l2946
 12126  0D7C  1FA5               	btfss	__div_to_l_@exp1,7
 12127  0D7D  2D9A               	goto	i1l2966
 12128  0D7E  0825               	movf	__div_to_l_@exp1,w
 12129  0D7F  3A80               	xorlw	128
 12130  0D80  3E9F               	addlw	159
 12131  0D81  1803               	skipnc
 12132  0D82  2D8C               	goto	i1l2964
 12133  0D83  3000               	movlw	0
 12134  0D84  00F3               	movwf	?__div_to_l_+3
 12135  0D85  3000               	movlw	0
 12136  0D86  00F2               	movwf	?__div_to_l_+2
 12137  0D87  3000               	movlw	0
 12138  0D88  00F1               	movwf	?__div_to_l_+1
 12139  0D89  3000               	movlw	0
 12140  0D8A  00F0               	movwf	?__div_to_l_
 12141  0D8B  0008               	return
 12142  0D8C                     i1l2964:	
 12143  0D8C  3001               	movlw	1
 12144  0D8D                     u346_25:	
 12145  0D8D  36A3               	lsrf	__div_to_l_@quot+3,f
 12146  0D8E  0CA2               	rrf	__div_to_l_@quot+2,f
 12147  0D8F  0CA1               	rrf	__div_to_l_@quot+1,f
 12148  0D90  0CA0               	rrf	__div_to_l_@quot,f
 12149  0D91  0B89               	decfsz	9,f
 12150  0D92  2D8D               	goto	u346_25
 12151  0D93  3001               	movlw	1
 12152  0D94  00F6               	movwf	??__div_to_l_
 12153  0D95  0876               	movf	??__div_to_l_,w
 12154  0D96  07A5               	addwf	__div_to_l_@exp1,f
 12155  0D97  1903               	btfsc	3,2
 12156  0D98  2DB3               	goto	i1l2974
 12157  0D99  2D8C               	goto	i1l2964
 12158  0D9A                     i1l2966:	
 12159  0D9A  3020               	movlw	32
 12160  0D9B  0225               	subwf	__div_to_l_@exp1,w
 12161  0D9C  1C03               	skipc
 12162  0D9D  2DB0               	goto	i1l865
 12163  0D9E  3000               	movlw	0
 12164  0D9F  00F3               	movwf	?__div_to_l_+3
 12165  0DA0  3000               	movlw	0
 12166  0DA1  00F2               	movwf	?__div_to_l_+2
 12167  0DA2  3000               	movlw	0
 12168  0DA3  00F1               	movwf	?__div_to_l_+1
 12169  0DA4  3000               	movlw	0
 12170  0DA5  00F0               	movwf	?__div_to_l_
 12171  0DA6  0008               	return
 12172  0DA7                     i1l2972:	
 12173  0DA7  3001               	movlw	1
 12174  0DA8                     u349_25:	
 12175  0DA8  35A0               	lslf	__div_to_l_@quot,f
 12176  0DA9  0DA1               	rlf	__div_to_l_@quot+1,f
 12177  0DAA  0DA2               	rlf	__div_to_l_@quot+2,f
 12178  0DAB  0DA3               	rlf	__div_to_l_@quot+3,f
 12179  0DAC  0B89               	decfsz	9,f
 12180  0DAD  2DA8               	goto	u349_25
 12181  0DAE  3001               	movlw	1
 12182  0DAF  02A5               	subwf	__div_to_l_@exp1,f
 12183  0DB0                     i1l865:	
 12184  0DB0  0825               	movf	__div_to_l_@exp1,w
 12185  0DB1  1D03               	btfss	3,2
 12186  0DB2  2DA7               	goto	i1l2972
 12187  0DB3                     i1l2974:	
 12188  0DB3  0823               	movf	__div_to_l_@quot+3,w
 12189  0DB4  00F3               	movwf	?__div_to_l_+3
 12190  0DB5  0822               	movf	__div_to_l_@quot+2,w
 12191  0DB6  00F2               	movwf	?__div_to_l_+2
 12192  0DB7  0821               	movf	__div_to_l_@quot+1,w
 12193  0DB8  00F1               	movwf	?__div_to_l_+1
 12194  0DB9  0820               	movf	__div_to_l_@quot,w
 12195  0DBA  00F0               	movwf	?__div_to_l_
 12196  0DBB  0008               	return
 12197  0DBC                     __end_of__div_to_l_:	
 12198                           
 12199                           	psect	text34
 12200  1457                     __ptext34:	
 12201 ;; *************** function ___lltoft *****************
 12202 ;; Defined at:
 12203 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;  c               4    8[COMMON] unsigned long 
 12206 ;; Auto vars:     Size  Location     Type
 12207 ;;  exp             1   13[COMMON] unsigned char 
 12208 ;; Return value:  Size  Location     Type
 12209 ;;                  3    8[COMMON] float 
 12210 ;; Registers used:
 12211 ;;		wreg, status,2, status,0, pclath, cstack
 12212 ;; Tracked objects:
 12213 ;;		On entry : 0/0
 12214 ;;		On exit  : 0/0
 12215 ;;		Unchanged: 0/0
 12216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12217 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12220 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12221 ;;Total ram usage:        6 bytes
 12222 ;; Hardware stack levels used:    1
 12223 ;; Hardware stack levels required when called:    1
 12224 ;; This function calls:
 12225 ;;		___ftpack
 12226 ;; This function is called by:
 12227 ;;		_sprintf
 12228 ;; This function uses a non-reentrant model
 12229 ;;
 12230                           
 12231                           
 12232                           ;psect for function ___lltoft
 12233  1457                     ___lltoft:	
 12234                           
 12235                           ;incstack = 0
 12236                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
 12237  1457  308E               	movlw	142
 12238  1458  00FC               	movwf	??___lltoft
 12239  1459  087C               	movf	??___lltoft,w
 12240  145A  00FD               	movwf	___lltoft@exp
 12241  145B                     i1l3132:	
 12242  145B  30FF               	movlw	255
 12243  145C  057B               	andwf	___lltoft@c+3,w
 12244  145D  1903               	btfsc	3,2
 12245  145E  2C6B               	goto	i1l3134
 12246  145F  3001               	movlw	1
 12247  1460                     u385_25:	
 12248  1460  36FB               	lsrf	___lltoft@c+3,f
 12249  1461  0CFA               	rrf	___lltoft@c+2,f
 12250  1462  0CF9               	rrf	___lltoft@c+1,f
 12251  1463  0CF8               	rrf	___lltoft@c,f
 12252  1464  0B89               	decfsz	9,f
 12253  1465  2C60               	goto	u385_25
 12254  1466  3001               	movlw	1
 12255  1467  00FC               	movwf	??___lltoft
 12256  1468  087C               	movf	??___lltoft,w
 12257  1469  07FD               	addwf	___lltoft@exp,f
 12258  146A  2C5B               	goto	i1l3132
 12259  146B                     i1l3134:	
 12260  146B  0878               	movf	___lltoft@c,w
 12261  146C  00F0               	movwf	___ftpack@arg
 12262  146D  0879               	movf	___lltoft@c+1,w
 12263  146E  00F1               	movwf	___ftpack@arg+1
 12264  146F  087A               	movf	___lltoft@c+2,w
 12265  1470  00F2               	movwf	___ftpack@arg+2
 12266  1471  087D               	movf	___lltoft@exp,w
 12267  1472  00FC               	movwf	??___lltoft
 12268  1473  087C               	movf	??___lltoft,w
 12269  1474  00F3               	movwf	___ftpack@exp
 12270  1475  01F4               	clrf	___ftpack@sign
 12271  1476  3196  26B8         	fcall	___ftpack
 12272  1478  0870               	movf	?___ftpack,w
 12273  1479  00F8               	movwf	?___lltoft
 12274  147A  0871               	movf	?___ftpack+1,w
 12275  147B  00F9               	movwf	?___lltoft+1
 12276  147C  0872               	movf	?___ftpack+2,w
 12277  147D  00FA               	movwf	?___lltoft+2
 12278  147E  0008               	return
 12279  147F                     __end_of___lltoft:	
 12280                           
 12281                           	psect	text35
 12282  1536                     __ptext35:	
 12283 ;; *************** function ___llmod *****************
 12284 ;; Defined at:
 12285 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 12286 ;; Parameters:    Size  Location     Type
 12287 ;;  divisor         4    0[COMMON] unsigned long 
 12288 ;;  dividend        4    4[COMMON] unsigned long 
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;  counter         1    9[COMMON] unsigned char 
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  4    0[COMMON] unsigned long 
 12293 ;; Registers used:
 12294 ;;		wreg, status,2, status,0
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12300 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12302 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12303 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12304 ;;Total ram usage:       10 bytes
 12305 ;; Hardware stack levels used:    1
 12306 ;; This function calls:
 12307 ;;		Nothing
 12308 ;; This function is called by:
 12309 ;;		_sprintf
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313                           
 12314                           ;psect for function ___llmod
 12315  1536                     ___llmod:	
 12316                           
 12317                           ;incstack = 0
 12318                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 12319  1536  0873               	movf	___llmod@divisor+3,w
 12320  1537  0472               	iorwf	___llmod@divisor+2,w
 12321  1538  0471               	iorwf	___llmod@divisor+1,w
 12322  1539  0470               	iorwf	___llmod@divisor,w
 12323  153A  1903               	skipnz
 12324  153B  2D6F               	goto	i1l3124
 12325  153C  01F9               	clrf	___llmod@counter
 12326  153D  0AF9               	incf	___llmod@counter,f
 12327  153E                     i1l3114:	
 12328  153E  1BF3               	btfsc	___llmod@divisor+3,7
 12329  153F  2D4C               	goto	i1l3116
 12330  1540  3001               	movlw	1
 12331  1541                     u380_25:	
 12332  1541  35F0               	lslf	___llmod@divisor,f
 12333  1542  0DF1               	rlf	___llmod@divisor+1,f
 12334  1543  0DF2               	rlf	___llmod@divisor+2,f
 12335  1544  0DF3               	rlf	___llmod@divisor+3,f
 12336  1545  0B89               	decfsz	9,f
 12337  1546  2D41               	goto	u380_25
 12338  1547  3001               	movlw	1
 12339  1548  00F8               	movwf	??___llmod
 12340  1549  0878               	movf	??___llmod,w
 12341  154A  07F9               	addwf	___llmod@counter,f
 12342  154B  2D3E               	goto	i1l3114
 12343  154C                     i1l3116:	
 12344  154C  0873               	movf	___llmod@divisor+3,w
 12345  154D  0277               	subwf	___llmod@dividend+3,w
 12346  154E  1D03               	skipz
 12347  154F  2D5A               	goto	u382_25
 12348  1550  0872               	movf	___llmod@divisor+2,w
 12349  1551  0276               	subwf	___llmod@dividend+2,w
 12350  1552  1D03               	skipz
 12351  1553  2D5A               	goto	u382_25
 12352  1554  0871               	movf	___llmod@divisor+1,w
 12353  1555  0275               	subwf	___llmod@dividend+1,w
 12354  1556  1D03               	skipz
 12355  1557  2D5A               	goto	u382_25
 12356  1558  0870               	movf	___llmod@divisor,w
 12357  1559  0274               	subwf	___llmod@dividend,w
 12358  155A                     u382_25:	
 12359  155A  1C03               	skipc
 12360  155B  2D64               	goto	i1l3120
 12361  155C  0870               	movf	___llmod@divisor,w
 12362  155D  02F4               	subwf	___llmod@dividend,f
 12363  155E  0871               	movf	___llmod@divisor+1,w
 12364  155F  3BF5               	subwfb	___llmod@dividend+1,f
 12365  1560  0872               	movf	___llmod@divisor+2,w
 12366  1561  3BF6               	subwfb	___llmod@dividend+2,f
 12367  1562  0873               	movf	___llmod@divisor+3,w
 12368  1563  3BF7               	subwfb	___llmod@dividend+3,f
 12369  1564                     i1l3120:	
 12370  1564  3001               	movlw	1
 12371  1565                     u383_25:	
 12372  1565  36F3               	lsrf	___llmod@divisor+3,f
 12373  1566  0CF2               	rrf	___llmod@divisor+2,f
 12374  1567  0CF1               	rrf	___llmod@divisor+1,f
 12375  1568  0CF0               	rrf	___llmod@divisor,f
 12376  1569  0B89               	decfsz	9,f
 12377  156A  2D65               	goto	u383_25
 12378  156B  3001               	movlw	1
 12379  156C  02F9               	subwf	___llmod@counter,f
 12380  156D  1D03               	btfss	3,2
 12381  156E  2D4C               	goto	i1l3116
 12382  156F                     i1l3124:	
 12383  156F  0877               	movf	___llmod@dividend+3,w
 12384  1570  00F3               	movwf	?___llmod+3
 12385  1571  0876               	movf	___llmod@dividend+2,w
 12386  1572  00F2               	movwf	?___llmod+2
 12387  1573  0875               	movf	___llmod@dividend+1,w
 12388  1574  00F1               	movwf	?___llmod+1
 12389  1575  0874               	movf	___llmod@dividend,w
 12390  1576  00F0               	movwf	?___llmod
 12391  1577  0008               	return
 12392  1578                     __end_of___llmod:	
 12393                           
 12394                           	psect	text36
 12395  15BD                     __ptext36:	
 12396 ;; *************** function ___lldiv *****************
 12397 ;; Defined at:
 12398 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 12399 ;; Parameters:    Size  Location     Type
 12400 ;;  divisor         4    0[COMMON] unsigned long 
 12401 ;;  dividend        4    4[COMMON] unsigned long 
 12402 ;; Auto vars:     Size  Location     Type
 12403 ;;  quotient        4    9[COMMON] unsigned long 
 12404 ;;  counter         1   13[COMMON] unsigned char 
 12405 ;; Return value:  Size  Location     Type
 12406 ;;                  4    0[COMMON] unsigned long 
 12407 ;; Registers used:
 12408 ;;		wreg, status,2, status,0
 12409 ;; Tracked objects:
 12410 ;;		On entry : 0/0
 12411 ;;		On exit  : 0/0
 12412 ;;		Unchanged: 0/0
 12413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12414 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12415 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12417 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12418 ;;Total ram usage:       14 bytes
 12419 ;; Hardware stack levels used:    1
 12420 ;; This function calls:
 12421 ;;		Nothing
 12422 ;; This function is called by:
 12423 ;;		_sprintf
 12424 ;; This function uses a non-reentrant model
 12425 ;;
 12426                           
 12427                           
 12428                           ;psect for function ___lldiv
 12429  15BD                     ___lldiv:	
 12430                           
 12431                           ;incstack = 0
 12432                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12433  15BD  3000               	movlw	0
 12434  15BE  00FC               	movwf	___lldiv@quotient+3
 12435  15BF  3000               	movlw	0
 12436  15C0  00FB               	movwf	___lldiv@quotient+2
 12437  15C1  3000               	movlw	0
 12438  15C2  00FA               	movwf	___lldiv@quotient+1
 12439  15C3  3000               	movlw	0
 12440  15C4  00F9               	movwf	___lldiv@quotient
 12441  15C5  0873               	movf	___lldiv@divisor+3,w
 12442  15C6  0472               	iorwf	___lldiv@divisor+2,w
 12443  15C7  0471               	iorwf	___lldiv@divisor+1,w
 12444  15C8  0470               	iorwf	___lldiv@divisor,w
 12445  15C9  1903               	skipnz
 12446  15CA  2E06               	goto	i1l3104
 12447  15CB  01FD               	clrf	___lldiv@counter
 12448  15CC  0AFD               	incf	___lldiv@counter,f
 12449  15CD                     i1l3090:	
 12450  15CD  1BF3               	btfsc	___lldiv@divisor+3,7
 12451  15CE  2DDB               	goto	i1l3092
 12452  15CF  3001               	movlw	1
 12453  15D0                     u373_25:	
 12454  15D0  35F0               	lslf	___lldiv@divisor,f
 12455  15D1  0DF1               	rlf	___lldiv@divisor+1,f
 12456  15D2  0DF2               	rlf	___lldiv@divisor+2,f
 12457  15D3  0DF3               	rlf	___lldiv@divisor+3,f
 12458  15D4  0B89               	decfsz	9,f
 12459  15D5  2DD0               	goto	u373_25
 12460  15D6  3001               	movlw	1
 12461  15D7  00F8               	movwf	??___lldiv
 12462  15D8  0878               	movf	??___lldiv,w
 12463  15D9  07FD               	addwf	___lldiv@counter,f
 12464  15DA  2DCD               	goto	i1l3090
 12465  15DB                     i1l3092:	
 12466  15DB  3001               	movlw	1
 12467  15DC                     u375_25:	
 12468  15DC  35F9               	lslf	___lldiv@quotient,f
 12469  15DD  0DFA               	rlf	___lldiv@quotient+1,f
 12470  15DE  0DFB               	rlf	___lldiv@quotient+2,f
 12471  15DF  0DFC               	rlf	___lldiv@quotient+3,f
 12472  15E0  0B89               	decfsz	9,f
 12473  15E1  2DDC               	goto	u375_25
 12474  15E2  0873               	movf	___lldiv@divisor+3,w
 12475  15E3  0277               	subwf	___lldiv@dividend+3,w
 12476  15E4  1D03               	skipz
 12477  15E5  2DF0               	goto	u376_25
 12478  15E6  0872               	movf	___lldiv@divisor+2,w
 12479  15E7  0276               	subwf	___lldiv@dividend+2,w
 12480  15E8  1D03               	skipz
 12481  15E9  2DF0               	goto	u376_25
 12482  15EA  0871               	movf	___lldiv@divisor+1,w
 12483  15EB  0275               	subwf	___lldiv@dividend+1,w
 12484  15EC  1D03               	skipz
 12485  15ED  2DF0               	goto	u376_25
 12486  15EE  0870               	movf	___lldiv@divisor,w
 12487  15EF  0274               	subwf	___lldiv@dividend,w
 12488  15F0                     u376_25:	
 12489  15F0  1C03               	skipc
 12490  15F1  2DFB               	goto	i1l3100
 12491  15F2  0870               	movf	___lldiv@divisor,w
 12492  15F3  02F4               	subwf	___lldiv@dividend,f
 12493  15F4  0871               	movf	___lldiv@divisor+1,w
 12494  15F5  3BF5               	subwfb	___lldiv@dividend+1,f
 12495  15F6  0872               	movf	___lldiv@divisor+2,w
 12496  15F7  3BF6               	subwfb	___lldiv@dividend+2,f
 12497  15F8  0873               	movf	___lldiv@divisor+3,w
 12498  15F9  3BF7               	subwfb	___lldiv@dividend+3,f
 12499  15FA  1479               	bsf	___lldiv@quotient,0
 12500  15FB                     i1l3100:	
 12501  15FB  3001               	movlw	1
 12502  15FC                     u377_25:	
 12503  15FC  36F3               	lsrf	___lldiv@divisor+3,f
 12504  15FD  0CF2               	rrf	___lldiv@divisor+2,f
 12505  15FE  0CF1               	rrf	___lldiv@divisor+1,f
 12506  15FF  0CF0               	rrf	___lldiv@divisor,f
 12507  1600  0B89               	decfsz	9,f
 12508  1601  2DFC               	goto	u377_25
 12509  1602  3001               	movlw	1
 12510  1603  02FD               	subwf	___lldiv@counter,f
 12511  1604  1D03               	btfss	3,2
 12512  1605  2DDB               	goto	i1l3092
 12513  1606                     i1l3104:	
 12514  1606  087C               	movf	___lldiv@quotient+3,w
 12515  1607  00F3               	movwf	?___lldiv+3
 12516  1608  087B               	movf	___lldiv@quotient+2,w
 12517  1609  00F2               	movwf	?___lldiv+2
 12518  160A  087A               	movf	___lldiv@quotient+1,w
 12519  160B  00F1               	movwf	?___lldiv+1
 12520  160C  0879               	movf	___lldiv@quotient,w
 12521  160D  00F0               	movwf	?___lldiv
 12522  160E  0008               	return
 12523  160F                     __end_of___lldiv:	
 12524                           
 12525                           	psect	text37
 12526  083B                     __ptext37:	
 12527 ;; *************** function ___fttol *****************
 12528 ;; Defined at:
 12529 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 12530 ;; Parameters:    Size  Location     Type
 12531 ;;  f1              3   24[BANK0 ] float 
 12532 ;; Auto vars:     Size  Location     Type
 12533 ;;  lval            4   33[BANK0 ] unsigned long 
 12534 ;;  exp1            1   37[BANK0 ] unsigned char 
 12535 ;;  sign1           1   32[BANK0 ] unsigned char 
 12536 ;; Return value:  Size  Location     Type
 12537 ;;                  4   24[BANK0 ] long 
 12538 ;; Registers used:
 12539 ;;		wreg, status,2, status,0
 12540 ;; Tracked objects:
 12541 ;;		On entry : 0/0
 12542 ;;		On exit  : 0/0
 12543 ;;		Unchanged: 0/0
 12544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12545 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12546 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12547 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12548 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12549 ;;Total ram usage:       14 bytes
 12550 ;; Hardware stack levels used:    1
 12551 ;; This function calls:
 12552 ;;		Nothing
 12553 ;; This function is called by:
 12554 ;;		_sprintf
 12555 ;; This function uses a non-reentrant model
 12556 ;;
 12557                           
 12558                           
 12559                           ;psect for function ___fttol
 12560  083B                     ___fttol:	
 12561                           
 12562                           ;incstack = 0
 12563                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 12564  083B  0140               	movlb	0	; select bank0
 12565  083C  0838               	movf	___fttol@f1,w
 12566  083D  00BC               	movwf	??___fttol
 12567  083E  0839               	movf	___fttol@f1+1,w
 12568  083F  00BD               	movwf	??___fttol+1
 12569  0840  083A               	movf	___fttol@f1+2,w
 12570  0841  00BE               	movwf	??___fttol+2
 12571  0842  1003               	clrc
 12572  0843  0D3D               	rlf	??___fttol+1,w
 12573  0844  0D3E               	rlf	??___fttol+2,w
 12574  0845  00BF               	movwf	??___fttol+3
 12575  0846  083F               	movf	??___fttol+3,w
 12576  0847  00C5               	movwf	___fttol@exp1
 12577  0848  0845               	movf	___fttol@exp1,w
 12578  0849  1D03               	btfss	3,2
 12579  084A  2854               	goto	i1l3048
 12580  084B  3000               	movlw	0
 12581  084C  00BB               	movwf	?___fttol+3
 12582  084D  3000               	movlw	0
 12583  084E  00BA               	movwf	?___fttol+2
 12584  084F  3000               	movlw	0
 12585  0850  00B9               	movwf	?___fttol+1
 12586  0851  3000               	movlw	0
 12587  0852  00B8               	movwf	?___fttol
 12588  0853  0008               	return
 12589  0854                     i1l3048:	
 12590  0854  0838               	movf	___fttol@f1,w
 12591  0855  00BC               	movwf	??___fttol
 12592  0856  0839               	movf	___fttol@f1+1,w
 12593  0857  00BD               	movwf	??___fttol+1
 12594  0858  083A               	movf	___fttol@f1+2,w
 12595  0859  00BE               	movwf	??___fttol+2
 12596  085A  3017               	movlw	23
 12597  085B                     u363_25:	
 12598  085B  36BE               	lsrf	??___fttol+2,f
 12599  085C  0CBD               	rrf	??___fttol+1,f
 12600  085D  0CBC               	rrf	??___fttol,f
 12601  085E  0B89               	decfsz	9,f
 12602  085F  285B               	goto	u363_25
 12603  0860  083C               	movf	??___fttol,w
 12604  0861  00BF               	movwf	??___fttol+3
 12605  0862  083F               	movf	??___fttol+3,w
 12606  0863  00C0               	movwf	___fttol@sign1
 12607  0864  17B9               	bsf	___fttol@f1+1,7
 12608  0865  30FF               	movlw	255
 12609  0866  05B8               	andwf	___fttol@f1,f
 12610  0867  30FF               	movlw	255
 12611  0868  05B9               	andwf	___fttol@f1+1,f
 12612  0869  3000               	movlw	0
 12613  086A  05BA               	andwf	___fttol@f1+2,f
 12614  086B  0838               	movf	___fttol@f1,w
 12615  086C  00C1               	movwf	___fttol@lval
 12616  086D  0839               	movf	___fttol@f1+1,w
 12617  086E  00C2               	movwf	___fttol@lval+1
 12618  086F  083A               	movf	___fttol@f1+2,w
 12619  0870  00C3               	movwf	___fttol@lval+2
 12620  0871  01C4               	clrf	___fttol@lval+3
 12621  0872  308E               	movlw	142
 12622  0873  02C5               	subwf	___fttol@exp1,f
 12623  0874  1FC5               	btfss	___fttol@exp1,7
 12624  0875  2892               	goto	i1l3068
 12625  0876  0845               	movf	___fttol@exp1,w
 12626  0877  3A80               	xorlw	128
 12627  0878  3E8F               	addlw	143
 12628  0879  1803               	skipnc
 12629  087A  2884               	goto	i1l3066
 12630  087B  3000               	movlw	0
 12631  087C  00BB               	movwf	?___fttol+3
 12632  087D  3000               	movlw	0
 12633  087E  00BA               	movwf	?___fttol+2
 12634  087F  3000               	movlw	0
 12635  0880  00B9               	movwf	?___fttol+1
 12636  0881  3000               	movlw	0
 12637  0882  00B8               	movwf	?___fttol
 12638  0883  0008               	return
 12639  0884                     i1l3066:	
 12640  0884  3001               	movlw	1
 12641  0885                     u366_25:	
 12642  0885  36C4               	lsrf	___fttol@lval+3,f
 12643  0886  0CC3               	rrf	___fttol@lval+2,f
 12644  0887  0CC2               	rrf	___fttol@lval+1,f
 12645  0888  0CC1               	rrf	___fttol@lval,f
 12646  0889  0B89               	decfsz	9,f
 12647  088A  2885               	goto	u366_25
 12648  088B  3001               	movlw	1
 12649  088C  00BC               	movwf	??___fttol
 12650  088D  083C               	movf	??___fttol,w
 12651  088E  07C5               	addwf	___fttol@exp1,f
 12652  088F  1903               	btfsc	3,2
 12653  0890  28AB               	goto	i1l3076
 12654  0891  2884               	goto	i1l3066
 12655  0892                     i1l3068:	
 12656  0892  3018               	movlw	24
 12657  0893  0245               	subwf	___fttol@exp1,w
 12658  0894  1C03               	skipc
 12659  0895  28A8               	goto	i1l985
 12660  0896  3000               	movlw	0
 12661  0897  00BB               	movwf	?___fttol+3
 12662  0898  3000               	movlw	0
 12663  0899  00BA               	movwf	?___fttol+2
 12664  089A  3000               	movlw	0
 12665  089B  00B9               	movwf	?___fttol+1
 12666  089C  3000               	movlw	0
 12667  089D  00B8               	movwf	?___fttol
 12668  089E  0008               	return
 12669  089F                     i1l3074:	
 12670  089F  3001               	movlw	1
 12671  08A0                     u369_25:	
 12672  08A0  35C1               	lslf	___fttol@lval,f
 12673  08A1  0DC2               	rlf	___fttol@lval+1,f
 12674  08A2  0DC3               	rlf	___fttol@lval+2,f
 12675  08A3  0DC4               	rlf	___fttol@lval+3,f
 12676  08A4  0B89               	decfsz	9,f
 12677  08A5  28A0               	goto	u369_25
 12678  08A6  3001               	movlw	1
 12679  08A7  02C5               	subwf	___fttol@exp1,f
 12680  08A8                     i1l985:	
 12681  08A8  0845               	movf	___fttol@exp1,w
 12682  08A9  1D03               	btfss	3,2
 12683  08AA  289F               	goto	i1l3074
 12684  08AB                     i1l3076:	
 12685  08AB  0840               	movf	___fttol@sign1,w
 12686  08AC  1903               	btfsc	3,2
 12687  08AD  28B9               	goto	i1l3080
 12688  08AE  09C1               	comf	___fttol@lval,f
 12689  08AF  09C2               	comf	___fttol@lval+1,f
 12690  08B0  09C3               	comf	___fttol@lval+2,f
 12691  08B1  09C4               	comf	___fttol@lval+3,f
 12692  08B2  0AC1               	incf	___fttol@lval,f
 12693  08B3  1903               	skipnz
 12694  08B4  0AC2               	incf	___fttol@lval+1,f
 12695  08B5  1903               	skipnz
 12696  08B6  0AC3               	incf	___fttol@lval+2,f
 12697  08B7  1903               	skipnz
 12698  08B8  0AC4               	incf	___fttol@lval+3,f
 12699  08B9                     i1l3080:	
 12700  08B9  0844               	movf	___fttol@lval+3,w
 12701  08BA  00BB               	movwf	?___fttol+3
 12702  08BB  0843               	movf	___fttol@lval+2,w
 12703  08BC  00BA               	movwf	?___fttol+2
 12704  08BD  0842               	movf	___fttol@lval+1,w
 12705  08BE  00B9               	movwf	?___fttol+1
 12706  08BF  0841               	movf	___fttol@lval,w
 12707  08C0  00B8               	movwf	?___fttol
 12708  08C1  0008               	return
 12709  08C2                     __end_of___fttol:	
 12710                           
 12711                           	psect	text38
 12712  13D6                     __ptext38:	
 12713 ;; *************** function ___ftsub *****************
 12714 ;; Defined at:
 12715 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 12716 ;; Parameters:    Size  Location     Type
 12717 ;;  f2              3   51[BANK0 ] float 
 12718 ;;  f1              3   54[BANK0 ] float 
 12719 ;; Auto vars:     Size  Location     Type
 12720 ;;		None
 12721 ;; Return value:  Size  Location     Type
 12722 ;;                  3   51[BANK0 ] float 
 12723 ;; Registers used:
 12724 ;;		wreg, status,2, status,0, pclath, cstack
 12725 ;; Tracked objects:
 12726 ;;		On entry : 0/0
 12727 ;;		On exit  : 0/0
 12728 ;;		Unchanged: 0/0
 12729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12730 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12733 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12734 ;;Total ram usage:        6 bytes
 12735 ;; Hardware stack levels used:    1
 12736 ;; Hardware stack levels required when called:    2
 12737 ;; This function calls:
 12738 ;;		___ftadd
 12739 ;; This function is called by:
 12740 ;;		_sprintf
 12741 ;; This function uses a non-reentrant model
 12742 ;;
 12743                           
 12744                           
 12745                           ;psect for function ___ftsub
 12746  13D6                     ___ftsub:	
 12747                           
 12748                           ;incstack = 0
 12749                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
 12750  13D6  0140               	movlb	0	; select bank0
 12751  13D7  0855               	movf	___ftsub@f2+2,w
 12752  13D8  0454               	iorwf	___ftsub@f2+1,w
 12753  13D9  0453               	iorwf	___ftsub@f2,w
 12754  13DA  1903               	skipnz
 12755  13DB  2BDE               	goto	i1l3038
 12756  13DC  3080               	movlw	128
 12757  13DD  06D5               	xorwf	___ftsub@f2+2,f
 12758  13DE                     i1l3038:	
 12759  13DE  0856               	movf	___ftsub@f1,w
 12760  13DF  00C6               	movwf	___ftadd@f1
 12761  13E0  0857               	movf	___ftsub@f1+1,w
 12762  13E1  00C7               	movwf	___ftadd@f1+1
 12763  13E2  0858               	movf	___ftsub@f1+2,w
 12764  13E3  00C8               	movwf	___ftadd@f1+2
 12765  13E4  0853               	movf	___ftsub@f2,w
 12766  13E5  00C9               	movwf	___ftadd@f2
 12767  13E6  0854               	movf	___ftsub@f2+1,w
 12768  13E7  00CA               	movwf	___ftadd@f2+1
 12769  13E8  0855               	movf	___ftsub@f2+2,w
 12770  13E9  00CB               	movwf	___ftadd@f2+2
 12771  13EA  318B  23A9         	fcall	___ftadd
 12772  13EC  0140               	movlb	0	; select bank0
 12773  13ED  0846               	movf	?___ftadd,w
 12774  13EE  00D3               	movwf	?___ftsub
 12775  13EF  0847               	movf	?___ftadd+1,w
 12776  13F0  00D4               	movwf	?___ftsub+1
 12777  13F1  0848               	movf	?___ftadd+2,w
 12778  13F2  00D5               	movwf	?___ftsub+2
 12779  13F3  0008               	return
 12780  13F4                     __end_of___ftsub:	
 12781                           
 12782                           	psect	text39
 12783  0BA9                     __ptext39:	
 12784 ;; *************** function ___ftadd *****************
 12785 ;; Defined at:
 12786 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 12787 ;; Parameters:    Size  Location     Type
 12788 ;;  f1              3   38[BANK0 ] float 
 12789 ;;  f2              3   41[BANK0 ] float 
 12790 ;; Auto vars:     Size  Location     Type
 12791 ;;  exp1            1   50[BANK0 ] unsigned char 
 12792 ;;  exp2            1   49[BANK0 ] unsigned char 
 12793 ;;  sign            1   48[BANK0 ] unsigned char 
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  3   38[BANK0 ] float 
 12796 ;; Registers used:
 12797 ;;		wreg, status,2, status,0, pclath, cstack
 12798 ;; Tracked objects:
 12799 ;;		On entry : 0/0
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12803 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12804 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12805 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12806 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12807 ;;Total ram usage:       13 bytes
 12808 ;; Hardware stack levels used:    1
 12809 ;; Hardware stack levels required when called:    1
 12810 ;; This function calls:
 12811 ;;		___ftpack
 12812 ;; This function is called by:
 12813 ;;		_sprintf
 12814 ;;		___ftsub
 12815 ;; This function uses a non-reentrant model
 12816 ;;
 12817                           
 12818                           
 12819                           ;psect for function ___ftadd
 12820  0BA9                     ___ftadd:	
 12821                           
 12822                           ;incstack = 0
 12823                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 12824  0BA9  0140               	movlb	0	; select bank0
 12825  0BAA  0846               	movf	___ftadd@f1,w
 12826  0BAB  00CC               	movwf	??___ftadd
 12827  0BAC  0847               	movf	___ftadd@f1+1,w
 12828  0BAD  00CD               	movwf	??___ftadd+1
 12829  0BAE  0848               	movf	___ftadd@f1+2,w
 12830  0BAF  00CE               	movwf	??___ftadd+2
 12831  0BB0  1003               	clrc
 12832  0BB1  0D4D               	rlf	??___ftadd+1,w
 12833  0BB2  0D4E               	rlf	??___ftadd+2,w
 12834  0BB3  00CF               	movwf	??___ftadd+3
 12835  0BB4  084F               	movf	??___ftadd+3,w
 12836  0BB5  00D2               	movwf	___ftadd@exp1
 12837  0BB6  0849               	movf	___ftadd@f2,w
 12838  0BB7  00CC               	movwf	??___ftadd
 12839  0BB8  084A               	movf	___ftadd@f2+1,w
 12840  0BB9  00CD               	movwf	??___ftadd+1
 12841  0BBA  084B               	movf	___ftadd@f2+2,w
 12842  0BBB  00CE               	movwf	??___ftadd+2
 12843  0BBC  1003               	clrc
 12844  0BBD  0D4D               	rlf	??___ftadd+1,w
 12845  0BBE  0D4E               	rlf	??___ftadd+2,w
 12846  0BBF  00CF               	movwf	??___ftadd+3
 12847  0BC0  084F               	movf	??___ftadd+3,w
 12848  0BC1  00D1               	movwf	___ftadd@exp2
 12849  0BC2  0852               	movf	___ftadd@exp1,w
 12850  0BC3  1903               	btfsc	3,2
 12851  0BC4  2BD1               	goto	i1l2640
 12852  0BC5  0851               	movf	___ftadd@exp2,w
 12853  0BC6  0252               	subwf	___ftadd@exp1,w
 12854  0BC7  1803               	skipnc
 12855  0BC8  2BD8               	goto	i1l2644
 12856  0BC9  0352               	decf	___ftadd@exp1,w
 12857  0BCA  3AFF               	xorlw	255
 12858  0BCB  0751               	addwf	___ftadd@exp2,w
 12859  0BCC  00CC               	movwf	??___ftadd
 12860  0BCD  3019               	movlw	25
 12861  0BCE  024C               	subwf	??___ftadd,w
 12862  0BCF  1C03               	skipc
 12863  0BD0  2BD8               	goto	i1l2644
 12864  0BD1                     i1l2640:	
 12865  0BD1  0849               	movf	___ftadd@f2,w
 12866  0BD2  00C6               	movwf	?___ftadd
 12867  0BD3  084A               	movf	___ftadd@f2+1,w
 12868  0BD4  00C7               	movwf	?___ftadd+1
 12869  0BD5  084B               	movf	___ftadd@f2+2,w
 12870  0BD6  00C8               	movwf	?___ftadd+2
 12871  0BD7  0008               	return
 12872  0BD8                     i1l2644:	
 12873  0BD8  0851               	movf	___ftadd@exp2,w
 12874  0BD9  1903               	btfsc	3,2
 12875  0BDA  0008               	return
 12876  0BDB  0852               	movf	___ftadd@exp1,w
 12877  0BDC  0251               	subwf	___ftadd@exp2,w
 12878  0BDD  1803               	skipnc
 12879  0BDE  2BE7               	goto	i1l2650
 12880  0BDF  0351               	decf	___ftadd@exp2,w
 12881  0BE0  3AFF               	xorlw	255
 12882  0BE1  0752               	addwf	___ftadd@exp1,w
 12883  0BE2  00CC               	movwf	??___ftadd
 12884  0BE3  3019               	movlw	25
 12885  0BE4  024C               	subwf	??___ftadd,w
 12886  0BE5  1803               	btfsc	3,0
 12887  0BE6  0008               	return
 12888  0BE7                     i1l2650:	
 12889  0BE7  3006               	movlw	6
 12890  0BE8  00CC               	movwf	??___ftadd
 12891  0BE9  084C               	movf	??___ftadd,w
 12892  0BEA  00D0               	movwf	___ftadd@sign
 12893  0BEB  1BC8               	btfsc	___ftadd@f1+2,7
 12894  0BEC  17D0               	bsf	___ftadd@sign,7
 12895  0BED  1BCB               	btfsc	___ftadd@f2+2,7
 12896  0BEE  1750               	bsf	___ftadd@sign,6
 12897  0BEF  17C7               	bsf	___ftadd@f1+1,7
 12898  0BF0  30FF               	movlw	255
 12899  0BF1  05C6               	andwf	___ftadd@f1,f
 12900  0BF2  30FF               	movlw	255
 12901  0BF3  05C7               	andwf	___ftadd@f1+1,f
 12902  0BF4  3000               	movlw	0
 12903  0BF5  05C8               	andwf	___ftadd@f1+2,f
 12904  0BF6  17CA               	bsf	___ftadd@f2+1,7
 12905  0BF7  30FF               	movlw	255
 12906  0BF8  05C9               	andwf	___ftadd@f2,f
 12907  0BF9  30FF               	movlw	255
 12908  0BFA  05CA               	andwf	___ftadd@f2+1,f
 12909  0BFB  3000               	movlw	0
 12910  0BFC  05CB               	andwf	___ftadd@f2+2,f
 12911  0BFD  0851               	movf	___ftadd@exp2,w
 12912  0BFE  0252               	subwf	___ftadd@exp1,w
 12913  0BFF  1803               	skipnc
 12914  0C00  2C23               	goto	i1l2672
 12915  0C01                     i1l2662:	
 12916  0C01  3001               	movlw	1
 12917  0C02                     u279_25:	
 12918  0C02  35C9               	lslf	___ftadd@f2,f
 12919  0C03  0DCA               	rlf	___ftadd@f2+1,f
 12920  0C04  0DCB               	rlf	___ftadd@f2+2,f
 12921  0C05  0B89               	decfsz	9,f
 12922  0C06  2C02               	goto	u279_25
 12923  0C07  3001               	movlw	1
 12924  0C08  02D1               	subwf	___ftadd@exp2,f
 12925  0C09  0851               	movf	___ftadd@exp2,w
 12926  0C0A  0652               	xorwf	___ftadd@exp1,w
 12927  0C0B  1903               	skipnz
 12928  0C0C  2C1E               	goto	i1l2670
 12929  0C0D  3001               	movlw	1
 12930  0C0E  02D0               	subwf	___ftadd@sign,f
 12931  0C0F  0850               	movf	___ftadd@sign,w
 12932  0C10  3907               	andlw	7
 12933  0C11  1903               	btfsc	3,2
 12934  0C12  2C1E               	goto	i1l2670
 12935  0C13  2C01               	goto	i1l2662
 12936  0C14                     i1l2668:	
 12937  0C14  3001               	movlw	1
 12938  0C15                     u282_25:	
 12939  0C15  36C8               	lsrf	___ftadd@f1+2,f
 12940  0C16  0CC7               	rrf	___ftadd@f1+1,f
 12941  0C17  0CC6               	rrf	___ftadd@f1,f
 12942  0C18  0B89               	decfsz	9,f
 12943  0C19  2C15               	goto	u282_25
 12944  0C1A  3001               	movlw	1
 12945  0C1B  00CC               	movwf	??___ftadd
 12946  0C1C  084C               	movf	??___ftadd,w
 12947  0C1D  07D2               	addwf	___ftadd@exp1,f
 12948  0C1E                     i1l2670:	
 12949  0C1E  0852               	movf	___ftadd@exp1,w
 12950  0C1F  0651               	xorwf	___ftadd@exp2,w
 12951  0C20  1903               	btfsc	3,2
 12952  0C21  2C48               	goto	i1l908
 12953  0C22  2C14               	goto	i1l2668
 12954  0C23                     i1l2672:	
 12955  0C23  0852               	movf	___ftadd@exp1,w
 12956  0C24  0251               	subwf	___ftadd@exp2,w
 12957  0C25  1803               	skipnc
 12958  0C26  2C48               	goto	i1l908
 12959  0C27                     i1l2674:	
 12960  0C27  3001               	movlw	1
 12961  0C28                     u285_25:	
 12962  0C28  35C6               	lslf	___ftadd@f1,f
 12963  0C29  0DC7               	rlf	___ftadd@f1+1,f
 12964  0C2A  0DC8               	rlf	___ftadd@f1+2,f
 12965  0C2B  0B89               	decfsz	9,f
 12966  0C2C  2C28               	goto	u285_25
 12967  0C2D  3001               	movlw	1
 12968  0C2E  02D2               	subwf	___ftadd@exp1,f
 12969  0C2F  0851               	movf	___ftadd@exp2,w
 12970  0C30  0652               	xorwf	___ftadd@exp1,w
 12971  0C31  1903               	skipnz
 12972  0C32  2C44               	goto	i1l2682
 12973  0C33  3001               	movlw	1
 12974  0C34  02D0               	subwf	___ftadd@sign,f
 12975  0C35  0850               	movf	___ftadd@sign,w
 12976  0C36  3907               	andlw	7
 12977  0C37  1903               	btfsc	3,2
 12978  0C38  2C44               	goto	i1l2682
 12979  0C39  2C27               	goto	i1l2674
 12980  0C3A                     i1l2680:	
 12981  0C3A  3001               	movlw	1
 12982  0C3B                     u288_25:	
 12983  0C3B  36CB               	lsrf	___ftadd@f2+2,f
 12984  0C3C  0CCA               	rrf	___ftadd@f2+1,f
 12985  0C3D  0CC9               	rrf	___ftadd@f2,f
 12986  0C3E  0B89               	decfsz	9,f
 12987  0C3F  2C3B               	goto	u288_25
 12988  0C40  3001               	movlw	1
 12989  0C41  00CC               	movwf	??___ftadd
 12990  0C42  084C               	movf	??___ftadd,w
 12991  0C43  07D1               	addwf	___ftadd@exp2,f
 12992  0C44                     i1l2682:	
 12993  0C44  0852               	movf	___ftadd@exp1,w
 12994  0C45  0651               	xorwf	___ftadd@exp2,w
 12995  0C46  1D03               	skipz
 12996  0C47  2C3A               	goto	i1l2680
 12997  0C48                     i1l908:	
 12998  0C48  1FD0               	btfss	___ftadd@sign,7
 12999  0C49  2C5A               	goto	i1l2686
 13000  0C4A  30FF               	movlw	255
 13001  0C4B  06C6               	xorwf	___ftadd@f1,f
 13002  0C4C  30FF               	movlw	255
 13003  0C4D  06C7               	xorwf	___ftadd@f1+1,f
 13004  0C4E  30FF               	movlw	255
 13005  0C4F  06C8               	xorwf	___ftadd@f1+2,f
 13006  0C50  3001               	movlw	1
 13007  0C51  07C6               	addwf	___ftadd@f1,f
 13008  0C52  3000               	movlw	0
 13009  0C53  1803               	skipnc
 13010  0C54  3001               	movlw	1
 13011  0C55  07C7               	addwf	___ftadd@f1+1,f
 13012  0C56  3000               	movlw	0
 13013  0C57  1803               	skipnc
 13014  0C58  3001               	movlw	1
 13015  0C59  07C8               	addwf	___ftadd@f1+2,f
 13016  0C5A                     i1l2686:	
 13017  0C5A  1F50               	btfss	___ftadd@sign,6
 13018  0C5B  2C6C               	goto	i1l2690
 13019  0C5C  30FF               	movlw	255
 13020  0C5D  06C9               	xorwf	___ftadd@f2,f
 13021  0C5E  30FF               	movlw	255
 13022  0C5F  06CA               	xorwf	___ftadd@f2+1,f
 13023  0C60  30FF               	movlw	255
 13024  0C61  06CB               	xorwf	___ftadd@f2+2,f
 13025  0C62  3001               	movlw	1
 13026  0C63  07C9               	addwf	___ftadd@f2,f
 13027  0C64  3000               	movlw	0
 13028  0C65  1803               	skipnc
 13029  0C66  3001               	movlw	1
 13030  0C67  07CA               	addwf	___ftadd@f2+1,f
 13031  0C68  3000               	movlw	0
 13032  0C69  1803               	skipnc
 13033  0C6A  3001               	movlw	1
 13034  0C6B  07CB               	addwf	___ftadd@f2+2,f
 13035  0C6C                     i1l2690:	
 13036  0C6C  01D0               	clrf	___ftadd@sign
 13037  0C6D  0846               	movf	___ftadd@f1,w
 13038  0C6E  07C9               	addwf	___ftadd@f2,f
 13039  0C6F  0847               	movf	___ftadd@f1+1,w
 13040  0C70  3DCA               	addwfc	___ftadd@f2+1,f
 13041  0C71  0848               	movf	___ftadd@f1+2,w
 13042  0C72  3DCB               	addwfc	___ftadd@f2+2,f
 13043  0C73  1FCB               	btfss	___ftadd@f2+2,7
 13044  0C74  2C87               	goto	i1l2700
 13045  0C75  30FF               	movlw	255
 13046  0C76  06C9               	xorwf	___ftadd@f2,f
 13047  0C77  30FF               	movlw	255
 13048  0C78  06CA               	xorwf	___ftadd@f2+1,f
 13049  0C79  30FF               	movlw	255
 13050  0C7A  06CB               	xorwf	___ftadd@f2+2,f
 13051  0C7B  3001               	movlw	1
 13052  0C7C  07C9               	addwf	___ftadd@f2,f
 13053  0C7D  3000               	movlw	0
 13054  0C7E  1803               	skipnc
 13055  0C7F  3001               	movlw	1
 13056  0C80  07CA               	addwf	___ftadd@f2+1,f
 13057  0C81  3000               	movlw	0
 13058  0C82  1803               	skipnc
 13059  0C83  3001               	movlw	1
 13060  0C84  07CB               	addwf	___ftadd@f2+2,f
 13061  0C85  01D0               	clrf	___ftadd@sign
 13062  0C86  0AD0               	incf	___ftadd@sign,f
 13063  0C87                     i1l2700:	
 13064  0C87  0849               	movf	___ftadd@f2,w
 13065  0C88  00F0               	movwf	___ftpack@arg
 13066  0C89  084A               	movf	___ftadd@f2+1,w
 13067  0C8A  00F1               	movwf	___ftpack@arg+1
 13068  0C8B  084B               	movf	___ftadd@f2+2,w
 13069  0C8C  00F2               	movwf	___ftpack@arg+2
 13070  0C8D  0852               	movf	___ftadd@exp1,w
 13071  0C8E  00CC               	movwf	??___ftadd
 13072  0C8F  084C               	movf	??___ftadd,w
 13073  0C90  00F3               	movwf	___ftpack@exp
 13074  0C91  0850               	movf	___ftadd@sign,w
 13075  0C92  00CD               	movwf	??___ftadd+1
 13076  0C93  084D               	movf	??___ftadd+1,w
 13077  0C94  00F4               	movwf	___ftpack@sign
 13078  0C95  3196  26B8         	fcall	___ftpack
 13079  0C97  0870               	movf	?___ftpack,w
 13080  0C98  0140               	movlb	0	; select bank0
 13081  0C99  00C6               	movwf	?___ftadd
 13082  0C9A  0871               	movf	?___ftpack+1,w
 13083  0C9B  00C7               	movwf	?___ftadd+1
 13084  0C9C  0872               	movf	?___ftpack+2,w
 13085  0C9D  00C8               	movwf	?___ftadd+2
 13086  0C9E  0008               	return
 13087  0C9F                     __end_of___ftadd:	
 13088                           
 13089                           	psect	text40
 13090  1F5F                     __ptext40:	
 13091 ;; *************** function ___ftneg *****************
 13092 ;; Defined at:
 13093 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 13094 ;; Parameters:    Size  Location     Type
 13095 ;;  f1              3    0[COMMON] float 
 13096 ;; Auto vars:     Size  Location     Type
 13097 ;;		None
 13098 ;; Return value:  Size  Location     Type
 13099 ;;                  3    0[COMMON] float 
 13100 ;; Registers used:
 13101 ;;		wreg
 13102 ;; Tracked objects:
 13103 ;;		On entry : 0/0
 13104 ;;		On exit  : 0/0
 13105 ;;		Unchanged: 0/0
 13106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13107 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13110 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13111 ;;Total ram usage:        3 bytes
 13112 ;; Hardware stack levels used:    1
 13113 ;; This function calls:
 13114 ;;		Nothing
 13115 ;; This function is called by:
 13116 ;;		_sprintf
 13117 ;; This function uses a non-reentrant model
 13118 ;;
 13119                           
 13120                           
 13121                           ;psect for function ___ftneg
 13122  1F5F                     ___ftneg:	
 13123                           
 13124                           ;incstack = 0
 13125                           ; Regs used in ___ftneg: [wreg]
 13126  1F5F  0872               	movf	___ftneg@f1+2,w
 13127  1F60  0471               	iorwf	___ftneg@f1+1,w
 13128  1F61  0470               	iorwf	___ftneg@f1,w
 13129  1F62  1903               	skipnz
 13130  1F63  0008               	return
 13131  1F64  3080               	movlw	128
 13132  1F65  06F2               	xorwf	___ftneg@f1+2,f
 13133  1F66  0008               	return
 13134  1F67                     __end_of___ftneg:	
 13135                           
 13136                           	psect	text41
 13137  14BA                     __ptext41:	
 13138 ;; *************** function ___ftge *****************
 13139 ;; Defined at:
 13140 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 13141 ;; Parameters:    Size  Location     Type
 13142 ;;  ff1             3    0[COMMON] float 
 13143 ;;  ff2             3    3[COMMON] float 
 13144 ;; Auto vars:     Size  Location     Type
 13145 ;;		None
 13146 ;; Return value:  Size  Location     Type
 13147 ;;		None               void
 13148 ;; Registers used:
 13149 ;;		wreg, status,2, status,0
 13150 ;; Tracked objects:
 13151 ;;		On entry : 0/0
 13152 ;;		On exit  : 0/0
 13153 ;;		Unchanged: 0/0
 13154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13155 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13157 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13158 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13159 ;;Total ram usage:        9 bytes
 13160 ;; Hardware stack levels used:    1
 13161 ;; This function calls:
 13162 ;;		Nothing
 13163 ;; This function is called by:
 13164 ;;		_sprintf
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168                           
 13169                           ;psect for function ___ftge
 13170  14BA                     ___ftge:	
 13171                           
 13172                           ;incstack = 0
 13173                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 13174  14BA  1FF2               	btfss	___ftge@ff1+2,7
 13175  14BB  2CD0               	goto	i1l3010
 13176  14BC  0970               	comf	___ftge@ff1,w
 13177  14BD  00F6               	movwf	??___ftge
 13178  14BE  0971               	comf	___ftge@ff1+1,w
 13179  14BF  00F7               	movwf	??___ftge+1
 13180  14C0  0972               	comf	___ftge@ff1+2,w
 13181  14C1  00F8               	movwf	??___ftge+2
 13182  14C2  0AF6               	incf	??___ftge,f
 13183  14C3  1903               	skipnz
 13184  14C4  0AF7               	incf	??___ftge+1,f
 13185  14C5  1903               	skipnz
 13186  14C6  0AF8               	incf	??___ftge+2,f
 13187  14C7  3000               	movlw	0
 13188  14C8  0776               	addwf	??___ftge,w
 13189  14C9  00F0               	movwf	___ftge@ff1
 13190  14CA  3000               	movlw	0
 13191  14CB  3D77               	addwfc	??___ftge+1,w
 13192  14CC  00F1               	movwf	___ftge@ff1+1
 13193  14CD  3080               	movlw	128
 13194  14CE  3D78               	addwfc	??___ftge+2,w
 13195  14CF  00F2               	movwf	___ftge@ff1+2
 13196  14D0                     i1l3010:	
 13197  14D0  1FF5               	btfss	___ftge@ff2+2,7
 13198  14D1  2CE6               	goto	i1l3014
 13199  14D2  0973               	comf	___ftge@ff2,w
 13200  14D3  00F6               	movwf	??___ftge
 13201  14D4  0974               	comf	___ftge@ff2+1,w
 13202  14D5  00F7               	movwf	??___ftge+1
 13203  14D6  0975               	comf	___ftge@ff2+2,w
 13204  14D7  00F8               	movwf	??___ftge+2
 13205  14D8  0AF6               	incf	??___ftge,f
 13206  14D9  1903               	skipnz
 13207  14DA  0AF7               	incf	??___ftge+1,f
 13208  14DB  1903               	skipnz
 13209  14DC  0AF8               	incf	??___ftge+2,f
 13210  14DD  3000               	movlw	0
 13211  14DE  0776               	addwf	??___ftge,w
 13212  14DF  00F3               	movwf	___ftge@ff2
 13213  14E0  3000               	movlw	0
 13214  14E1  3D77               	addwfc	??___ftge+1,w
 13215  14E2  00F4               	movwf	___ftge@ff2+1
 13216  14E3  3080               	movlw	128
 13217  14E4  3D78               	addwfc	??___ftge+2,w
 13218  14E5  00F5               	movwf	___ftge@ff2+2
 13219  14E6                     i1l3014:	
 13220  14E6  3080               	movlw	128
 13221  14E7  06F2               	xorwf	___ftge@ff1+2,f
 13222  14E8  3080               	movlw	128
 13223  14E9  06F5               	xorwf	___ftge@ff2+2,f
 13224  14EA  0875               	movf	___ftge@ff2+2,w
 13225  14EB  0272               	subwf	___ftge@ff1+2,w
 13226  14EC  1D03               	skipz
 13227  14ED  0008               	return
 13228  14EE  0874               	movf	___ftge@ff2+1,w
 13229  14EF  0271               	subwf	___ftge@ff1+1,w
 13230  14F0  1D03               	skipz
 13231  14F1  0008               	return
 13232  14F2  0873               	movf	___ftge@ff2,w
 13233  14F3  0270               	subwf	___ftge@ff1,w
 13234  14F4  0008               	return
 13235  14F5                     __end_of___ftge:	
 13236                           
 13237                           	psect	text42
 13238  1661                     __ptext42:	
 13239 ;; *************** function _nokia_refresh_line *****************
 13240 ;; Defined at:
 13241 ;;		line 331 in file "Nokia_5110.c"
 13242 ;; Parameters:    Size  Location     Type
 13243 ;;  y               1    wreg     unsigned char 
 13244 ;; Auto vars:     Size  Location     Type
 13245 ;;  y               1   16[BANK0 ] unsigned char 
 13246 ;;  x               1   17[BANK0 ] unsigned char 
 13247 ;; Return value:  Size  Location     Type
 13248 ;;                  1    wreg      void 
 13249 ;; Registers used:
 13250 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13251 ;; Tracked objects:
 13252 ;;		On entry : 0/0
 13253 ;;		On exit  : 0/0
 13254 ;;		Unchanged: 0/0
 13255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13257 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13258 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13259 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13260 ;;Total ram usage:       10 bytes
 13261 ;; Hardware stack levels used:    1
 13262 ;; Hardware stack levels required when called:    2
 13263 ;; This function calls:
 13264 ;;		___awmod
 13265 ;;		i1___wmul
 13266 ;;		i1_nokia_write_command
 13267 ;;		i1_nokia_write_data
 13268 ;; This function is called by:
 13269 ;;		_TMR0_ISR
 13270 ;; This function uses a non-reentrant model
 13271 ;;
 13272                           
 13273                           
 13274                           ;psect for function _nokia_refresh_line
 13275  1661                     _nokia_refresh_line:	
 13276                           
 13277                           ;incstack = 0
 13278                           ; Regs used in _nokia_refresh_line: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13279                           ;nokia_refresh_line@y stored from wreg
 13280  1661  0140               	movlb	0	; select bank0
 13281  1662  00B0               	movwf	nokia_refresh_line@y
 13282                           
 13283                           ;Nokia_5110.c: 332: char x;
 13284                           ;Nokia_5110.c: 333: nokia_write_command(0x40 + y%6);
 13285  1663  3006               	movlw	6
 13286  1664  00F0               	movwf	___awmod@divisor
 13287  1665  3000               	movlw	0
 13288  1666  00F1               	movwf	___awmod@divisor+1
 13289  1667  0830               	movf	nokia_refresh_line@y,w
 13290  1668  00A8               	movwf	??_nokia_refresh_line
 13291  1669  01A9               	clrf	??_nokia_refresh_line+1
 13292  166A  0828               	movf	??_nokia_refresh_line,w
 13293  166B  00F2               	movwf	___awmod@dividend
 13294  166C  0829               	movf	??_nokia_refresh_line+1,w
 13295  166D  00F3               	movwf	___awmod@dividend+1
 13296  166E  3195  2578  3196   	fcall	___awmod
 13297  1671  0870               	movf	?___awmod,w
 13298  1672  3E40               	addlw	64
 13299  1673  319F  276F  3196   	fcall	i1_nokia_write_command
 13300                           
 13301                           ;Nokia_5110.c: 334: nokia_write_command(0x80);
 13302  1676  3080               	movlw	128
 13303  1677  319F  276F  3196   	fcall	i1_nokia_write_command
 13304                           
 13305                           ;Nokia_5110.c: 335: for(x=0;x<84;x++){
 13306  167A  0140               	movlb	0	; select bank0
 13307  167B  01B1               	clrf	nokia_refresh_line@x
 13308  167C                     L13:	
 13309  167C  3054               	movlw	84
 13310  167D  0231               	subwf	nokia_refresh_line@x,w
 13311  167E  1803               	btfsc	3,0
 13312  167F  0008               	return
 13313                           
 13314                           ;Nokia_5110.c: 336: nokia_write_data(buffer[x][y%6]);
 13315  1680  0831               	movf	nokia_refresh_line@x,w
 13316  1681  00A8               	movwf	??_nokia_refresh_line
 13317  1682  01A9               	clrf	??_nokia_refresh_line+1
 13318  1683  0828               	movf	??_nokia_refresh_line,w
 13319  1684  00A4               	movwf	i1___wmul@multiplier
 13320  1685  0829               	movf	??_nokia_refresh_line+1,w
 13321  1686  00A5               	movwf	i1___wmul@multiplier+1
 13322  1687  3006               	movlw	6
 13323  1688  00A6               	movwf	i1___wmul@multiplicand
 13324  1689  3000               	movlw	0
 13325  168A  00A7               	movwf	i1___wmul@multiplicand+1
 13326  168B  3193  239E  3196   	fcall	i1___wmul
 13327  168E  30F8               	movlw	248
 13328  168F  0140               	movlb	0	; select bank0
 13329  1690  00AA               	movwf	??_nokia_refresh_line+2
 13330  1691  3025               	movlw	37
 13331  1692  00AB               	movwf	??_nokia_refresh_line+3
 13332  1693  0824               	movf	?i1___wmul,w
 13333  1694  072A               	addwf	??_nokia_refresh_line+2,w
 13334  1695  00AC               	movwf	??_nokia_refresh_line+4
 13335  1696  0825               	movf	?i1___wmul+1,w
 13336  1697  3D2B               	addwfc	??_nokia_refresh_line+3,w
 13337  1698  00AD               	movwf	??_nokia_refresh_line+5
 13338  1699  3006               	movlw	6
 13339  169A  00F0               	movwf	___awmod@divisor
 13340  169B  3000               	movlw	0
 13341  169C  00F1               	movwf	___awmod@divisor+1
 13342  169D  0830               	movf	nokia_refresh_line@y,w
 13343  169E  00AE               	movwf	??_nokia_refresh_line+6
 13344  169F  01AF               	clrf	??_nokia_refresh_line+7
 13345  16A0  082E               	movf	??_nokia_refresh_line+6,w
 13346  16A1  00F2               	movwf	___awmod@dividend
 13347  16A2  082F               	movf	??_nokia_refresh_line+7,w
 13348  16A3  00F3               	movwf	___awmod@dividend+1
 13349  16A4  3195  2578  3196   	fcall	___awmod
 13350  16A7  0870               	movf	?___awmod,w
 13351  16A8  0140               	movlb	0	; select bank0
 13352  16A9  072C               	addwf	??_nokia_refresh_line+4,w
 13353  16AA  0086               	movwf	6
 13354  16AB  0871               	movf	?___awmod+1,w
 13355  16AC  3D2D               	addwfc	??_nokia_refresh_line+5,w
 13356  16AD  0087               	movwf	7
 13357  16AE  0801               	movf	1,w
 13358  16AF  319F  277A  3196   	fcall	i1_nokia_write_data
 13359  16B2  3001               	movlw	1
 13360  16B3  0140               	movlb	0	; select bank0
 13361  16B4  00A8               	movwf	??_nokia_refresh_line
 13362  16B5  0828               	movf	??_nokia_refresh_line,w
 13363  16B6  07B1               	addwf	nokia_refresh_line@x,f
 13364  16B7  2E7C               	goto	L13
 13365  16B8                     __end_of_nokia_refresh_line:	
 13366                           
 13367                           	psect	text43
 13368  1F7A                     __ptext43:	
 13369 ;; *************** function i1_nokia_write_data *****************
 13370 ;; Defined at:
 13371 ;;		line 364 in file "Nokia_5110.c"
 13372 ;; Parameters:    Size  Location     Type
 13373 ;;  dato            1    wreg     unsigned char 
 13374 ;; Auto vars:     Size  Location     Type
 13375 ;;  dato            1    4[COMMON] unsigned char 
 13376 ;; Return value:  Size  Location     Type
 13377 ;;                  1    wreg      void 
 13378 ;; Registers used:
 13379 ;;		wreg, status,2, status,0, pclath, cstack
 13380 ;; Tracked objects:
 13381 ;;		On entry : 0/0
 13382 ;;		On exit  : 0/0
 13383 ;;		Unchanged: 0/0
 13384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13389 ;;Total ram usage:        1 bytes
 13390 ;; Hardware stack levels used:    1
 13391 ;; Hardware stack levels required when called:    1
 13392 ;; This function calls:
 13393 ;;		i1_nokia_write_dorc
 13394 ;; This function is called by:
 13395 ;;		_nokia_refresh_line
 13396 ;; This function uses a non-reentrant model
 13397 ;;
 13398                           
 13399                           
 13400                           ;psect for function i1_nokia_write_data
 13401  1F7A                     i1_nokia_write_data:	
 13402                           
 13403                           ;incstack = 0
 13404                           ; Regs used in i1_nokia_write_data: [wreg+status,2+status,0+pclath+cstack]
 13405                           ;i1nokia_write_data@dato stored from wreg
 13406  1F7A  00F4               	movwf	i1nokia_write_data@dato
 13407                           
 13408                           ;Nokia_5110.c: 366: do { LATCbits.LATC2 = 1; } while(0);
 13409  1F7B  0140               	movlb	0	; select bank0
 13410  1F7C  151A               	bsf	26,2	;volatile
 13411                           
 13412                           ;Nokia_5110.c: 369: do { LATCbits.LATC1 = 0; } while(0);
 13413  1F7D  109A               	bcf	26,1	;volatile
 13414                           
 13415                           ;Nokia_5110.c: 371: nokia_write_dorc(dato);
 13416  1F7E  0874               	movf	i1nokia_write_data@dato,w
 13417  1F7F  3194  2412         	fcall	i1_nokia_write_dorc
 13418                           
 13419                           ;Nokia_5110.c: 373: do { LATCbits.LATC1 = 1; } while(0);
 13420  1F81  0140               	movlb	0	; select bank0
 13421  1F82  149A               	bsf	26,1	;volatile
 13422                           
 13423                           ;Nokia_5110.c: 376: do { LATCbits.LATC3 = 1; } while(0);
 13424  1F83  159A               	bsf	26,3	;volatile
 13425  1F84  0008               	return
 13426  1F85                     __end_ofi1_nokia_write_data:	
 13427                           
 13428                           	psect	text44
 13429  1F6F                     __ptext44:	
 13430 ;; *************** function i1_nokia_write_command *****************
 13431 ;; Defined at:
 13432 ;;		line 341 in file "Nokia_5110.c"
 13433 ;; Parameters:    Size  Location     Type
 13434 ;;  comando         1    wreg     unsigned char 
 13435 ;; Auto vars:     Size  Location     Type
 13436 ;;  comando         1    4[COMMON] unsigned char 
 13437 ;; Return value:  Size  Location     Type
 13438 ;;                  1    wreg      void 
 13439 ;; Registers used:
 13440 ;;		wreg, status,2, status,0, pclath, cstack
 13441 ;; Tracked objects:
 13442 ;;		On entry : 0/0
 13443 ;;		On exit  : 0/0
 13444 ;;		Unchanged: 0/0
 13445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13447 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13449 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13450 ;;Total ram usage:        1 bytes
 13451 ;; Hardware stack levels used:    1
 13452 ;; Hardware stack levels required when called:    1
 13453 ;; This function calls:
 13454 ;;		i1_nokia_write_dorc
 13455 ;; This function is called by:
 13456 ;;		_nokia_refresh_line
 13457 ;; This function uses a non-reentrant model
 13458 ;;
 13459                           
 13460                           
 13461                           ;psect for function i1_nokia_write_command
 13462  1F6F                     i1_nokia_write_command:	
 13463                           
 13464                           ;incstack = 0
 13465                           ; Regs used in i1_nokia_write_command: [wreg+status,2+status,0+pclath+cstack]
 13466                           ;i1nokia_write_command@comando stored from wreg
 13467  1F6F  00F4               	movwf	i1nokia_write_command@comando
 13468                           
 13469                           ;Nokia_5110.c: 343: do { LATCbits.LATC2 = 0; } while(0);
 13470  1F70  0140               	movlb	0	; select bank0
 13471  1F71  111A               	bcf	26,2	;volatile
 13472                           
 13473                           ;Nokia_5110.c: 346: do { LATCbits.LATC1 = 0; } while(0);
 13474  1F72  109A               	bcf	26,1	;volatile
 13475                           
 13476                           ;Nokia_5110.c: 349: nokia_write_dorc(comando);
 13477  1F73  0874               	movf	i1nokia_write_command@comando,w
 13478  1F74  3194  2412         	fcall	i1_nokia_write_dorc
 13479                           
 13480                           ;Nokia_5110.c: 350: do { LATCbits.LATC1 = 1; } while(0);
 13481  1F76  0140               	movlb	0	; select bank0
 13482  1F77  149A               	bsf	26,1	;volatile
 13483                           
 13484                           ;Nokia_5110.c: 353: do { LATCbits.LATC3 = 1; } while(0);
 13485  1F78  159A               	bsf	26,3	;volatile
 13486  1F79  0008               	return
 13487  1F7A                     __end_ofi1_nokia_write_command:	
 13488                           
 13489                           	psect	text45
 13490  1412                     __ptext45:	
 13491 ;; *************** function i1_nokia_write_dorc *****************
 13492 ;; Defined at:
 13493 ;;		line 388 in file "Nokia_5110.c"
 13494 ;; Parameters:    Size  Location     Type
 13495 ;;  n_dato          1    wreg     unsigned char 
 13496 ;; Auto vars:     Size  Location     Type
 13497 ;;  n_dato          1    1[COMMON] unsigned char 
 13498 ;;  nokia_write_    1    3[COMMON] unsigned char 
 13499 ;;  nokia_write_    1    2[COMMON] unsigned char 
 13500 ;; Return value:  Size  Location     Type
 13501 ;;                  1    wreg      void 
 13502 ;; Registers used:
 13503 ;;		wreg, status,2, status,0
 13504 ;; Tracked objects:
 13505 ;;		On entry : 0/0
 13506 ;;		On exit  : 0/0
 13507 ;;		Unchanged: 0/0
 13508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13510 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13512 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13513 ;;Total ram usage:        4 bytes
 13514 ;; Hardware stack levels used:    1
 13515 ;; This function calls:
 13516 ;;		Nothing
 13517 ;; This function is called by:
 13518 ;;		i1_nokia_write_command
 13519 ;;		i1_nokia_write_data
 13520 ;; This function uses a non-reentrant model
 13521 ;;
 13522                           
 13523                           
 13524                           ;psect for function i1_nokia_write_dorc
 13525  1412                     i1_nokia_write_dorc:	
 13526                           
 13527                           ;incstack = 0
 13528                           ; Regs used in i1_nokia_write_dorc: [wreg+status,2+status,0]
 13529                           ;i1nokia_write_dorc@n_dato stored from wreg
 13530  1412  00F1               	movwf	i1nokia_write_dorc@n_dato
 13531                           
 13532                           ;Nokia_5110.c: 391: char caa;
 13533                           ;Nokia_5110.c: 392: unsigned char data;
 13534                           ;Nokia_5110.c: 393: data=n_dato;
 13535  1413  0871               	movf	i1nokia_write_dorc@n_dato,w
 13536  1414  00F0               	movwf	??i1_nokia_write_dorc
 13537  1415  0870               	movf	??i1_nokia_write_dorc,w
 13538  1416  00F3               	movwf	i1nokia_write_dorc@data
 13539                           
 13540                           ;Nokia_5110.c: 394: for (caa=8;caa>0;caa--){
 13541  1417  3008               	movlw	8
 13542  1418  00F0               	movwf	??i1_nokia_write_dorc
 13543  1419  0870               	movf	??i1_nokia_write_dorc,w
 13544  141A  00F2               	movwf	i1nokia_write_dorc@caa
 13545  141B  0872               	movf	i1nokia_write_dorc@caa,w
 13546  141C  1903               	btfsc	3,2
 13547  141D  2C2F               	goto	i1l458
 13548  141E                     i1l448:	
 13549                           ;Nokia_5110.c: 395: do { LATCbits.LATC3 = 0; } while(0);
 13550                           
 13551  141E  0140               	movlb	0	; select bank0
 13552  141F  119A               	bcf	26,3	;volatile
 13553                           
 13554                           ;Nokia_5110.c: 399: if ((data & 0x80)==0) {
 13555  1420  1BF3               	btfsc	i1nokia_write_dorc@data,7
 13556  1421  2C24               	goto	i1l454
 13557                           
 13558                           ;Nokia_5110.c: 400: do { LATCbits.LATC4 = 0; } while(0);
 13559  1422  121A               	bcf	26,4	;volatile
 13560                           
 13561                           ;Nokia_5110.c: 403: }
 13562  1423  2C25               	goto	i1l456
 13563  1424                     i1l454:	
 13564                           ;Nokia_5110.c: 404: else {
 13565                           ;Nokia_5110.c: 405: do { LATCbits.LATC4 = 1; } while(0);
 13566                           
 13567  1424  161A               	bsf	26,4	;volatile
 13568  1425                     i1l456:	
 13569                           ;Nokia_5110.c: 408: }
 13570                           ;Nokia_5110.c: 411: do { LATCbits.LATC3 = 1; } while(0);
 13571                           
 13572  1425  159A               	bsf	26,3	;volatile
 13573                           
 13574                           ;Nokia_5110.c: 415: data = data << 1;
 13575  1426  3573               	lslf	i1nokia_write_dorc@data,w
 13576  1427  00F0               	movwf	??i1_nokia_write_dorc
 13577  1428  0870               	movf	??i1_nokia_write_dorc,w
 13578  1429  00F3               	movwf	i1nokia_write_dorc@data
 13579  142A  3001               	movlw	1
 13580  142B  02F2               	subwf	i1nokia_write_dorc@caa,f
 13581  142C  0872               	movf	i1nokia_write_dorc@caa,w
 13582  142D  1D03               	btfss	3,2
 13583  142E  2C1E               	goto	i1l448
 13584  142F                     i1l458:	
 13585                           ;Nokia_5110.c: 416: }
 13586                           ;Nokia_5110.c: 417: do { LATCbits.LATC3 = 0; } while(0);
 13587                           
 13588  142F  0140               	movlb	0	; select bank0
 13589  1430  119A               	bcf	26,3	;volatile
 13590  1431  0008               	return
 13591  1432                     __end_ofi1_nokia_write_dorc:	
 13592                           
 13593                           	psect	text46
 13594  147F                     __ptext46:	
 13595 ;; *************** function _nokia_clean_line *****************
 13596 ;; Defined at:
 13597 ;;		line 303 in file "Nokia_5110.c"
 13598 ;; Parameters:    Size  Location     Type
 13599 ;;  y               1    wreg     unsigned char 
 13600 ;; Auto vars:     Size  Location     Type
 13601 ;;  y               1   16[BANK0 ] unsigned char 
 13602 ;;  i               1   17[BANK0 ] unsigned char 
 13603 ;; Return value:  Size  Location     Type
 13604 ;;                  1    wreg      void 
 13605 ;; Registers used:
 13606 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13607 ;; Tracked objects:
 13608 ;;		On entry : 0/0
 13609 ;;		On exit  : 0/0
 13610 ;;		Unchanged: 0/0
 13611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13613 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13614 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13615 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13616 ;;Total ram usage:       10 bytes
 13617 ;; Hardware stack levels used:    1
 13618 ;; Hardware stack levels required when called:    1
 13619 ;; This function calls:
 13620 ;;		___awmod
 13621 ;;		i1___wmul
 13622 ;; This function is called by:
 13623 ;;		_TMR0_ISR
 13624 ;; This function uses a non-reentrant model
 13625 ;;
 13626                           
 13627                           
 13628                           ;psect for function _nokia_clean_line
 13629  147F                     _nokia_clean_line:	
 13630                           
 13631                           ;incstack = 0
 13632                           ; Regs used in _nokia_clean_line: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13633                           ;nokia_clean_line@y stored from wreg
 13634  147F  0140               	movlb	0	; select bank0
 13635  1480  00B0               	movwf	nokia_clean_line@y
 13636                           
 13637                           ;Nokia_5110.c: 312: char i;
 13638                           ;Nokia_5110.c: 313: for(i=0;i<84;i++){
 13639  1481  01B1               	clrf	nokia_clean_line@i
 13640  1482                     L14:	
 13641  1482  3054               	movlw	84
 13642  1483  0231               	subwf	nokia_clean_line@i,w
 13643  1484  1803               	btfsc	3,0
 13644  1485  0008               	return
 13645                           
 13646                           ;Nokia_5110.c: 314: buffer[i][y%6]=0x00;
 13647  1486  0831               	movf	nokia_clean_line@i,w
 13648  1487  00A8               	movwf	??_nokia_clean_line
 13649  1488  01A9               	clrf	??_nokia_clean_line+1
 13650  1489  0828               	movf	??_nokia_clean_line,w
 13651  148A  00A4               	movwf	i1___wmul@multiplier
 13652  148B  0829               	movf	??_nokia_clean_line+1,w
 13653  148C  00A5               	movwf	i1___wmul@multiplier+1
 13654  148D  3006               	movlw	6
 13655  148E  00A6               	movwf	i1___wmul@multiplicand
 13656  148F  3000               	movlw	0
 13657  1490  00A7               	movwf	i1___wmul@multiplicand+1
 13658  1491  3193  239E  3194   	fcall	i1___wmul
 13659  1494  30F8               	movlw	248
 13660  1495  0140               	movlb	0	; select bank0
 13661  1496  00AA               	movwf	??_nokia_clean_line+2
 13662  1497  3025               	movlw	37
 13663  1498  00AB               	movwf	??_nokia_clean_line+3
 13664  1499  0824               	movf	?i1___wmul,w
 13665  149A  072A               	addwf	??_nokia_clean_line+2,w
 13666  149B  00AC               	movwf	??_nokia_clean_line+4
 13667  149C  0825               	movf	?i1___wmul+1,w
 13668  149D  3D2B               	addwfc	??_nokia_clean_line+3,w
 13669  149E  00AD               	movwf	??_nokia_clean_line+5
 13670  149F  3006               	movlw	6
 13671  14A0  00F0               	movwf	___awmod@divisor
 13672  14A1  3000               	movlw	0
 13673  14A2  00F1               	movwf	___awmod@divisor+1
 13674  14A3  0830               	movf	nokia_clean_line@y,w
 13675  14A4  00AE               	movwf	??_nokia_clean_line+6
 13676  14A5  01AF               	clrf	??_nokia_clean_line+7
 13677  14A6  082E               	movf	??_nokia_clean_line+6,w
 13678  14A7  00F2               	movwf	___awmod@dividend
 13679  14A8  082F               	movf	??_nokia_clean_line+7,w
 13680  14A9  00F3               	movwf	___awmod@dividend+1
 13681  14AA  3195  2578  3194   	fcall	___awmod
 13682  14AD  0870               	movf	?___awmod,w
 13683  14AE  0140               	movlb	0	; select bank0
 13684  14AF  072C               	addwf	??_nokia_clean_line+4,w
 13685  14B0  0086               	movwf	6
 13686  14B1  0871               	movf	?___awmod+1,w
 13687  14B2  3D2D               	addwfc	??_nokia_clean_line+5,w
 13688  14B3  0087               	movwf	7
 13689  14B4  0181               	clrf	1
 13690  14B5  3001               	movlw	1
 13691  14B6  00A8               	movwf	??_nokia_clean_line
 13692  14B7  0828               	movf	??_nokia_clean_line,w
 13693  14B8  07B1               	addwf	nokia_clean_line@i,f
 13694  14B9  2C82               	goto	L14
 13695  14BA                     __end_of_nokia_clean_line:	
 13696                           
 13697                           	psect	text47
 13698  139E                     __ptext47:	
 13699 ;; *************** function i1___wmul *****************
 13700 ;; Defined at:
 13701 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 13702 ;; Parameters:    Size  Location     Type
 13703 ;;  multiplier      2    4[BANK0 ] unsigned int 
 13704 ;;  multiplicand    2    6[BANK0 ] unsigned int 
 13705 ;; Auto vars:     Size  Location     Type
 13706 ;;  __wmul          2   12[COMMON] unsigned int 
 13707 ;; Return value:  Size  Location     Type
 13708 ;;                  2    4[BANK0 ] unsigned int 
 13709 ;; Registers used:
 13710 ;;		wreg, status,2, status,0
 13711 ;; Tracked objects:
 13712 ;;		On entry : 0/0
 13713 ;;		On exit  : 0/0
 13714 ;;		Unchanged: 0/0
 13715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13716 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13719 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13720 ;;Total ram usage:        6 bytes
 13721 ;; Hardware stack levels used:    1
 13722 ;; This function calls:
 13723 ;;		Nothing
 13724 ;; This function is called by:
 13725 ;;		_nokia_clean_line
 13726 ;;		_nokia_refresh_line
 13727 ;;		_fround
 13728 ;;		_scale
 13729 ;;		_sprintf
 13730 ;;		i1_nokia_printchar
 13731 ;; This function uses a non-reentrant model
 13732 ;;
 13733                           
 13734                           
 13735                           ;psect for function i1___wmul
 13736  139E                     i1___wmul:	
 13737                           
 13738                           ;incstack = 0
 13739                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 13740  139E  01FC               	clrf	i1___wmul@product
 13741  139F  01FD               	clrf	i1___wmul@product+1
 13742  13A0                     i1l2764:	
 13743  13A0  0140               	movlb	0	; select bank0
 13744  13A1  1C24               	btfss	i1___wmul@multiplier,0
 13745  13A2  2BA7               	goto	i1l699
 13746  13A3  0826               	movf	i1___wmul@multiplicand,w
 13747  13A4  07FC               	addwf	i1___wmul@product,f
 13748  13A5  0827               	movf	i1___wmul@multiplicand+1,w
 13749  13A6  3DFD               	addwfc	i1___wmul@product+1,f
 13750  13A7                     i1l699:	
 13751  13A7  3001               	movlw	1
 13752  13A8                     u309_25:	
 13753  13A8  35A6               	lslf	i1___wmul@multiplicand,f
 13754  13A9  0DA7               	rlf	i1___wmul@multiplicand+1,f
 13755  13AA  0B89               	decfsz	9,f
 13756  13AB  2BA8               	goto	u309_25
 13757  13AC  3001               	movlw	1
 13758  13AD                     u310_25:	
 13759  13AD  36A5               	lsrf	i1___wmul@multiplier+1,f
 13760  13AE  0CA4               	rrf	i1___wmul@multiplier,f
 13761  13AF  0B89               	decfsz	9,f
 13762  13B0  2BAD               	goto	u310_25
 13763  13B1  0824               	movf	i1___wmul@multiplier,w
 13764  13B2  0425               	iorwf	i1___wmul@multiplier+1,w
 13765  13B3  1D03               	btfss	3,2
 13766  13B4  2BA0               	goto	i1l2764
 13767  13B5  087D               	movf	i1___wmul@product+1,w
 13768  13B6  00A5               	movwf	?i1___wmul+1
 13769  13B7  087C               	movf	i1___wmul@product,w
 13770  13B8  00A4               	movwf	?i1___wmul
 13771  13B9  0008               	return
 13772  13BA                     __end_ofi1___wmul:	
 13773                           
 13774                           	psect	text48
 13775  1578                     __ptext48:	
 13776 ;; *************** function ___awmod *****************
 13777 ;; Defined at:
 13778 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 13779 ;; Parameters:    Size  Location     Type
 13780 ;;  divisor         2    0[COMMON] int 
 13781 ;;  dividend        2    2[COMMON] int 
 13782 ;; Auto vars:     Size  Location     Type
 13783 ;;  sign            1    6[COMMON] unsigned char 
 13784 ;;  counter         1    5[COMMON] unsigned char 
 13785 ;; Return value:  Size  Location     Type
 13786 ;;                  2    0[COMMON] int 
 13787 ;; Registers used:
 13788 ;;		wreg, status,2, status,0
 13789 ;; Tracked objects:
 13790 ;;		On entry : 0/0
 13791 ;;		On exit  : 0/0
 13792 ;;		Unchanged: 0/0
 13793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13794 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13795 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13797 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13798 ;;Total ram usage:        7 bytes
 13799 ;; Hardware stack levels used:    1
 13800 ;; This function calls:
 13801 ;;		Nothing
 13802 ;; This function is called by:
 13803 ;;		_nokia_clean_line
 13804 ;;		_nokia_refresh_line
 13805 ;;		_fround
 13806 ;;		_scale
 13807 ;; This function uses a non-reentrant model
 13808 ;;
 13809                           
 13810                           
 13811                           ;psect for function ___awmod
 13812  1578                     ___awmod:	
 13813                           
 13814                           ;incstack = 0
 13815                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 13816  1578  01F6               	clrf	___awmod@sign
 13817  1579  1FF3               	btfss	___awmod@dividend+1,7
 13818  157A  2D82               	goto	i1l2604
 13819  157B  09F2               	comf	___awmod@dividend,f
 13820  157C  09F3               	comf	___awmod@dividend+1,f
 13821  157D  0AF2               	incf	___awmod@dividend,f
 13822  157E  1903               	skipnz
 13823  157F  0AF3               	incf	___awmod@dividend+1,f
 13824  1580  01F6               	clrf	___awmod@sign
 13825  1581  0AF6               	incf	___awmod@sign,f
 13826  1582                     i1l2604:	
 13827  1582  1FF1               	btfss	___awmod@divisor+1,7
 13828  1583  2D89               	goto	i1l2608
 13829  1584  09F0               	comf	___awmod@divisor,f
 13830  1585  09F1               	comf	___awmod@divisor+1,f
 13831  1586  0AF0               	incf	___awmod@divisor,f
 13832  1587  1903               	skipnz
 13833  1588  0AF1               	incf	___awmod@divisor+1,f
 13834  1589                     i1l2608:	
 13835  1589  0870               	movf	___awmod@divisor,w
 13836  158A  0471               	iorwf	___awmod@divisor+1,w
 13837  158B  1903               	btfsc	3,2
 13838  158C  2DB0               	goto	i1l2626
 13839  158D  01F5               	clrf	___awmod@counter
 13840  158E  0AF5               	incf	___awmod@counter,f
 13841  158F                     i1l2616:	
 13842  158F  1BF1               	btfsc	___awmod@divisor+1,7
 13843  1590  2D9B               	goto	i1l2618
 13844  1591  3001               	movlw	1
 13845  1592                     u264_25:	
 13846  1592  35F0               	lslf	___awmod@divisor,f
 13847  1593  0DF1               	rlf	___awmod@divisor+1,f
 13848  1594  0B89               	decfsz	9,f
 13849  1595  2D92               	goto	u264_25
 13850  1596  3001               	movlw	1
 13851  1597  00F4               	movwf	??___awmod
 13852  1598  0874               	movf	??___awmod,w
 13853  1599  07F5               	addwf	___awmod@counter,f
 13854  159A  2D8F               	goto	i1l2616
 13855  159B                     i1l2618:	
 13856  159B  0871               	movf	___awmod@divisor+1,w
 13857  159C  0273               	subwf	___awmod@dividend+1,w
 13858  159D  1D03               	skipz
 13859  159E  2DA1               	goto	u266_25
 13860  159F  0870               	movf	___awmod@divisor,w
 13861  15A0  0272               	subwf	___awmod@dividend,w
 13862  15A1                     u266_25:	
 13863  15A1  1C03               	skipc
 13864  15A2  2DA7               	goto	i1l2622
 13865  15A3  0870               	movf	___awmod@divisor,w
 13866  15A4  02F2               	subwf	___awmod@dividend,f
 13867  15A5  0871               	movf	___awmod@divisor+1,w
 13868  15A6  3BF3               	subwfb	___awmod@dividend+1,f
 13869  15A7                     i1l2622:	
 13870  15A7  3001               	movlw	1
 13871  15A8                     u267_25:	
 13872  15A8  36F1               	lsrf	___awmod@divisor+1,f
 13873  15A9  0CF0               	rrf	___awmod@divisor,f
 13874  15AA  0B89               	decfsz	9,f
 13875  15AB  2DA8               	goto	u267_25
 13876  15AC  3001               	movlw	1
 13877  15AD  02F5               	subwf	___awmod@counter,f
 13878  15AE  1D03               	btfss	3,2
 13879  15AF  2D9B               	goto	i1l2618
 13880  15B0                     i1l2626:	
 13881  15B0  0876               	movf	___awmod@sign,w
 13882  15B1  1903               	btfsc	3,2
 13883  15B2  2DB8               	goto	i1l2630
 13884  15B3  09F2               	comf	___awmod@dividend,f
 13885  15B4  09F3               	comf	___awmod@dividend+1,f
 13886  15B5  0AF2               	incf	___awmod@dividend,f
 13887  15B6  1903               	skipnz
 13888  15B7  0AF3               	incf	___awmod@dividend+1,f
 13889  15B8                     i1l2630:	
 13890  15B8  0873               	movf	___awmod@dividend+1,w
 13891  15B9  00F1               	movwf	?___awmod+1
 13892  15BA  0872               	movf	___awmod@dividend,w
 13893  15BB  00F0               	movwf	?___awmod
 13894  15BC  0008               	return
 13895  15BD                     __end_of___awmod:	
 13896                           
 13897                           	psect	text49
 13898  12F8                     __ptext49:	
 13899 ;; *************** function ___lwtoft *****************
 13900 ;; Defined at:
 13901 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 13902 ;; Parameters:    Size  Location     Type
 13903 ;;  c               2    8[COMMON] unsigned int 
 13904 ;; Auto vars:     Size  Location     Type
 13905 ;;		None
 13906 ;; Return value:  Size  Location     Type
 13907 ;;                  3    8[COMMON] float 
 13908 ;; Registers used:
 13909 ;;		wreg, status,2, status,0, pclath, cstack
 13910 ;; Tracked objects:
 13911 ;;		On entry : 0/0
 13912 ;;		On exit  : 0/0
 13913 ;;		Unchanged: 0/0
 13914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13915 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13918 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13919 ;;Total ram usage:        4 bytes
 13920 ;; Hardware stack levels used:    1
 13921 ;; Hardware stack levels required when called:    1
 13922 ;; This function calls:
 13923 ;;		___ftpack
 13924 ;; This function is called by:
 13925 ;;		_TMR0_ISR
 13926 ;; This function uses a non-reentrant model
 13927 ;;
 13928                           
 13929                           
 13930                           ;psect for function ___lwtoft
 13931  12F8                     ___lwtoft:	
 13932                           
 13933                           ;incstack = 0
 13934                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
 13935  12F8  0878               	movf	___lwtoft@c,w
 13936  12F9  00F0               	movwf	___ftpack@arg
 13937  12FA  0879               	movf	___lwtoft@c+1,w
 13938  12FB  00F1               	movwf	___ftpack@arg+1
 13939  12FC  01F2               	clrf	___ftpack@arg+2
 13940  12FD  308E               	movlw	142
 13941  12FE  00FB               	movwf	??___lwtoft
 13942  12FF  087B               	movf	??___lwtoft,w
 13943  1300  00F3               	movwf	___ftpack@exp
 13944  1301  01F4               	clrf	___ftpack@sign
 13945  1302  3196  26B8         	fcall	___ftpack
 13946  1304  0870               	movf	?___ftpack,w
 13947  1305  00F8               	movwf	?___lwtoft
 13948  1306  0871               	movf	?___ftpack+1,w
 13949  1307  00F9               	movwf	?___lwtoft+1
 13950  1308  0872               	movf	?___ftpack+2,w
 13951  1309  00FA               	movwf	?___lwtoft+2
 13952  130A  0008               	return
 13953  130B                     __end_of___lwtoft:	
 13954                           
 13955                           	psect	text50
 13956  16B8                     __ptext50:	
 13957 ;; *************** function ___ftpack *****************
 13958 ;; Defined at:
 13959 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 13960 ;; Parameters:    Size  Location     Type
 13961 ;;  arg             3    0[COMMON] unsigned um
 13962 ;;  exp             1    3[COMMON] unsigned char 
 13963 ;;  sign            1    4[COMMON] unsigned char 
 13964 ;; Auto vars:     Size  Location     Type
 13965 ;;		None
 13966 ;; Return value:  Size  Location     Type
 13967 ;;                  3    0[COMMON] float 
 13968 ;; Registers used:
 13969 ;;		wreg, status,2, status,0
 13970 ;; Tracked objects:
 13971 ;;		On entry : 0/0
 13972 ;;		On exit  : 0/0
 13973 ;;		Unchanged: 0/0
 13974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13975 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13977 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13978 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13979 ;;Total ram usage:        8 bytes
 13980 ;; Hardware stack levels used:    1
 13981 ;; This function calls:
 13982 ;;		Nothing
 13983 ;; This function is called by:
 13984 ;;		___ftadd
 13985 ;;		___ftmul
 13986 ;;		___lltoft
 13987 ;;		___lwtoft
 13988 ;; This function uses a non-reentrant model
 13989 ;;
 13990                           
 13991                           
 13992                           ;psect for function ___ftpack
 13993  16B8                     ___ftpack:	
 13994                           
 13995                           ;incstack = 0
 13996                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 13997  16B8  0873               	movf	___ftpack@exp,w
 13998  16B9  1903               	btfsc	3,2
 13999  16BA  2EC0               	goto	i1l2524
 14000  16BB  0872               	movf	___ftpack@arg+2,w
 14001  16BC  0471               	iorwf	___ftpack@arg+1,w
 14002  16BD  0470               	iorwf	___ftpack@arg,w
 14003  16BE  1D03               	skipz
 14004  16BF  2ED1               	goto	i1l2530
 14005  16C0                     i1l2524:	
 14006  16C0  3000               	movlw	0
 14007  16C1  00F0               	movwf	?___ftpack
 14008  16C2  3000               	movlw	0
 14009  16C3  00F1               	movwf	?___ftpack+1
 14010  16C4  3000               	movlw	0
 14011  16C5  00F2               	movwf	?___ftpack+2
 14012  16C6  0008               	return
 14013  16C7                     i1l2528:	
 14014  16C7  3001               	movlw	1
 14015  16C8  00F5               	movwf	??___ftpack
 14016  16C9  0875               	movf	??___ftpack,w
 14017  16CA  07F3               	addwf	___ftpack@exp,f
 14018  16CB  3001               	movlw	1
 14019  16CC                     u241_25:	
 14020  16CC  36F2               	lsrf	___ftpack@arg+2,f
 14021  16CD  0CF1               	rrf	___ftpack@arg+1,f
 14022  16CE  0CF0               	rrf	___ftpack@arg,f
 14023  16CF  0B89               	decfsz	9,f
 14024  16D0  2ECC               	goto	u241_25
 14025  16D1                     i1l2530:	
 14026  16D1  30FE               	movlw	254
 14027  16D2  0572               	andwf	___ftpack@arg+2,w
 14028  16D3  1903               	btfsc	3,2
 14029  16D4  2EEA               	goto	i1l877
 14030  16D5  2EC7               	goto	i1l2528
 14031  16D6                     i1l2532:	
 14032  16D6  3001               	movlw	1
 14033  16D7  00F5               	movwf	??___ftpack
 14034  16D8  0875               	movf	??___ftpack,w
 14035  16D9  07F3               	addwf	___ftpack@exp,f
 14036  16DA  3001               	movlw	1
 14037  16DB  07F0               	addwf	___ftpack@arg,f
 14038  16DC  3000               	movlw	0
 14039  16DD  1803               	skipnc
 14040  16DE  3001               	movlw	1
 14041  16DF  07F1               	addwf	___ftpack@arg+1,f
 14042  16E0  3000               	movlw	0
 14043  16E1  1803               	skipnc
 14044  16E2  3001               	movlw	1
 14045  16E3  07F2               	addwf	___ftpack@arg+2,f
 14046  16E4  3001               	movlw	1
 14047  16E5                     u243_25:	
 14048  16E5  36F2               	lsrf	___ftpack@arg+2,f
 14049  16E6  0CF1               	rrf	___ftpack@arg+1,f
 14050  16E7  0CF0               	rrf	___ftpack@arg,f
 14051  16E8  0B89               	decfsz	9,f
 14052  16E9  2EE5               	goto	u243_25
 14053  16EA                     i1l877:	
 14054  16EA  30FF               	movlw	255
 14055  16EB  0572               	andwf	___ftpack@arg+2,w
 14056  16EC  1903               	btfsc	3,2
 14057  16ED  2EF7               	goto	i1l2540
 14058  16EE  2ED6               	goto	i1l2532
 14059  16EF                     i1l2538:	
 14060  16EF  3001               	movlw	1
 14061  16F0  02F3               	subwf	___ftpack@exp,f
 14062  16F1  3001               	movlw	1
 14063  16F2                     u245_25:	
 14064  16F2  35F0               	lslf	___ftpack@arg,f
 14065  16F3  0DF1               	rlf	___ftpack@arg+1,f
 14066  16F4  0DF2               	rlf	___ftpack@arg+2,f
 14067  16F5  0B89               	decfsz	9,f
 14068  16F6  2EF2               	goto	u245_25
 14069  16F7                     i1l2540:	
 14070  16F7  1BF1               	btfsc	___ftpack@arg+1,7
 14071  16F8  2EFD               	goto	i1l884
 14072  16F9  3002               	movlw	2
 14073  16FA  0273               	subwf	___ftpack@exp,w
 14074  16FB  1803               	skipnc
 14075  16FC  2EEF               	goto	i1l2538
 14076  16FD                     i1l884:	
 14077  16FD  1873               	btfsc	___ftpack@exp,0
 14078  16FE  2F05               	goto	i1l885
 14079  16FF  30FF               	movlw	255
 14080  1700  05F0               	andwf	___ftpack@arg,f
 14081  1701  307F               	movlw	127
 14082  1702  05F1               	andwf	___ftpack@arg+1,f
 14083  1703  30FF               	movlw	255
 14084  1704  05F2               	andwf	___ftpack@arg+2,f
 14085  1705                     i1l885:	
 14086  1705  1003               	clrc
 14087  1706  0CF3               	rrf	___ftpack@exp,f
 14088  1707  0873               	movf	___ftpack@exp,w
 14089  1708  00F5               	movwf	??___ftpack
 14090  1709  01F6               	clrf	??___ftpack+1
 14091  170A  01F7               	clrf	??___ftpack+2
 14092  170B  3010               	movlw	16
 14093  170C                     u249_25:	
 14094  170C  35F5               	lslf	??___ftpack,f
 14095  170D  0DF6               	rlf	??___ftpack+1,f
 14096  170E  0DF7               	rlf	??___ftpack+2,f
 14097  170F  0B89               	decfsz	9,f
 14098  1710  2F0C               	goto	u249_25
 14099  1711  0875               	movf	??___ftpack,w
 14100  1712  04F0               	iorwf	___ftpack@arg,f
 14101  1713  0876               	movf	??___ftpack+1,w
 14102  1714  04F1               	iorwf	___ftpack@arg+1,f
 14103  1715  0877               	movf	??___ftpack+2,w
 14104  1716  04F2               	iorwf	___ftpack@arg+2,f
 14105  1717  0874               	movf	___ftpack@sign,w
 14106  1718  1903               	btfsc	3,2
 14107  1719  0008               	return
 14108  171A  17F2               	bsf	___ftpack@arg+2,7
 14109  171B  0008               	return
 14110  171C                     __end_of___ftpack:	
 14111                           
 14112                           	psect	text51
 14113  1F57                     __ptext51:	
 14114 ;; *************** function _ADCC_StartConversion *****************
 14115 ;; Defined at:
 14116 ;;		line 113 in file "mcc_generated_files/adcc.c"
 14117 ;; Parameters:    Size  Location     Type
 14118 ;;  channel         1    wreg     enum E12471
 14119 ;; Auto vars:     Size  Location     Type
 14120 ;;  channel         1    0[COMMON] enum E12471
 14121 ;; Return value:  Size  Location     Type
 14122 ;;                  1    wreg      void 
 14123 ;; Registers used:
 14124 ;;		wreg
 14125 ;; Tracked objects:
 14126 ;;		On entry : 0/0
 14127 ;;		On exit  : 0/0
 14128 ;;		Unchanged: 0/0
 14129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14134 ;;Total ram usage:        1 bytes
 14135 ;; Hardware stack levels used:    1
 14136 ;; This function calls:
 14137 ;;		Nothing
 14138 ;; This function is called by:
 14139 ;;		_TMR0_ISR
 14140 ;; This function uses a non-reentrant model
 14141 ;;
 14142                           
 14143                           
 14144                           ;psect for function _ADCC_StartConversion
 14145  1F57                     _ADCC_StartConversion:	
 14146                           
 14147                           ;incstack = 0
 14148                           ; Regs used in _ADCC_StartConversion: [wreg]
 14149                           ;ADCC_StartConversion@channel stored from wreg
 14150  1F57  00F0               	movwf	ADCC_StartConversion@channel
 14151                           
 14152                           ;adcc.c: 116: ADPCH = channel;
 14153  1F58  0870               	movf	ADCC_StartConversion@channel,w
 14154  1F59  0141               	movlb	1	; select bank1
 14155  1F5A  009F               	movwf	31	;volatile
 14156                           
 14157                           ;adcc.c: 119: ADCON0bits.ADON = 1;
 14158  1F5B  0142               	movlb	2	; select bank2
 14159  1F5C  1791               	bsf	17,7	;volatile
 14160                           
 14161                           ;adcc.c: 122: ADCON0bits.ADGO = 1;
 14162  1F5D  1411               	bsf	17,0	;volatile
 14163  1F5E  0008               	return
 14164  1F5F                     __end_of_ADCC_StartConversion:	
 14165                           
 14166                           	psect	text52
 14167  1F50                     __ptext52:	
 14168 ;; *************** function _ADCC_IsConversionDone *****************
 14169 ;; Defined at:
 14170 ;;		line 125 in file "mcc_generated_files/adcc.c"
 14171 ;; Parameters:    Size  Location     Type
 14172 ;;		None
 14173 ;; Auto vars:     Size  Location     Type
 14174 ;;		None
 14175 ;; Return value:  Size  Location     Type
 14176 ;;                  1    wreg      unsigned char 
 14177 ;; Registers used:
 14178 ;;		wreg, status,0
 14179 ;; Tracked objects:
 14180 ;;		On entry : 0/0
 14181 ;;		On exit  : 0/0
 14182 ;;		Unchanged: 0/0
 14183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14188 ;;Total ram usage:        0 bytes
 14189 ;; Hardware stack levels used:    1
 14190 ;; This function calls:
 14191 ;;		Nothing
 14192 ;; This function is called by:
 14193 ;;		_TMR0_ISR
 14194 ;; This function uses a non-reentrant model
 14195 ;;
 14196                           
 14197                           
 14198                           ;psect for function _ADCC_IsConversionDone
 14199  1F50                     _ADCC_IsConversionDone:	
 14200                           
 14201                           ;adcc.c: 128: return ((unsigned char)(!ADCON0bits.ADGO));
 14202                           
 14203                           ;incstack = 0
 14204                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 14205  1F50  1003               	clrc
 14206  1F51  0142               	movlb	2	; select bank2
 14207  1F52  1C11               	btfss	17,0	;volatile
 14208  1F53  1403               	setc
 14209  1F54  3000               	movlw	0
 14210  1F55  3D09               	addwfc	9,w
 14211  1F56  0008               	return
 14212  1F57                     __end_of_ADCC_IsConversionDone:	
 14213                           
 14214                           	psect	text53
 14215  1F4A                     __ptext53:	
 14216 ;; *************** function _ADCC_GetConversionResult *****************
 14217 ;; Defined at:
 14218 ;;		line 131 in file "mcc_generated_files/adcc.c"
 14219 ;; Parameters:    Size  Location     Type
 14220 ;;		None
 14221 ;; Auto vars:     Size  Location     Type
 14222 ;;		None
 14223 ;; Return value:  Size  Location     Type
 14224 ;;                  2    0[COMMON] unsigned int 
 14225 ;; Registers used:
 14226 ;;		wreg
 14227 ;; Tracked objects:
 14228 ;;		On entry : 0/0
 14229 ;;		On exit  : 0/0
 14230 ;;		Unchanged: 0/0
 14231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14236 ;;Total ram usage:        2 bytes
 14237 ;; Hardware stack levels used:    1
 14238 ;; This function calls:
 14239 ;;		Nothing
 14240 ;; This function is called by:
 14241 ;;		_TMR0_ISR
 14242 ;; This function uses a non-reentrant model
 14243 ;;
 14244                           
 14245                           
 14246                           ;psect for function _ADCC_GetConversionResult
 14247  1F4A                     _ADCC_GetConversionResult:	
 14248                           
 14249                           ;adcc.c: 134: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14250                           
 14251                           ;incstack = 0
 14252                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 14253  1F4A  0141               	movlb	1	; select bank1
 14254  1F4B  081E               	movf	30,w	;volatile
 14255  1F4C  00F1               	movwf	?_ADCC_GetConversionResult+1
 14256  1F4D  081D               	movf	29,w	;volatile
 14257  1F4E  00F0               	movwf	?_ADCC_GetConversionResult
 14258  1F4F  0008               	return
 14259  1F50                     __end_of_ADCC_GetConversionResult:	
 14260  007E                     btemp	set	126	;btemp
 14261  007E                     int$flags	set	126
 14262  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    858
    Data        13
    BSS         5
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      71
    BANK1            80     50      54
    BANK2            80     38      53
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19            8      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_1(CODE[14]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> TMR0_ISR@sbuf(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    nokia_printstr@message	PTR unsigned char  size(2) Largest target is 20
		 -> main@str_greeting(BANK2[13]), TMR0_ISR@sbuf(BANK1[20]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    i1_nokia_printchar->i1___wmul
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    _sprintf->i1___wmul
    _scale->i1___wmul
    _fround->i1___wmul
    ___ftmul->i1___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___lltoft
    _nokia_refresh_line->i1___wmul
    i1_nokia_write_data->i1_nokia_write_dorc
    i1_nokia_write_command->i1_nokia_write_dorc
    _nokia_clean_line->i1___wmul
    i1___wmul->___awdiv
    ___lwtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_TMR0_ISR
    _TMR0_ISR->_sprintf
    i1_nokia_printstr->i1_nokia_printchar
    i1_nokia_printchar->i1___wmul
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->i1___wmul
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->_fround
    _nokia_refresh_line->i1___wmul
    _nokia_clean_line->i1___wmul
    i1___wmul->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _INTERRUPT_InterruptManager->_TMR0_ISR
    _TMR0_ISR->_sprintf

Critical Paths under _main in BANK2

    _main->_nokia_printstr
    _nokia_refresh->___wmul
    _nokia_write_data->_nokia_write_dorc
    _nokia_printstr->_nokia_printchar
    _nokia_printchar->___wmul
    _nokia_init->_nokia_write_command
    _nokia_write_command->_nokia_write_dorc
    _nokia_clean_buffer->___wmul

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    8578
                                             22 BANK2     16    16      0
                  _SYSTEM_Initialize
                 _nokia_clean_buffer
                       _nokia_gotoxy
                         _nokia_init
                     _nokia_printstr
                      _nokia_refresh
 ---------------------------------------------------------------------------------
 (1) _nokia_refresh                                       10    10      0    2590
                                              6 BANK2     10    10      0
                             ___wmul
                _nokia_write_command
                   _nokia_write_data
 ---------------------------------------------------------------------------------
 (2) _nokia_write_data                                     1     1      0     136
                                              4 BANK2      1     1      0
                   _nokia_write_dorc
 ---------------------------------------------------------------------------------
 (1) _nokia_printstr                                       2     0      2    2801
                                             20 BANK2      2     0      2
                    _nokia_printchar
 ---------------------------------------------------------------------------------
 (2) _nokia_printchar                                     14    14      0    2672
                                              6 BANK2     14    14      0
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     198
                                              0 BANK2      4     3      1
 ---------------------------------------------------------------------------------
 (1) _nokia_init                                           0     0      0     613
                        _nokia_delay
                _nokia_write_command
 ---------------------------------------------------------------------------------
 (2) _nokia_write_command                                  1     1      0     136
                                              4 BANK2      1     1      0
                   _nokia_write_dorc
 ---------------------------------------------------------------------------------
 (3) _nokia_write_dorc                                     4     4      0     114
                                              0 BANK2      4     4      0
 ---------------------------------------------------------------------------------
 (2) _nokia_delay                                          2     0      2     477
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _nokia_gotoxy                                         3     2      1     170
                                              0 BANK2      3     2      1
 ---------------------------------------------------------------------------------
 (1) _nokia_clean_buffer                                  10    10      0    2318
                                              6 BANK2     10    10      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2182
                                              0 BANK2      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ADCC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0   50019
                                             69 BANK0      1     1      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                            26    26      0   50019
                                             68 BANK0      1     1      0
                                             25 BANK1     25    25      0
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                            ___ftmul
                           ___lwtoft
                   _nokia_clean_line
                 _nokia_refresh_line
                            _sprintf
                     i1_nokia_gotoxy
                   i1_nokia_printstr
 ---------------------------------------------------------------------------------
 (6) i1_nokia_printstr                                     2     0      2    1897
                                             22 BANK0      2     0      2
                  i1_nokia_printchar
 ---------------------------------------------------------------------------------
 (7) i1_nokia_printchar                                   14    14      0    1828
                                              8 BANK0     14    14      0
                           i1___bmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___bmul                                             4     3      1     144
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (6) i1_nokia_gotoxy                                       3     2      1     116
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             41    36      5   35977
                                             57 BANK0     11     6      5
                                              0 BANK1     25    25      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                           ___lwtoft (ARG)
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) _scale                                                9     6      3    8386
                                             24 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) _fround                                              14    11      3    8188
                                             24 BANK0     14    11      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) ___ftmul                                             16    10      6    3623
                                              8 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___lltoft                                             6     2      4    1829
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (7) ___fttol                                             14    10      4     411
                                             24 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftsub                                              6     0      6    2932
                                             51 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftadd                                             13     7      6    2759
                                             38 BANK0     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (7) ___ftge                                               9     3      6     560
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (6) _nokia_refresh_line                                  10    10      0    3344
                                              8 BANK0     10    10      0
                            ___awmod
                           i1___wmul
              i1_nokia_write_command
                 i1_nokia_write_data
 ---------------------------------------------------------------------------------
 (7) i1_nokia_write_data                                   1     1      0     136
                                              4 COMMON     1     1      0
                 i1_nokia_write_dorc
 ---------------------------------------------------------------------------------
 (7) i1_nokia_write_command                                1     1      0     136
                                              4 COMMON     1     1      0
                 i1_nokia_write_dorc
 ---------------------------------------------------------------------------------
 (8) i1_nokia_write_dorc                                   4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _nokia_clean_line                                    10    10      0    3050
                                              8 BANK0     10    10      0
                            ___awmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (8) i1___wmul                                             6     2      4    1392
                                             12 COMMON     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              7     3      4    1568
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___lwtoft                                             4     1      3    1782
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftpack                                             8     3      5    1707
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (6) _ADCC_StartConversion                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ADCC_GetConversionResult                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
   _nokia_clean_buffer
     ___wmul
   _nokia_gotoxy
   _nokia_init
     _nokia_delay
     _nokia_write_command
       _nokia_write_dorc
   _nokia_printstr
     _nokia_printchar
       ___bmul
       ___wmul
   _nokia_refresh
     ___wmul
     _nokia_write_command
       _nokia_write_dorc
     _nokia_write_data
       _nokia_write_dorc

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       i1___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
     _nokia_clean_line
       ___awmod
       i1___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _nokia_refresh_line
       ___awmod
       i1___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       i1_nokia_write_command
         i1_nokia_write_dorc
       i1_nokia_write_data
         i1_nokia_write_dorc
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             i1___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           i1___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         i1___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               i1___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             i1___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           i1___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___lltoft
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
       __div_to_l_ (ARG)
       __tdiv_to_l_ (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           i1___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         i1___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           i1___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         i1___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       i1___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     i1_nokia_gotoxy
     i1_nokia_printstr
       i1_nokia_printchar
         i1___bmul
         i1___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      47       5       88.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0      C0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     32      36       8       67.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     26      35      10       66.3%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19               8      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BANK20               0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BANK21               0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0      C0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 27 03:24:51 2018

                _nokia_write_command 1FA8                      ?i1_nokia_gotoxy 0070  
                     ___bmul@product 0122                          __CFG_CP$OFF 0000  
                       ___awdiv@sign 0021               __end_of_FVR_Initialize 1F45  
                ___wmul@multiplicand 0122                     i1___wmul@product 007C  
           __end_of_nokia_clean_line 14BA                         ___ftadd@exp1 0052  
                       ___ftadd@exp2 0051                          __CFG_LVP$ON 0000  
                       ___ftadd@sign 0050                                  l454 1447  
                                l463 138D                                  l464 1395  
                                l456 1449                                  l448 143F  
                                l458 1454                                  l699 13C3  
                                _idx 0154                                  _idy 0153  
            __size_of_PMD_Initialize 0008             i1nokia_write_dorc@n_dato 0071  
                       ___awmod@sign 0076                         __CFG_BORV$LO 0000  
                                wreg 0009                 ?_nokia_write_command 0070  
                      __CFG_BBEN$OFF 0000                    ?i1_nokia_printstr 0036  
            __size_of_nokia_printstr 0017                         __CFG_ZCD$OFF 0000  
                               l3600 0A68                                 l3710 080B  
                               l3606 0A88                                 l3614 0ABC  
               _ADCC_StartConversion 1F57                                 l3716 0836  
                               l3740 07FB                                 l3734 07CC  
                               l3584 0A3B                                 l3594 0A48  
                               l3850 1336                                 l2980 13BD  
                               l3880 1525                                 l2994 12E9  
                               l2998 12EF                                 STR_1 2000  
                               _LATA 0018                                 _LATB 0019  
                               _LATC 001A                   ??i1_nokia_printstr 007E  
                               u3525 13C4                                 u3535 13C9  
                               _PMD0 0796                                 _PMD1 0797  
                               _PMD2 0798                                 _PMD3 0799  
                               _PMD4 079A                                 _PMD5 079B  
                               u4830 1505                                 u4845 1533  
                               u4857 1F46                     nokia_printchar@c 0133  
                               _WPUA 1F39                                 _WPUB 1F44  
                               _WPUC 1F4F                                 _WPUE 1F65  
                      __CFG_FCMEN$ON 0000                                 _main 14F5  
                       ___ftpack@arg 0070                         ___ftpack@exp 0073  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               start 0014                    i1_nokia_printchar 0AE3  
                       _sprintf$1457 00A0                        __CFG_CSWEN$ON 0000  
                  ___bmul@multiplier 0123                        __CFG_MCLRE$ON 0000  
                       ___ftmul@cntr 0036                         ___ftmul@sign 0037  
                 ?i1_nokia_printchar 0070                         ___fttol@exp1 0045  
                       ___fttol@lval 0041             __size_of_nokia_printchar 00B7  
            __end_of_TMR0_Initialize 131F                      ?_FVR_Initialize 0070  
     __size_of_OSCILLATOR_Initialize 000B        __end_of_OSCILLATOR_Initialize 1F90  
                              _ADCAP 010E                                _ADACT 0117  
                              ?_main 0070                                _ADCLK 0118  
                              _ADCNT 0099                                _ADPCH 009F  
                              _ADREF 0116                      __end_of___awdiv 1661  
                ??i1_nokia_printchar 0028                      __end_of___ftadd 0C9F  
                      __CFG_WDTE$OFF 0000                      __end_of___awmod 15BD  
                              _ADRPT 009A                      __end_of___ftneg 1F67  
                    __end_of___lldiv 160F                      __end_of___ftmul 0976  
                    ___awdiv@divisor 0077                      __end_of___llmod 1578  
                    __end_of___ftsub 13F4                      __end_of___fttol 08C2  
                              i1l329 000F                                i1l602 0583  
                              i1l604 05BD                                i1l454 1424  
                              i1l463 1356                                i1l456 1425  
                              i1l448 141E                                i1l552 0109  
                              i1l464 135E                                i1l537 0061  
                              i1l458 142F                                i1l558 022A  
                              i1l908 0C48                                i1l934 09A7  
                              i1l944 0A20                                i1l865 0DB0  
                              i1l699 13A7                                i1l884 16FD  
                              i1l885 1705                                i1l877 16EA  
                              i1l985 08A8                      ___awdiv@counter 0020  
                              _OSCEN 0891                                _TMR0H 059D  
                              _TMR0L 059C                                _TRISA 0012  
                              _TRISB 0013                                _TRISC 0014  
                       ___lltoft@exp 007D              ??_ADCC_IsConversionDone 0070  
              ??_nokia_write_command 0124                     __end_of_TMR0_ISR 1800  
                      __CFG_WRTB$OFF 0000                        __CFG_WRTC$OFF 0000  
                      __CFG_WRTD$OFF 0000                      __end_of_dpowers 1828  
              ?_ADCC_StartConversion 0070                                _scale 0DBC  
                    __end_of_isdigit 1FDD                        ___ftpack@sign 0074  
                              _state 00D4                                main@i 0144  
                   __end_ofi1___bmul 1FEE                     __end_ofi1___wmul 13BA  
                              status 0003                  i1___wmul@multiplier 0024  
                              wtemp0 007E                      __end_of_sprintf 0654  
                     __CFG_LCDPEN$ON 0000            __end_ofi1_nokia_printchar 0BA9  
     __size_ofi1_nokia_write_command 000B        __end_ofi1_nokia_write_command 1F7A  
                 _nokia_clean_buffer 0800                      __initialization 0016  
                       __end_of_main 1536                __end_of_nokia_refresh 0800  
                     __CFG_SAFEN$OFF 0000                  ?_nokia_clean_buffer 0070  
        ?_INTERRUPT_InterruptManager 0070                               ??_main 0136  
                      ___fttol@sign1 0040                 __size_of__tdiv_to_l_ 00B6  
                       ?_nokia_delay 0120                               _ADACCH 0097  
                             _ADACCL 0096                               _ADACCU 0098  
                             _ADACQH 010D                               _ADACQL 010C  
                             _ADCON0 0111                               _ADCON1 0112  
                             _ADCON2 0113                               _ADCON3 0114  
                             _ADERRH 0091                               _ADERRL 0090  
                   ___llmod@dividend 0074                               _ADLTHH 008D  
                             ?_scale 0038                               _ADLTHL 008C  
                             _ADRESH 009E                               _ADRESL 009D  
                             _ADPREH 0110                               _ADPREL 010F  
                             _ADSTAT 0115                               _ADUTHH 008F  
                   ___awdiv@dividend 0079                               _ADUTHL 008E  
               ??_nokia_clean_buffer 0126                               _ANSELA 1F38  
                             _ANSELB 1F43                               _ANSELC 1F4E  
                   __end_of___ftpack 171C                   __CFG_RSTOSC$HFINT1 0000  
                             _T0CON0 059E                               _T0CON1 059F  
       i1nokia_write_command@comando 0074                     __end_of___lltoft 147F  
                             i1l3010 14D0                               i1l3100 15FB  
                             i1l3014 14E6                               i1l3104 1606  
                             i1l3120 1564                               _ODCONA 1F3A  
                             i1l3114 153E                               _ODCONB 1F45  
                             _ODCONC 1F50                               i1l3116 154C  
                             i1l3124 156F                               i1l3132 145B  
                             i1l3038 13DE                               i1l3134 146B  
                             i1l3080 08B9                               i1l3048 0854  
                             i1l3320 0135                               i1l3312 010B  
                             i1l3304 00CC                               i1l2530 16D1  
                             i1l3074 089F                               i1l3066 0884  
                             i1l3090 15CD                               i1l3330 016A  
                             i1l3314 0121                               i1l3306 0104  
                             i1l2540 16F7                               i1l2532 16D6  
                             i1l2524 16C0                               i1l2604 1582  
                             i1l2700 0C87                               i1l3076 08AB  
                             i1l3068 0892                               i1l3092 15DB  
                             i1l3404 0390                               i1l3180 0B23  
                             i1l3164 0AF2                               i1l2630 15B8  
                             i1l2622 15A7                               i1l2710 08D9  
                             i1l3510 0618                               i1l3502 05ED  
                             i1l3406 0394                               i1l3174 0B02  
                             i1l2528 16C7                               i1l2616 158F  
                             i1l2608 1589                               i1l2640 0BD1  
                             i1l2560 161A                               i1l3512 061C  
                             i1l3504 05F0                               i1l3440 0448  
                             i1l3432 03E1                               i1l3416 03A6  
                             i1l3360 025F                               i1l3280 0072  
                             i1l3272 005C                               i1l2538 16EF  
                             i1l2618 159B                               i1l2626 15B0  
                             i1l2650 0BE7                               i1l3434 0435  
                             i1l3418 03C5                               i1l3354 0213  
                             i1l3346 01C6                               i1l3186 0B43  
                             i1l3194 0B7D                               i1l2644 0BD8  
                             i1l2900 09E2                               i1l2740 0946  
                             i1l2732 0932                               i1l2716 08EF  
                             i1l3508 0615                               i1l3452 047E  
                             i1l3372 02AA                               i1l3284 007F  
                             i1l3292 00B9                               i1l3524 0041  
                             i1l2670 0C1E                               i1l2662 0C01  
                             i1l2910 09FC                               i1l2566 1625  
                             i1l3518 0633                               i1l3446 0465  
                             i1l3382 02DE                               i1l3526 064F  
                             i1l3278 0068                               i1l2680 0C3A  
                             i1l2672 0C23                               i1l2920 0A23  
                             i1l2912 0A0A                               i1l2592 165C  
                             i1l2584 164B                               i1l2576 162D  
                             i1l2744 094E                               i1l2728 092A  
                             i1l2816 078C                               i1l2808 0714  
                             i1l2832 0E65                               i1l3472 055C  
                             i1l3456 048D                               i1l3392 0332  
                             i1l3368 0296                               i1l3480 0574  
                             i1l2690 0C6C                               i1l2682 0C44  
                             i1l2674 0C27                               i1l2930 0CBD  
                             i1l2578 1639                               i1l2850 0F84  
                             i1l2842 0EE1                               i1l3386 032C  
                             i1l2764 13A0                               i1l2668 0C14  
                             i1l2588 1654                               i1l3812 131F  
                             i1l2686 0C5A                               i1l2918 0A17  
                             i1l2838 0EC4                               i1l3478 056F  
                             i1l3398 0369                               i1l2782 1FE5  
                             i1l2936 0CDA                               i1l2856 0FE3  
                             i1l3496 05D4                               i1l3488 05A1  
                     __CFG_WDTCCS$SC 0000                               i1l2954 0D6D  
                             i1l2946 0D25                               i1l2778 1FDF  
                             i1l3826 179B                               i1l3842 17FC  
                             i1l2972 0DA7                               i1l2964 0D8C  
                             i1l2892 09C8                               i1l2868 1FDB  
                             i1l2974 0DB3                               i1l2966 0D9A  
                             i1l2878 098F                               _TABLA1 11F4  
                             _TABLA2 1104                               u310_25 13AD  
                             u302_25 094F                               u303_25 0955  
                             u241_25 16CC                               u330_25 09E3  
                             _FVRCON 090C                               u243_25 16E5  
                             u420_25 03B2                               u412_25 0294  
                             u404_25 017F                               u245_25 16F2  
                             u309_25 13A8                               u341_25 0D26  
                             u342_25 0D50                               u334_25 09FD  
                             u254_25 1630                               u431_25 0597  
                             u423_25 0453                               u415_25 035D  
                             u264_25 1592                               u328_25 09C9  
                             u256_25 163A                               u432_25 05B5  
                             u424_25 0461                               u408_25 0236  
                             u249_25 170C                               u337_25 0A18  
                             u329_25 09D9                               u257_25 1644  
                             u409_25 026B                     __end_of___lwtoft 130B  
                             u266_25 15A1                               u282_25 0C15  
                             u346_25 0D8D                               u258_25 164C  
                             u267_25 15A8                               u363_25 085B  
                             u380_25 1541                               u436_25 05E5  
                             u285_25 0C28                               u373_25 15D0  
                             u349_25 0DA8                               u437_25 0604  
                             u366_25 0885                               u382_25 155A  
                 i1_nokia_write_data 1F7A                               u279_25 0C02  
                             u375_25 15DC                               u383_25 1565  
                             u295_25 08FB                               u288_25 0C3B  
                             u376_25 15F0                               u296_25 090B  
                             u369_25 08A0                               u377_25 15FC  
                             u385_25 1460                               u298_25 0933  
                             u299_25 0939                               _OSCFRQ 0893  
                    __CFG_BBSIZE$512 0000                   i1_nokia_write_dorc 1412  
         ??_ADCC_GetConversionResult 0072                       __CFG_PWRTE$OFF 0000  
                ?i1_nokia_write_data 0070                  ?i1_nokia_write_dorc 0070  
                   __end_of__powers_ 184F                               ___bmul 12E6  
                             ___ftge 14BA                               ___wmul 13BA  
                          ??___awdiv 007B                            ??___ftadd 004C  
                     __CFG_STVREN$ON 0000                            ??___awmod 0074  
                          ??___ftneg 0073                            ??___lldiv 0078  
                          ??___ftmul 002E                            ??___llmod 0078  
                          ??___ftsub 007E                            ??___fttol 003C  
                             _buffer 25F8                     ?_TMR0_Initialize 0070  
                             _fround 0654                     ___awdiv@quotient 0022  
                    ___awmod@divisor 0070                      ___awmod@counter 0075  
              ___ftmul@f3_as_product 0033                      _ADCC_Initialize 1368  
                     _PMD_Initialize 1F67                            ??_isdigit 0070  
                  ??_nokia_printchar 0126                   i1nokia_printchar@c 0035  
               ??i1_nokia_write_data 0074                 ??i1_nokia_write_dorc 0070  
           __end_of_nokia_write_data 1FC2             __end_of_nokia_write_dorc 1457  
             ??_ADCC_StartConversion 0070                       _nokia_printstr 1336  
                          ??_sprintf 005E                    _SYSTEM_Initialize 1FEE  
            __end_of__initialization 0035                           ___ftadd@f1 0046  
                         ___ftadd@f2 0049           __size_ofi1_nokia_printchar 00C6  
                         ___ftge@ff1 0070                           ___ftge@ff2 0073  
                 ?_SYSTEM_Initialize 0070                     ??i1_nokia_gotoxy 0071  
                         ___ftneg@f1 0070                  ___bmul@multiplicand 0120  
                  __end_of_Font10x12 1104                           ___ftmul@f1 0028  
                         ___ftmul@f2 002B                           ___ftsub@f1 0056  
                         ___ftsub@f2 0053                           ___fttol@f1 0038  
                     __pcstackCOMMON 0070                         __pidataBANK2 1FC2  
                ??_SYSTEM_Initialize 0120                            ?_TMR0_ISR 0070  
                         ___lltoft@c 0078                        __end_of_scale 1000  
             __end_of_PMD_Initialize 1F6F                            ?i1___bmul 0070  
                         ___lwtoft@c 0078                    ?_nokia_clean_line 0070  
                          ?i1___wmul 0024                  nokia_write_dorc@caa 0122  
                         __div_to_l_ 0C9F                   ??_nokia_clean_line 0028  
             __end_of_nokia_printstr 134D          ADCC_StartConversion@channel 0070  
                   i1___bmul@product 0072           __end_of_nokia_refresh_line 16B8  
                    __div_to_l_@exp1 0025                      __div_to_l_@cntr 0024  
                            ??_scale 003B            __end_of_SYSTEM_Initialize 2000  
                    __div_to_l_@quot 0020                         sprintf@width 00A8  
             nokia_write_dorc@n_dato 0121                           __pbssBANK0 0066  
                         __pbssBANK1 00D4                           __pbssBANK2 0153  
                    __CFG_VBATEN$OFF 0000                        __div_to_l_@f1 0070  
                      __div_to_l_@f2 0073                     ??_FVR_Initialize 0120  
                         __pmaintext 14F5            __size_ofi1_nokia_printstr 0017  
                            ?___bmul 0120                        ?_nokia_gotoxy 0120  
                            ?___ftge 0070                              ?___wmul 0120  
                         ??_TMR0_ISR 0064                      __CFG_PPS1WAY$ON 0000  
            __end_of_ADCC_Initialize 1383                           __pintentry 0004  
                            _ADFLTRH 0095                              _ADFLTRL 0094  
                            ?_fround 0038                              _ADPREVH 009C  
                            _ADPREVL 009B                            ?___ftpack 0070  
                            _ADSTPTH 0093                              _ADSTPTL 0092  
                         ??i1___bmul 0071                      ?_PMD_Initialize 0070  
                          ?___lltoft 0078                           ??i1___wmul 007C  
                          ?___lwtoft 0078                      ?_nokia_printstr 0134  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCSTAT 0890                              _OSCTUNE 0892  
     __size_of_ADCC_IsConversionDone 0007        __end_of_ADCC_IsConversionDone 1F57  
               __size_of_nokia_delay 0005                    __end_of__npowers_ 1876  
                         _scale$1456 003D                       ??_nokia_gotoxy 0121  
                    __size_of___bmul 0012                      __size_of___ftge 003B  
                            ___awdiv 160F                              ___ftadd 0BA9  
                            ___awmod 1578                              ___ftneg 1F5F  
                            ___lldiv 15BD                      __size_of___wmul 001C  
                            ___ftmul 08C2                              ___llmod 1536  
                            ___ftsub 13D6                              ___fttol 083B  
                         ??___ftpack 0075                      __size_of_fround 0165  
        __end_of_nokia_write_command 1FB5                           ??___lltoft 007C  
                            __ptext1 07B9                              __ptext2 1FB5  
                            __ptext3 1336                              __ptext4 0A2C  
                            __ptext5 12E6                              __ptext6 171C  
                            __ptext7 1FA8                              __ptext8 1432  
                            __ptext9 1F45                           ??___lwtoft 007B  
                    __CFG_WRTAPP$OFF 0000                          ?__div_to_l_ 0070  
                            _dpowers 1800                _OSCILLATOR_Initialize 1F85  
                            _isdigit 1FCF                     ___awmod@dividend 0072  
           ??_PIN_MANAGER_Initialize 0120                      __CFG_WRTSAF$OFF 0000  
                i1___bmul@multiplier 0073           __size_of_SYSTEM_Initialize 0012  
                            _sprintf 0039                              clrloop0 1F91  
               end_of_initialization 0035                    nokia_clean_line@i 0031  
                  nokia_clean_line@y 0030                           _nokia_init 171C  
                            init_ram 1F9C                              initloop 1F9D  
                    ___lldiv@divisor 0070                      ___lldiv@counter 007D  
              i1_nokia_write_command 1F6F                      _nokia_printchar 0A2C  
                         main@F12667 0146                     ?_ADCC_Initialize 0070  
                     __tdiv_to_l_@f1 0070                       __tdiv_to_l_@f2 0073  
             i1nokia_write_data@dato 0074                i1___wmul@multiplicand 0026  
              __CFG_WDTCPS$WDTCPS_31 0000                        ??__tdiv_to_l_ 0076  
                      nokia_gotoxy@x 0122                        nokia_gotoxy@y 0120  
                  ?_nokia_write_data 0070                    ?_nokia_write_dorc 0070  
             i1nokia_write_dorc@data 0073                     __CFG_FEXTOSC$OFF 0000  
        __size_of_nokia_clean_buffer 003B                   ??_nokia_write_data 0124  
                 ??_nokia_write_dorc 0120               __size_of_nokia_refresh 0047  
                     __end_of_TABLA1 12E4                       __end_of_TABLA2 11F4  
                __size_of__div_to_l_ 011D                     i1_nokia_printstr 131F  
                        ___ftmul@exp 0032                 _timer0ReloadVal16bit 00D2  
                     __end_of___bmul 12F8                       __end_of___ftge 14F5  
                          _Font10x12 1000                       __end_of___wmul 13D6  
               nokia_write_data@dato 0124                    __size_of_TMR0_ISR 007C  
             ?_OSCILLATOR_Initialize 0070                       __end_of_fround 07B9  
  __size_of_ADCC_GetConversionResult 0006            ?_ADCC_GetConversionResult 0070  
                  __size_ofi1___bmul 0011                         _LCD_contrast 0066  
                start_initialization 0016                    __size_ofi1___wmul 001C  
        __size_ofi1_nokia_write_data 000B             __size_of_TMR0_Initialize 0014  
        __size_ofi1_nokia_write_dorc 0020      __size_of_PIN_MANAGER_Initialize 001E  
                __end_of__tdiv_to_l_ 0A2C                 __end_of_nokia_gotoxy 139E  
      __size_of_ADCC_StartConversion 0008                 nokia_write_dorc@data 0123  
          __size_of_nokia_clean_line 003B                          ?_nokia_init 0070  
                    ___llmod@divisor 0070              __end_of_nokia_printchar 0AE3  
                    ___llmod@counter 0079               ?i1_nokia_write_command 0070  
                 _nokia_refresh_line 1661                     __CFG_LPBOREN$OFF 0000  
                           ??___bmul 0121                     ??_PMD_Initialize 0120  
                           ??___ftge 0076                             ??___wmul 0124  
                        __pdataBANK2 0146                        _nokia_refresh 07B9  
                ?_nokia_refresh_line 0070                             ??_fround 003B  
                   ??_nokia_printstr 0136                        sprintf@tmpval 00AC  
                         fround@prec 0045                    __size_of___ftpack 0064  
                        __pbssBIGRAM 25F8                    __size_of___lltoft 0028  
                          ___latbits 0003                    __size_of___lwtoft 0013  
                      __pcstackBANK0 0020                        __pcstackBANK1 00A0  
                      __pcstackBANK2 0120                         _isdigit$1138 0070  
                    i1nokia_gotoxy@x 0072                      i1nokia_gotoxy@y 0070  
               ??_nokia_refresh_line 0028                          sprintf@flag 00AA  
                        sprintf@fval 00B3                          sprintf@prec 00B6  
                          __pnvBANK1 00D2               _PIN_MANAGER_Initialize 13F4  
                      _TMR0_ISR$1453 00CD                             ?___awdiv 0077  
                           ?___ftadd 0046                             ?___awmod 0070  
                           ?___ftneg 0070                             ?___lldiv 0070  
                           ?___ftmul 0028                             ?___llmod 0070  
                     ?_nokia_refresh 0070                             ?___ftsub 0053  
                          __npowers_ 184F                  nokia_refresh_line@x 0031  
                           ?___fttol 0038                  nokia_refresh_line@y 0030  
            __size_ofi1_nokia_gotoxy 001B         ??_INTERRUPT_InterruptManager 0065  
                        __tdiv_to_l_ 0976                  __size_of_nokia_init 0068  
                       ??__div_to_l_ 0076                             ?_isdigit 0070  
                      ??_nokia_delay 0122                             ?_sprintf 0059  
                   nokia_delay@count 0120                       __size_of_scale 0244  
              _ADCC_IsConversionDone 1F50                    ??_TMR0_Initialize 0120  
                     ___wmul@product 0124                             _LATBbits 0019  
                           _LATCbits 001A                     ?_nokia_printchar 0070  
                          clear_ram0 1F90                             _PIE0bits 0716  
              i1___bmul@multiplicand 0070  __size_of_INTERRUPT_InterruptManager 0010  
                           _PIR0bits 070C                   __end_of__div_to_l_ 0DBC  
            i1nokia_printstr@message 0036                             _TMR0_ISR 1784  
                           i1___bmul 1FDD                           _ADCON0bits 0111  
              i1nokia_write_dorc@caa 0072                           _ADCON1bits 0112  
                         _ADCON2bits 0113                           _ADCON3bits 0114  
                  ___wmul@multiplier 0120                             i1___wmul 139E  
              __size_of_nokia_gotoxy 001B              __size_of_FVR_Initialize 0004  
           __end_ofi1_nokia_printstr 1336         __size_of_nokia_write_command 000D  
                __end_of_nokia_delay 1F4A                     _nokia_clean_line 147F  
                nokia_clean_buffer@i 012E                  nokia_clean_buffer@j 012F  
                         _ADSTATbits 0115     __end_of_ADCC_GetConversionResult 1F50  
          __size_of_nokia_write_data 000D            __size_of_nokia_write_dorc 0025  
                    ??_nokia_refresh 0126                         _nokia_gotoxy 1383  
            ??_OSCILLATOR_Initialize 0120                     __size_of___awdiv 0052  
                   __size_of___ftadd 00F6                     __size_of___awmod 0045  
                   __size_of___ftneg 0008                     __size_of___lldiv 0052  
                   __size_of___ftmul 00B4                     __size_of___llmod 0042  
                   __size_of___ftsub 001E                     __size_of___fttol 0087  
                           ___ftpack 16B8                          _fround$1454 0042  
                        _fround$1455 003F                             ___lltoft 1457  
                           ___lwtoft 12F8                         TMR0_ISR@sbuf 00B9  
                         sprintf@exp 00B0                           sprintf@val 00A4  
                         _T0CON0bits 059E             __size_of_ADCC_Initialize 001B  
                   __size_of_isdigit 000E           __end_of_nokia_clean_buffer 083B  
                           __ptext10 1383                             __ptext11 0800  
                           __ptext12 13BA                             __ptext21 1784  
                           __ptext13 1FEE                             __ptext30 08C2  
                           __ptext22 131F                             __ptext14 130B  
                           __ptext31 160F                             __ptext23 0AE3  
                           __ptext15 1F67                             __ptext40 1F5F  
                           __ptext32 0976                             __ptext24 1FDD  
                           __ptext16 13F4                             __ptext41 14BA  
                           __ptext33 0C9F                             __ptext25 134D  
                           __ptext17 1F85                             __ptext50 16B8  
                           __ptext42 1661                             __ptext34 1457  
                           __ptext26 0039                             __ptext18 1F41  
                           __ptext51 1F57                             __ptext43 1F7A  
                           __ptext35 1536                             __ptext27 0DBC  
                           __ptext19 1368                             __ptext52 1F50  
                           __ptext44 1F6F                             __ptext36 15BD  
                           __ptext28 1FCF                             __ptext53 1F4A  
                           __ptext45 1412                             __ptext37 083B  
                           __ptext29 0654                             __ptext46 147F  
                           __ptext38 13D6                             __ptext47 139E  
                           __ptext39 0BA9                             __ptext48 1578  
                           __ptext49 12F8                             __powers_ 1828  
             ?_ADCC_IsConversionDone 0070                     __size_of_sprintf 061B  
                       ??_nokia_init 0125              ??i1_nokia_write_command 0074  
                      __size_of_main 0041                 __CFG_WDTCWS$WDTCWS_7 0000  
       __end_of_ADCC_StartConversion 1F5F                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 0014           _INTERRUPT_InterruptManager 0004  
                     i1_nokia_gotoxy 134D                nokia_printstr@message 0134  
         __end_ofi1_nokia_write_data 1F85                        _ADCACTPPSbits 1EC3  
         __end_ofi1_nokia_write_dorc 1432                   __end_of_nokia_init 1784  
                         _INTCONbits 000B                           _FVRCONbits 090C  
                        _nokia_delay 1F45                             isdigit@c 0071  
                           scale@scl 0040             nokia_printchar@char_data 0130  
                           intlevel1 0000                            sprintf@ap 00A3  
                   __tdiv_to_l_@exp1 0025                     __tdiv_to_l_@cntr 0024  
                          sprintf@sp 00B2                     __tdiv_to_l_@quot 0020  
                   ___lldiv@dividend 0074              ?_PIN_MANAGER_Initialize 0070  
                  __CFG_CLKOUTEN$OFF 0000               TMR0_ISR@convertedValue 00D0  
             __end_ofi1_nokia_gotoxy 1368             _ADCC_GetConversionResult 1F4A  
                       ?__tdiv_to_l_ 0070                        __pstringtext1 1000  
                      __pstringtext2 1104                        __pstringtext3 11F4  
                      __pstringtext4 1800                        __pstringtext5 1828  
                      __pstringtext6 184F                        __pstringtext7 2000  
                      __pstringtext8 0000                       _FVR_Initialize 1F41  
            nokia_printchar@char_pos 0131              nokia_printchar@char_row 0132  
         i1nokia_printchar@char_data 0032                             sprintf@c 00B8  
                           sprintf@f 0059                     ___lldiv@quotient 0079  
                    _TMR0_Initialize 130B                     main@str_greeting 0137  
          i1nokia_printchar@char_pos 0033            i1nokia_printchar@char_row 0034  
     __end_of_PIN_MANAGER_Initialize 1412                    ??_ADCC_Initialize 0120  
        __size_of_nokia_refresh_line 0057           nokia_write_command@comando 0124  
                     nokia_refresh@i 012E                       nokia_refresh@j 012F  
                   _nokia_write_data 1FB5                     _nokia_write_dorc 1432  
